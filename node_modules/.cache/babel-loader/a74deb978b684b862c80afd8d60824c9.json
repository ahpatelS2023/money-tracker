{"ast":null,"code":"import _defineProperty from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _handleActions;\n\nimport { handleActions } from 'redux-actions';\nimport { openImportFile, discardImportFile, startDataImport, importFileReadSuccess, importLineProcessed, importFailure } from '../../actions/ui/dataImport';\nvar initialState = {\n  isFileSelected: false,\n  file: undefined,\n  error: '',\n  isProcessing: false,\n  linesToProcess: Infinity,\n  linesProcessed: 0\n};\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, openImportFile, function (state, action) {\n  return _objectSpread({}, state, {\n    isFileSelected: true,\n    file: action.payload\n  });\n}), _defineProperty(_handleActions, discardImportFile, function (state) {\n  return _objectSpread({}, state, {\n    isFileSelected: false,\n    file: undefined\n  });\n}), _defineProperty(_handleActions, startDataImport, function (state) {\n  return _objectSpread({}, state, {\n    isProcessing: true\n  });\n}), _defineProperty(_handleActions, importFileReadSuccess, function (state, action) {\n  return _objectSpread({}, state, {\n    linesToProcess: action.payload\n  });\n}), _defineProperty(_handleActions, importLineProcessed, function (state, action) {\n  return _objectSpread({}, state, {\n    linesProcessed: action.payload\n  });\n}), _defineProperty(_handleActions, importFailure, function (state, action) {\n  return _objectSpread({}, state, {\n    isFileSelected: false,\n    isProcessing: false,\n    file: undefined,\n    error: action.payload.message\n  });\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/reducers/ui/dataImport.js"],"names":["handleActions","openImportFile","discardImportFile","startDataImport","importFileReadSuccess","importLineProcessed","importFailure","initialState","isFileSelected","file","undefined","error","isProcessing","linesToProcess","Infinity","linesProcessed","state","action","payload","message"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,mBALF,EAMEC,aANF,QAOO,6BAPP;AASA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,KADG;AAEnBC,EAAAA,IAAI,EAAEC,SAFa;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,YAAY,EAAE,KAJK;AAKnBC,EAAAA,cAAc,EAAEC,QALG;AAMnBC,EAAAA,cAAc,EAAE;AANG,CAArB;AASA,eAAef,aAAa,uDAEvBC,cAFuB,EAEN,UAACe,KAAD,EAAQC,MAAR;AAAA,2BACbD,KADa;AAEhBR,IAAAA,cAAc,EAAE,IAFA;AAGhBC,IAAAA,IAAI,EAAEQ,MAAM,CAACC;AAHG;AAAA,CAFM,mCAOvBhB,iBAPuB,EAOH,UAAAc,KAAK;AAAA,2BACrBA,KADqB;AAExBR,IAAAA,cAAc,EAAE,KAFQ;AAGxBC,IAAAA,IAAI,EAAEC;AAHkB;AAAA,CAPF,mCAYvBP,eAZuB,EAYL,UAAAa,KAAK;AAAA,2BAAUA,KAAV;AAAiBJ,IAAAA,YAAY,EAAE;AAA/B;AAAA,CAZA,mCAavBR,qBAbuB,EAaC,UAACY,KAAD,EAAQC,MAAR;AAAA,2BACpBD,KADoB;AAEvBH,IAAAA,cAAc,EAAEI,MAAM,CAACC;AAFA;AAAA,CAbD,mCAiBvBb,mBAjBuB,EAiBD,UAACW,KAAD,EAAQC,MAAR;AAAA,2BAClBD,KADkB;AAErBD,IAAAA,cAAc,EAAEE,MAAM,CAACC;AAFF;AAAA,CAjBC,mCAqBvBZ,aArBuB,EAqBP,UAACU,KAAD,EAAQC,MAAR;AAAA,2BACZD,KADY;AAEfR,IAAAA,cAAc,EAAE,KAFD;AAGfI,IAAAA,YAAY,EAAE,KAHC;AAIfH,IAAAA,IAAI,EAAEC,SAJS;AAKfC,IAAAA,KAAK,EAAEM,MAAM,CAACC,OAAP,CAAeC;AALP;AAAA,CArBO,oBA6B1BZ,YA7B0B,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\nimport {\n  openImportFile,\n  discardImportFile,\n  startDataImport,\n  importFileReadSuccess,\n  importLineProcessed,\n  importFailure\n} from '../../actions/ui/dataImport';\n\nconst initialState = {\n  isFileSelected: false,\n  file: undefined,\n  error: '',\n  isProcessing: false,\n  linesToProcess: Infinity,\n  linesProcessed: 0\n};\n\nexport default handleActions(\n  {\n    [openImportFile]: (state, action) => ({\n      ...state,\n      isFileSelected: true,\n      file: action.payload\n    }),\n    [discardImportFile]: state => ({\n      ...state,\n      isFileSelected: false,\n      file: undefined\n    }),\n    [startDataImport]: state => ({ ...state, isProcessing: true }),\n    [importFileReadSuccess]: (state, action) => ({\n      ...state,\n      linesToProcess: action.payload\n    }),\n    [importLineProcessed]: (state, action) => ({\n      ...state,\n      linesProcessed: action.payload\n    }),\n    [importFailure]: (state, action) => ({\n      ...state,\n      isFileSelected: false,\n      isProcessing: false,\n      file: undefined,\n      error: action.payload.message\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}