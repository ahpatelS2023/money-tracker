{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Transaction/List/TransactionItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\nimport { Icon, Button, Label } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport { stateToForm, TransationKindT } from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\nvar Expense = TransationKindT.Expense,\n    Transfer = TransationKindT.Transfer,\n    Income = TransationKindT.Income;\n\nvar TransactionItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransactionItem, _React$Component);\n\n  function TransactionItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransactionItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransactionItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleEditClick = function () {\n      _this.props.openTransactionInModal(stateToForm(_this.props.transaction));\n    };\n\n    return _this;\n  }\n\n  _createClass(TransactionItem, [{\n    key: \"render\",\n    value: function render() {\n      var transaction = this.props.transaction;\n      return React.createElement(\"div\", {\n        className: \"transaction-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"transaction-item__date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, format(toLocalTimestamp(transaction.date), 'DD MMM')), React.createElement(\"div\", {\n        className: \"transaction-item__info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, transaction.accountName, this.renderArrow(), transaction.kind === Transfer && transaction.linkedAccountName, transaction.tags && transaction.tags.map(function (tag) {\n        return React.createElement(Label, {\n          key: tag,\n          content: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }), React.createElement(\"span\", {\n        className: \"transaction-item__info__note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, transaction.note)), React.createElement(\"div\", {\n        className: \"transaction-item__amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Amount, {\n        value: transaction.amount,\n        code: transaction.currency,\n        showColor: transaction.kind !== Transfer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), transaction.kind === Transfer && this.renderLinkedAmount()), React.createElement(\"div\", {\n        className: \"transaction-item__edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Button, {\n        circular: true,\n        basic: true,\n        icon: \"pencil\",\n        onClick: this.handleEditClick,\n        disabled: transaction.archived,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderArrow\",\n    value: function renderArrow() {\n      var _this$props$transacti = this.props.transaction,\n          kind = _this$props$transacti.kind,\n          tags = _this$props$transacti.tags,\n          note = _this$props$transacti.note;\n      if (kind !== Transfer && !tags && !note) return;\n      return React.createElement(Icon, {\n        color: \"grey\",\n        name: kind === Income ? 'arrow left' : 'arrow right',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderLinkedAmount\",\n    value: function renderLinkedAmount() {\n      var _this$props$transacti2 = this.props.transaction,\n          linkedAmount = _this$props$transacti2.linkedAmount,\n          linkedCurrency = _this$props$transacti2.linkedCurrency,\n          currency = _this$props$transacti2.currency;\n      if (!linkedCurrency || linkedCurrency === currency) return;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"grey\",\n        name: \"arrow right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Amount, {\n        value: linkedAmount,\n        code: linkedCurrency,\n        showColor: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TransactionItem;\n}(React.Component);\n\nTransactionItem.propTypes = {\n  transaction: PropTypes.shape({\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\n    id: PropTypes.string,\n    accountId: PropTypes.string,\n    accountName: PropTypes.string,\n    amount: PropTypes.number,\n    currency: PropTypes.string,\n    linkedAccountId: PropTypes.string,\n    linkedAccountName: PropTypes.string,\n    linkedAmount: PropTypes.number,\n    linkedCurrency: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    note: PropTypes.string,\n    date: PropTypes.number\n  }),\n  openTransactionInModal: PropTypes.func\n};\nexport default TransactionItem;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Transaction/List/TransactionItem.js"],"names":["React","PropTypes","format","Icon","Button","Label","Amount","stateToForm","TransationKindT","toLocalTimestamp","Expense","Transfer","Income","TransactionItem","handleEditClick","props","openTransactionInModal","transaction","date","accountName","renderArrow","kind","linkedAccountName","tags","map","tag","note","amount","currency","renderLinkedAmount","archived","linkedAmount","linkedCurrency","Component","propTypes","shape","oneOf","id","string","accountId","number","linkedAccountId","arrayOf","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\nimport { Icon, Button, Label } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport { stateToForm, TransationKindT } from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\n\nconst { Expense, Transfer, Income } = TransationKindT;\n\nclass TransactionItem extends React.Component {\n  handleEditClick = () => {\n    this.props.openTransactionInModal(stateToForm(this.props.transaction));\n  };\n\n  render() {\n    const { transaction } = this.props;\n    return (\n      <div className=\"transaction-item\">\n        <div className=\"transaction-item__date\">\n          {format(toLocalTimestamp(transaction.date), 'DD MMM')}\n        </div>\n        <div className=\"transaction-item__info\">\n          {transaction.accountName}\n          {this.renderArrow()}\n          {transaction.kind === Transfer && transaction.linkedAccountName}\n          {transaction.tags &&\n            transaction.tags.map(tag => <Label key={tag} content={tag} />)}\n          <span className=\"transaction-item__info__note\">\n            {transaction.note}\n          </span>\n        </div>\n        <div className=\"transaction-item__amount\">\n          <Amount\n            value={transaction.amount}\n            code={transaction.currency}\n            showColor={transaction.kind !== Transfer}\n          />\n          {transaction.kind === Transfer && this.renderLinkedAmount()}\n        </div>\n        <div className=\"transaction-item__edit\">\n          <Button\n            circular\n            basic\n            icon=\"pencil\"\n            onClick={this.handleEditClick}\n            disabled={transaction.archived}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderArrow() {\n    const { kind, tags, note } = this.props.transaction;\n    if (kind !== Transfer && !tags && !note) return;\n\n    return (\n      <Icon\n        color=\"grey\"\n        name={kind === Income ? 'arrow left' : 'arrow right'}\n      />\n    );\n  }\n\n  renderLinkedAmount() {\n    const { linkedAmount, linkedCurrency, currency } = this.props.transaction;\n    if (!linkedCurrency || linkedCurrency === currency) return;\n\n    return (\n      <span>\n        <Icon color=\"grey\" name=\"arrow right\" />\n        <Amount value={linkedAmount} code={linkedCurrency} showColor={false} />\n      </span>\n    );\n  }\n}\n\nTransactionItem.propTypes = {\n  transaction: PropTypes.shape({\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\n    id: PropTypes.string,\n    accountId: PropTypes.string,\n    accountName: PropTypes.string,\n    amount: PropTypes.number,\n    currency: PropTypes.string,\n    linkedAccountId: PropTypes.string,\n    linkedAccountName: PropTypes.string,\n    linkedAmount: PropTypes.number,\n    linkedCurrency: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    note: PropTypes.string,\n    date: PropTypes.number\n  }),\n  openTransactionInModal: PropTypes.func\n};\n\nexport default TransactionItem;\n"]},"metadata":{},"sourceType":"module"}