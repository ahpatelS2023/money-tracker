{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { transactionsDB, remoteTransactionsDB, destroyTransactionsDB } from './pouchdb';\nimport { recentListLimit, storageToState, stateToStorage } from '../../entities/Transaction';\nimport intersection from 'lodash/intersection';\nexport default {\n  sync: sync,\n  load: load,\n  getAll: getAll,\n  loadRecent: loadRecent,\n  loadFiltered: loadFiltered,\n  save: save,\n  remove: remove,\n  destroy: destroy\n};\n\nfunction sync() {\n  return _sync.apply(this, arguments);\n}\n\nfunction _sync() {\n  _sync = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var readOnly,\n        options,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            readOnly = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : true;\n\n            if (remoteTransactionsDB()) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            options = {\n              batch_size: 500\n            };\n            _context2.next = 6;\n            return transactionsDB().replicate.from(remoteTransactionsDB(), options).on('change',\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(update) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Promise.all(update.docs.map(processIncomingTransaction));\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, this);\n              }));\n\n              return function (_x2) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n\n          case 6:\n            if (readOnly) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 9;\n            return transactionsDB().replicate.to(remoteTransactionsDB(), options);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _sync.apply(this, arguments);\n}\n\nfunction processIncomingTransaction(_x) {\n  return _processIncomingTransaction.apply(this, arguments);\n}\n\nfunction _processIncomingTransaction() {\n  _processIncomingTransaction = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(tx) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(tx._id.startsWith('T') && !tx._id.includes('-') && !tx._deleted)) {\n              _context3.next = 5;\n              break;\n            }\n\n            _context3.next = 3;\n            return save(_objectSpread({}, tx, {\n              id: \"T\".concat(tx.date, \"-\").concat(tx._id.substr(1)),\n              date: undefined,\n              tags: tx.tags && tx.tags.length ? tx.tags : undefined,\n              note: tx.note && tx.note.length ? tx.note : undefined\n            }));\n\n          case 3:\n            _context3.next = 5;\n            return transactionsDB().remove(tx);\n\n          case 5:\n            return _context3.abrupt(\"return\", tx);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _processIncomingTransaction.apply(this, arguments);\n}\n\nfunction load(id) {\n  return transactionsDB().get(id).then(storageToState).catch(function (error) {\n    if (error.status !== 404) throw error;\n  });\n}\n\nfunction loadRecent() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : recentListLimit;\n  return transactionsDB().allDocs({\n    include_docs: true,\n    descending: true,\n    startkey: \"T\\uFFFF\",\n    endkey: 'T',\n    limit: limit\n  }).then(function (response) {\n    return response.rows.map(function (row) {\n      return row.doc;\n    });\n  }).then(function (docs) {\n    return docs.map(storageToState);\n  });\n}\n\nfunction getAll() {\n  return _getAll.apply(this, arguments);\n}\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", transactionsDB().allDocs({\n              include_docs: true,\n              descending: true,\n              startkey: \"T\\uFFFF\",\n              endkey: 'T'\n            }).then(function (response) {\n              return response.rows.map(function (row) {\n                return row.doc;\n              });\n            }).then(function (docs) {\n              return docs.map(storageToState);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n  return _getAll.apply(this, arguments);\n}\n\nfunction loadFiltered() {\n  var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return transactionsDB().allDocs({\n    include_docs: true,\n    descending: true,\n    startkey: filters.date ? \"T\".concat(filters.date.end, \"-\\uFFFF\") : \"T\\uFFFF\",\n    endkey: filters.date ? \"T\".concat(filters.date.start, \"-\") : 'T'\n  }).then(function (response) {\n    return response.rows.map(function (row) {\n      return row.doc;\n    });\n  }).then(function (docs) {\n    return filterByAccount(docs, filters.accounts);\n  }).then(function (docs) {\n    return filterByTags(docs, filters.tags);\n  }).then(function (docs) {\n    return docs.map(function (doc) {\n      return storageToState(doc);\n    });\n  });\n}\n/**\n * Filter transactions by account.\n *\n * @param {array} docs\n * @param {Set} accounts\n * @return {array}\n */\n\n\nfunction filterByAccount(docs, accounts) {\n  if (Array.isArray(accounts)) accounts = new Set(accounts);\n  if (!accounts || !accounts.size) return docs;\n  return docs.filter(function (tx) {\n    return accounts.has(tx.accountId) || accounts.has(tx.linkedAccountId);\n  });\n}\n/**\n * Filter transactions by tag.\n *\n * @param {array} docs\n * @param {array} tags\n * @return {array}\n */\n\n\nfunction filterByTags(docs, tags) {\n  return tags && tags.length > 0 ? docs.filter(function (tx) {\n    return intersection(tx.tags, tags).length > 0;\n  }) : docs;\n}\n\nfunction save(transaction) {\n  return transactionsDB().get(transaction.id).then(function (doc) {\n    return transactionsDB().put(_objectSpread({}, doc, stateToStorage(transaction)));\n  }).catch(function (err) {\n    if (err.status !== 404) throw err;\n    return transactionsDB().put(_objectSpread({\n      _id: transaction.id\n    }, stateToStorage(transaction)));\n  });\n}\n\nfunction remove(id) {\n  if (!id) return false;\n  return transactionsDB().get(id).then(function (doc) {\n    return transactionsDB().put(_objectSpread({}, doc, {\n      _deleted: true\n    })).then(function () {\n      return doc;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) throw err;\n    return false;\n  });\n}\n\nfunction destroy() {\n  return destroyTransactionsDB();\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/util/storage/transactions.js"],"names":["transactionsDB","remoteTransactionsDB","destroyTransactionsDB","recentListLimit","storageToState","stateToStorage","intersection","sync","load","getAll","loadRecent","loadFiltered","save","remove","destroy","readOnly","options","batch_size","replicate","from","on","update","Promise","all","docs","map","processIncomingTransaction","to","tx","_id","startsWith","includes","_deleted","id","date","substr","undefined","tags","length","note","get","then","catch","error","status","limit","allDocs","include_docs","descending","startkey","endkey","response","rows","row","doc","filters","end","start","filterByAccount","accounts","filterByTags","Array","isArray","Set","size","filter","has","accountId","linkedAccountId","transaction","put","err"],"mappings":";;;AAAA,SACEA,cADF,EAEEC,oBAFF,EAGEC,qBAHF,QAIO,WAJP;AAKA,SACEC,eADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,4BAJP;AAKA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAJA,IADa;AAEbC,EAAAA,IAAI,EAAJA,IAFa;AAGbC,EAAAA,MAAM,EAANA,MAHa;AAIbC,EAAAA,UAAU,EAAVA,UAJa;AAKbC,EAAAA,YAAY,EAAZA,YALa;AAMbC,EAAAA,IAAI,EAAJA,IANa;AAObC,EAAAA,MAAM,EAANA,MAPa;AAQbC,EAAAA,OAAO,EAAPA;AARa,CAAf;;SAWeP,I;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBQ,YAAAA,QAApB,8DAA+B,IAA/B;;AAAA,gBACOd,oBAAoB,EAD3B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEQe,YAAAA,OAFR,GAEkB;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAFlB;AAAA;AAAA,mBAIQjB,cAAc,GACjBkB,SADG,CACOC,IADP,CACYlB,oBAAoB,EADhC,EACoCe,OADpC,EAEHI,EAFG,CAEA,QAFA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEU,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACNC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYC,GAAZ,CAAgBC,0BAAhB,CAAZ,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFV;;AAAA;AAAA;AAAA;AAAA,gBAJR;;AAAA;AAAA,gBAUOX,QAVP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWUf,cAAc,GAAGkB,SAAjB,CAA2BS,EAA3B,CAA8B1B,oBAAoB,EAAlD,EAAsDe,OAAtD,CAXV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAeeU,0B;;;;;;;2BAAf,kBAA0CE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMA,EAAE,CAACC,GAAH,CAAOC,UAAP,CAAkB,GAAlB,KAA0B,CAACF,EAAE,CAACC,GAAH,CAAOE,QAAP,CAAgB,GAAhB,CAA3B,IAAmD,CAACH,EAAE,CAACI,QAD7D;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEUpB,IAAI,mBACLgB,EADK;AAERK,cAAAA,EAAE,aAAML,EAAE,CAACM,IAAT,cAAiBN,EAAE,CAACC,GAAH,CAAOM,MAAP,CAAc,CAAd,CAAjB,CAFM;AAGRD,cAAAA,IAAI,EAAEE,SAHE;AAIRC,cAAAA,IAAI,EAAET,EAAE,CAACS,IAAH,IAAWT,EAAE,CAACS,IAAH,CAAQC,MAAnB,GAA4BV,EAAE,CAACS,IAA/B,GAAsCD,SAJpC;AAKRG,cAAAA,IAAI,EAAEX,EAAE,CAACW,IAAH,IAAWX,EAAE,CAACW,IAAH,CAAQD,MAAnB,GAA4BV,EAAE,CAACW,IAA/B,GAAsCH;AALpC,eAFd;;AAAA;AAAA;AAAA,mBASUpC,cAAc,GAAGa,MAAjB,CAAwBe,EAAxB,CATV;;AAAA;AAAA,8CAYSA,EAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,SAASpB,IAAT,CAAcyB,EAAd,EAAkB;AAChB,SAAOjC,cAAc,GAClBwC,GADI,CACAP,EADA,EAEJQ,IAFI,CAECrC,cAFD,EAGJsC,KAHI,CAGE,UAAAC,KAAK,EAAI;AACd,QAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B,MAAMD,KAAN;AAC3B,GALI,CAAP;AAMD;;AAED,SAASjC,UAAT,GAA6C;AAAA,MAAzBmC,KAAyB,uEAAjB1C,eAAiB;AAC3C,SAAOH,cAAc,GAClB8C,OADI,CACI;AACPC,IAAAA,YAAY,EAAE,IADP;AAEPC,IAAAA,UAAU,EAAE,IAFL;AAGPC,IAAAA,QAAQ,EAAE,SAHH;AAIPC,IAAAA,MAAM,EAAE,GAJD;AAKPL,IAAAA,KAAK,EAALA;AALO,GADJ,EAQJJ,IARI,CAQC,UAAAU,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,CAAc3B,GAAd,CAAkB,UAAA4B,GAAG;AAAA,aAAIA,GAAG,CAACC,GAAR;AAAA,KAArB,CAAJ;AAAA,GART,EASJb,IATI,CASC,UAAAjB,IAAI;AAAA,WAAIA,IAAI,CAACC,GAAL,CAASrB,cAAT,CAAJ;AAAA,GATL,CAAP;AAUD;;SAEcK,M;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CACST,cAAc,GAClB8C,OADI,CACI;AACPC,cAAAA,YAAY,EAAE,IADP;AAEPC,cAAAA,UAAU,EAAE,IAFL;AAGPC,cAAAA,QAAQ,EAAE,SAHH;AAIPC,cAAAA,MAAM,EAAE;AAJD,aADJ,EAOJT,IAPI,CAOC,UAAAU,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,CAAc3B,GAAd,CAAkB,UAAA4B,GAAG;AAAA,uBAAIA,GAAG,CAACC,GAAR;AAAA,eAArB,CAAJ;AAAA,aAPT,EAQJb,IARI,CAQC,UAAAjB,IAAI;AAAA,qBAAIA,IAAI,CAACC,GAAL,CAASrB,cAAT,CAAJ;AAAA,aARL,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYA,SAASO,YAAT,GAAoC;AAAA,MAAd4C,OAAc,uEAAJ,EAAI;AAClC,SAAOvD,cAAc,GAClB8C,OADI,CACI;AACPC,IAAAA,YAAY,EAAE,IADP;AAEPC,IAAAA,UAAU,EAAE,IAFL;AAGPC,IAAAA,QAAQ,EAAEM,OAAO,CAACrB,IAAR,cAAmBqB,OAAO,CAACrB,IAAR,CAAasB,GAAhC,eAA+C,SAHlD;AAIPN,IAAAA,MAAM,EAAEK,OAAO,CAACrB,IAAR,cAAmBqB,OAAO,CAACrB,IAAR,CAAauB,KAAhC,SAA2C;AAJ5C,GADJ,EAOJhB,IAPI,CAOC,UAAAU,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,CAAc3B,GAAd,CAAkB,UAAA4B,GAAG;AAAA,aAAIA,GAAG,CAACC,GAAR;AAAA,KAArB,CAAJ;AAAA,GAPT,EAQJb,IARI,CAQC,UAAAjB,IAAI;AAAA,WAAIkC,eAAe,CAAClC,IAAD,EAAO+B,OAAO,CAACI,QAAf,CAAnB;AAAA,GARL,EASJlB,IATI,CASC,UAAAjB,IAAI;AAAA,WAAIoC,YAAY,CAACpC,IAAD,EAAO+B,OAAO,CAAClB,IAAf,CAAhB;AAAA,GATL,EAUJI,IAVI,CAUC,UAAAjB,IAAI;AAAA,WAAIA,IAAI,CAACC,GAAL,CAAS,UAAA6B,GAAG;AAAA,aAAIlD,cAAc,CAACkD,GAAD,CAAlB;AAAA,KAAZ,CAAJ;AAAA,GAVL,CAAP;AAWD;AAED;;;;;;;;;AAOA,SAASI,eAAT,CAAyBlC,IAAzB,EAA+BmC,QAA/B,EAAyC;AACvC,MAAIE,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAJ,EAA6BA,QAAQ,GAAG,IAAII,GAAJ,CAAQJ,QAAR,CAAX;AAC7B,MAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACK,IAA3B,EAAiC,OAAOxC,IAAP;AAEjC,SAAOA,IAAI,CAACyC,MAAL,CACL,UAAArC,EAAE;AAAA,WAAI+B,QAAQ,CAACO,GAAT,CAAatC,EAAE,CAACuC,SAAhB,KAA8BR,QAAQ,CAACO,GAAT,CAAatC,EAAE,CAACwC,eAAhB,CAAlC;AAAA,GADG,CAAP;AAGD;AAED;;;;;;;;;AAOA,SAASR,YAAT,CAAsBpC,IAAtB,EAA4Ba,IAA5B,EAAkC;AAChC,SAAOA,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAtB,GACHd,IAAI,CAACyC,MAAL,CAAY,UAAArC,EAAE;AAAA,WAAItB,YAAY,CAACsB,EAAE,CAACS,IAAJ,EAAUA,IAAV,CAAZ,CAA4BC,MAA5B,GAAqC,CAAzC;AAAA,GAAd,CADG,GAEHd,IAFJ;AAGD;;AAED,SAASZ,IAAT,CAAcyD,WAAd,EAA2B;AACzB,SAAOrE,cAAc,GAClBwC,GADI,CACA6B,WAAW,CAACpC,EADZ,EAEJQ,IAFI,CAEC,UAAAa,GAAG;AAAA,WACPtD,cAAc,GAAGsE,GAAjB,mBACKhB,GADL,EAEKjD,cAAc,CAACgE,WAAD,CAFnB,EADO;AAAA,GAFJ,EAQJ3B,KARI,CAQE,UAAA6B,GAAG,EAAI;AACZ,QAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB,MAAM2B,GAAN;AAExB,WAAOvE,cAAc,GAAGsE,GAAjB;AACLzC,MAAAA,GAAG,EAAEwC,WAAW,CAACpC;AADZ,OAEF5B,cAAc,CAACgE,WAAD,CAFZ,EAAP;AAID,GAfI,CAAP;AAgBD;;AAED,SAASxD,MAAT,CAAgBoB,EAAhB,EAAoB;AAClB,MAAI,CAACA,EAAL,EAAS,OAAO,KAAP;AAET,SAAOjC,cAAc,GAClBwC,GADI,CACAP,EADA,EAEJQ,IAFI,CAEC,UAAAa,GAAG;AAAA,WACPtD,cAAc,GACXsE,GADH,mBACYhB,GADZ;AACiBtB,MAAAA,QAAQ,EAAE;AAD3B,QAEGS,IAFH,CAEQ;AAAA,aAAMa,GAAN;AAAA,KAFR,CADO;AAAA,GAFJ,EAOJZ,KAPI,CAOE,UAAA6B,GAAG,EAAI;AACZ,QAAIA,GAAG,CAAC3B,MAAJ,KAAe,GAAnB,EAAwB,MAAM2B,GAAN;AACxB,WAAO,KAAP;AACD,GAVI,CAAP;AAWD;;AAED,SAASzD,OAAT,GAAmB;AACjB,SAAOZ,qBAAqB,EAA5B;AACD","sourcesContent":["import {\n  transactionsDB,\n  remoteTransactionsDB,\n  destroyTransactionsDB\n} from './pouchdb';\nimport {\n  recentListLimit,\n  storageToState,\n  stateToStorage\n} from '../../entities/Transaction';\nimport intersection from 'lodash/intersection';\n\nexport default {\n  sync,\n  load,\n  getAll,\n  loadRecent,\n  loadFiltered,\n  save,\n  remove,\n  destroy\n};\n\nasync function sync(readOnly = true) {\n  if (!remoteTransactionsDB()) return;\n  const options = { batch_size: 500 };\n\n  await transactionsDB()\n    .replicate.from(remoteTransactionsDB(), options)\n    .on('change', async update => {\n      await Promise.all(update.docs.map(processIncomingTransaction));\n    });\n\n  if (!readOnly) {\n    await transactionsDB().replicate.to(remoteTransactionsDB(), options);\n  }\n}\n\nasync function processIncomingTransaction(tx) {\n  if (tx._id.startsWith('T') && !tx._id.includes('-') && !tx._deleted) {\n    await save({\n      ...tx,\n      id: `T${tx.date}-${tx._id.substr(1)}`,\n      date: undefined,\n      tags: tx.tags && tx.tags.length ? tx.tags : undefined,\n      note: tx.note && tx.note.length ? tx.note : undefined\n    });\n    await transactionsDB().remove(tx);\n  }\n\n  return tx;\n}\n\nfunction load(id) {\n  return transactionsDB()\n    .get(id)\n    .then(storageToState)\n    .catch(error => {\n      if (error.status !== 404) throw error;\n    });\n}\n\nfunction loadRecent(limit = recentListLimit) {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: 'T\\uffff',\n      endkey: 'T',\n      limit\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => docs.map(storageToState));\n}\n\nasync function getAll() {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: 'T\\uffff',\n      endkey: 'T'\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => docs.map(storageToState));\n}\n\nfunction loadFiltered(filters = {}) {\n  return transactionsDB()\n    .allDocs({\n      include_docs: true,\n      descending: true,\n      startkey: filters.date ? `T${filters.date.end}-\\uffff` : 'T\\uffff',\n      endkey: filters.date ? `T${filters.date.start}-` : 'T'\n    })\n    .then(response => response.rows.map(row => row.doc))\n    .then(docs => filterByAccount(docs, filters.accounts))\n    .then(docs => filterByTags(docs, filters.tags))\n    .then(docs => docs.map(doc => storageToState(doc)));\n}\n\n/**\n * Filter transactions by account.\n *\n * @param {array} docs\n * @param {Set} accounts\n * @return {array}\n */\nfunction filterByAccount(docs, accounts) {\n  if (Array.isArray(accounts)) accounts = new Set(accounts);\n  if (!accounts || !accounts.size) return docs;\n\n  return docs.filter(\n    tx => accounts.has(tx.accountId) || accounts.has(tx.linkedAccountId)\n  );\n}\n\n/**\n * Filter transactions by tag.\n *\n * @param {array} docs\n * @param {array} tags\n * @return {array}\n */\nfunction filterByTags(docs, tags) {\n  return tags && tags.length > 0\n    ? docs.filter(tx => intersection(tx.tags, tags).length > 0)\n    : docs;\n}\n\nfunction save(transaction) {\n  return transactionsDB()\n    .get(transaction.id)\n    .then(doc =>\n      transactionsDB().put({\n        ...doc,\n        ...stateToStorage(transaction)\n      })\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n\n      return transactionsDB().put({\n        _id: transaction.id,\n        ...stateToStorage(transaction)\n      });\n    });\n}\n\nfunction remove(id) {\n  if (!id) return false;\n\n  return transactionsDB()\n    .get(id)\n    .then(doc =>\n      transactionsDB()\n        .put({ ...doc, _deleted: true })\n        .then(() => doc)\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n      return false;\n    });\n}\n\nfunction destroy() {\n  return destroyTransactionsDB();\n}\n"]},"metadata":{},"sourceType":"module"}