{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/DataImport/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport prettyBytes from '../../util/PrettyBytes';\nimport { Button, Progress, Message } from 'semantic-ui-react';\nimport './index.css';\n\nvar DataImport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DataImport, _React$Component);\n\n  function DataImport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataImport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataImport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFileChange = function (event) {\n      return _this.props.openImportFile(event.target.files[0]);\n    };\n\n    _this.handleOpenFile = function () {\n      return _this.fileInput.click();\n    };\n\n    return _this;\n  }\n\n  _createClass(DataImport, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"mt-dataImport\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Import transactions from a CSV file.\"), this.props.error && React.createElement(Message, {\n        error: true,\n        icon: \"warning circle\",\n        header: \"Failed to import\",\n        content: this.props.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), !this.props.isFileSelected && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        content: \"Open File\",\n        icon: \"file text\",\n        onClick: this.handleOpenFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"text/csv\",\n        ref: function ref(input) {\n          _this2.fileInput = input;\n        },\n        onChange: this.handleFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), this.props.isFileSelected && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Selected file:\", ' ', React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.filename, \" (\", prettyBytes(this.props.filesize), \")\")), !this.props.isProcessing && React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.discardImportFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Discard File\"), React.createElement(Button.Or, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.props.startDataImport,\n        positive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Start Import\")), this.props.isProcessing && React.createElement(Progress, {\n        active: true,\n        indicating: true,\n        autoSuccess: true,\n        total: this.props.linesToProcess,\n        value: this.props.linesProcessed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DataImport;\n}(React.Component);\n\nDataImport.propTypes = {\n  isFileSelected: PropTypes.bool,\n  isProcessing: PropTypes.bool,\n  filename: PropTypes.string,\n  filesize: PropTypes.number,\n  linesToProcess: PropTypes.number,\n  linesProcessed: PropTypes.number,\n  error: PropTypes.string,\n  openImportFile: PropTypes.func,\n  discardImportFile: PropTypes.func,\n  startDataImport: PropTypes.func\n};\nexport default DataImport;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/DataImport/index.js"],"names":["React","PropTypes","prettyBytes","Button","Progress","Message","DataImport","handleFileChange","event","props","openImportFile","target","files","handleOpenFile","fileInput","click","error","isFileSelected","input","filename","filesize","isProcessing","discardImportFile","startDataImport","linesToProcess","linesProcessed","Component","propTypes","bool","string","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport prettyBytes from '../../util/PrettyBytes';\nimport { Button, Progress, Message } from 'semantic-ui-react';\nimport './index.css';\n\nclass DataImport extends React.Component {\n  handleFileChange = event => this.props.openImportFile(event.target.files[0]);\n  handleOpenFile = () => this.fileInput.click();\n\n  render() {\n    return (\n      <div className=\"mt-dataImport\">\n        <p>Import transactions from a CSV file.</p>\n        {this.props.error && (\n          <Message\n            error\n            icon=\"warning circle\"\n            header=\"Failed to import\"\n            content={this.props.error}\n          />\n        )}\n        {!this.props.isFileSelected && (\n          <React.Fragment>\n            <Button\n              content=\"Open File\"\n              icon=\"file text\"\n              onClick={this.handleOpenFile}\n            />\n            <input\n              type=\"file\"\n              accept=\"text/csv\"\n              ref={input => {\n                this.fileInput = input;\n              }}\n              onChange={this.handleFileChange}\n            />\n          </React.Fragment>\n        )}\n        {this.props.isFileSelected && (\n          <React.Fragment>\n            <p>\n              Selected file:{' '}\n              <strong>\n                {this.props.filename} ({prettyBytes(this.props.filesize)})\n              </strong>\n            </p>\n            {!this.props.isProcessing && (\n              <Button.Group>\n                <Button onClick={this.props.discardImportFile}>\n                  Discard File\n                </Button>\n                <Button.Or />\n                <Button onClick={this.props.startDataImport} positive>\n                  Start Import\n                </Button>\n              </Button.Group>\n            )}\n            {this.props.isProcessing && (\n              <Progress\n                active\n                indicating\n                autoSuccess\n                total={this.props.linesToProcess}\n                value={this.props.linesProcessed}\n              />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nDataImport.propTypes = {\n  isFileSelected: PropTypes.bool,\n  isProcessing: PropTypes.bool,\n  filename: PropTypes.string,\n  filesize: PropTypes.number,\n  linesToProcess: PropTypes.number,\n  linesProcessed: PropTypes.number,\n  error: PropTypes.string,\n  openImportFile: PropTypes.func,\n  discardImportFile: PropTypes.func,\n  startDataImport: PropTypes.func\n};\n\nexport default DataImport;\n"]},"metadata":{},"sourceType":"module"}