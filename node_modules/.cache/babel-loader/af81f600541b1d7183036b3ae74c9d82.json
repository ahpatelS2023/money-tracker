{"ast":null,"code":"import _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _TransactionKindToTex;\n\nimport format from 'date-fns/format';\nimport Currency from 'entities/Currency';\nimport { toLocalTimestamp } from 'util/timezone';\nexport var TransationKindT;\n\n(function (TransationKindT) {\n  TransationKindT[TransationKindT[\"Expense\"] = 0] = \"Expense\";\n  TransationKindT[TransationKindT[\"Transfer\"] = 1] = \"Transfer\";\n  TransationKindT[TransationKindT[\"Income\"] = 2] = \"Income\";\n})(TransationKindT || (TransationKindT = {}));\n\nvar _TransationKindT = TransationKindT,\n    Expense = _TransationKindT.Expense,\n    Transfer = _TransationKindT.Transfer,\n    Income = _TransationKindT.Income;\nvar TransactionKindToText = (_TransactionKindToTex = {}, _defineProperty(_TransactionKindToTex, Expense, 'Expense'), _defineProperty(_TransactionKindToTex, Transfer, 'Transfer'), _defineProperty(_TransactionKindToTex, Income, 'Income'), _TransactionKindToTex);\nexport var defaultKind = Expense;\nexport var recentListLimit = 5;\nexport var rowsPerSearchPage = 10;\nexport var pagerSizeMobile = 5;\nexport var pagerSizeDesktop = 9;\nexport function getKindLabel(kind) {\n  return TransactionKindToText[kind];\n}\nexport function formToState(form) {\n  var tags = form.tags && form.tags[form.kind];\n  return _objectSpread({}, form, {\n    id: form.id || '',\n    amount: Currency.numberToCents(parseFloat(form.amount) * (form.kind === Expense ? -1 : 1), form.currency),\n    linkedAmount: form.kind === Transfer && form.linkedCurrency && form.linkedAmount ? Currency.numberToCents(form.linkedAmount, form.linkedCurrency) : undefined,\n    note: form.note || undefined,\n    tags: tags && tags.length > 0 ? tags : undefined,\n    date: new Date(form.date).getTime()\n  });\n}\nexport function stateToForm(state) {\n  var _tags;\n\n  return _objectSpread({}, state, {\n    amount: Currency.centsToString(state.amount * (state.kind === Expense ? -1 : 1), state.currency, false),\n    linkedAmount: state.kind === Transfer && state.linkedAmount && state.linkedCurrency ? Currency.centsToString(state.linkedAmount, state.linkedCurrency, false) : undefined,\n    note: state.note || '',\n    tags: (_tags = {}, _defineProperty(_tags, Expense, []), _defineProperty(_tags, Income, []), _defineProperty(_tags, state.kind, state.tags || []), _tags),\n    date: format(toLocalTimestamp(state.date), 'YYYY-MM-DD')\n  });\n}\nexport function storageToState(_ref) {\n  var _id = _ref._id,\n      kind = _ref.kind,\n      note = _ref.note,\n      tags = _ref.tags,\n      accountId = _ref.accountId,\n      amount = _ref.amount,\n      currency = _ref.currency,\n      linkedAccountId = _ref.linkedAccountId,\n      linkedAmount = _ref.linkedAmount,\n      linkedCurrency = _ref.linkedCurrency;\n  if (!_id) throw new Error('Transaction storage object missing \"_id\"'); // date timestamp is encoded in transaction ID\n\n  var dateRegexMatch = _id.match(/T([0-9]+)-/);\n\n  if (!dateRegexMatch) throw new Error(\"No date in Transaction ID \\\"\".concat(_id, \"\\\"\"));\n  return {\n    id: _id,\n    date: parseInt(dateRegexMatch[1], 10),\n    kind: kind,\n    note: note,\n    tags: tags,\n    accountId: accountId,\n    amount: amount,\n    currency: currency,\n    linkedAccountId: linkedAccountId,\n    linkedAmount: linkedAmount,\n    linkedCurrency: linkedCurrency\n  };\n}\nexport function stateToStorage(_ref2) {\n  var kind = _ref2.kind,\n      note = _ref2.note,\n      tags = _ref2.tags,\n      accountId = _ref2.accountId,\n      amount = _ref2.amount,\n      currency = _ref2.currency,\n      linkedAccountId = _ref2.linkedAccountId,\n      linkedAmount = _ref2.linkedAmount,\n      linkedCurrency = _ref2.linkedCurrency;\n  return _objectSpread({\n    kind: kind,\n    note: note,\n    tags: tags,\n    accountId: accountId,\n    amount: amount,\n    currency: currency\n  }, kind === Transfer && {\n    linkedAccountId: linkedAccountId,\n    linkedAmount: linkedAmount,\n    linkedCurrency: linkedCurrency\n  });\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/entities/Transaction.ts"],"names":["format","Currency","toLocalTimestamp","TransationKindT","Expense","Transfer","Income","TransactionKindToText","defaultKind","recentListLimit","rowsPerSearchPage","pagerSizeMobile","pagerSizeDesktop","getKindLabel","kind","formToState","form","tags","id","amount","numberToCents","parseFloat","currency","linkedAmount","linkedCurrency","undefined","note","length","date","Date","getTime","stateToForm","state","centsToString","storageToState","_id","accountId","linkedAccountId","Error","dateRegexMatch","match","parseInt","stateToStorage"],"mappings":"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","sourcesContent":["import format from 'date-fns/format';\nimport Currency from 'entities/Currency';\nimport { toLocalTimestamp } from 'util/timezone';\n\ninterface TransactionBaseT {\n  kind: TransationKindT;\n  accountId: string;\n  currency: string;\n  note?: string;\n  linkedAccountId?: string;\n  linkedCurrency?: string;\n}\n\nexport interface TransactionFormT extends TransactionBaseT {\n  id?: string;\n  amount: string;\n  date: string;\n  linkedAmount?: string;\n  tags: { [kind in TransationKindT]?: string[] };\n}\n\nexport interface TransactionStateT extends TransactionBaseT {\n  id: string;\n  amount: number;\n  date: number;\n  linkedAmount?: number;\n  tags?: string[];\n}\n\nexport interface TransactionStorageT extends TransactionBaseT {\n  _id?: string;\n  amount: number;\n  linkedAmount?: number;\n  tags?: string[];\n}\n\nexport enum TransationKindT {\n  Expense,\n  Transfer,\n  Income\n}\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst TransactionKindToText: { [kind in TransationKindT]: string } = {\n  [Expense]: 'Expense',\n  [Transfer]: 'Transfer',\n  [Income]: 'Income'\n};\n\nexport const defaultKind = Expense;\nexport const recentListLimit = 5;\nexport const rowsPerSearchPage = 10;\nexport const pagerSizeMobile = 5;\nexport const pagerSizeDesktop = 9;\n\nexport function getKindLabel(kind: TransationKindT) {\n  return TransactionKindToText[kind];\n}\n\nexport function formToState(form: TransactionFormT): TransactionStateT {\n  const tags = form.tags && form.tags[form.kind];\n\n  return {\n    ...form,\n    id: form.id || '',\n    amount: Currency.numberToCents(\n      parseFloat(form.amount) * (form.kind === Expense ? -1 : 1),\n      form.currency\n    ),\n    linkedAmount:\n      form.kind === Transfer && form.linkedCurrency && form.linkedAmount\n        ? Currency.numberToCents(form.linkedAmount, form.linkedCurrency)\n        : undefined,\n    note: form.note || undefined,\n    tags: tags && tags.length > 0 ? tags : undefined,\n    date: new Date(form.date).getTime()\n  };\n}\n\nexport function stateToForm(state: TransactionStateT): TransactionFormT {\n  return {\n    ...state,\n    amount: Currency.centsToString(\n      state.amount * (state.kind === Expense ? -1 : 1),\n      state.currency,\n      false\n    ),\n    linkedAmount:\n      state.kind === Transfer && state.linkedAmount && state.linkedCurrency\n        ? Currency.centsToString(\n            state.linkedAmount,\n            state.linkedCurrency,\n            false\n          )\n        : undefined,\n    note: state.note || '',\n    tags: {\n      [Expense]: [],\n      [Income]: [],\n      [state.kind]: state.tags || []\n    },\n    date: format(toLocalTimestamp(state.date), 'YYYY-MM-DD')\n  };\n}\n\nexport function storageToState({\n  _id,\n  kind,\n  note,\n  tags,\n  accountId,\n  amount,\n  currency,\n  linkedAccountId,\n  linkedAmount,\n  linkedCurrency\n}: TransactionStorageT): TransactionStateT {\n  if (!_id) throw new Error('Transaction storage object missing \"_id\"');\n  // date timestamp is encoded in transaction ID\n  const dateRegexMatch = _id.match(/T([0-9]+)-/);\n  if (!dateRegexMatch) throw new Error(`No date in Transaction ID \"${_id}\"`);\n\n  return {\n    id: _id,\n    date: parseInt(dateRegexMatch[1], 10),\n    kind,\n    note,\n    tags,\n    accountId,\n    amount,\n    currency,\n    linkedAccountId,\n    linkedAmount,\n    linkedCurrency\n  };\n}\n\nexport function stateToStorage({\n  kind,\n  note,\n  tags,\n  accountId,\n  amount,\n  currency,\n  linkedAccountId,\n  linkedAmount,\n  linkedCurrency\n}: TransactionStateT): TransactionStorageT {\n  return {\n    kind,\n    note,\n    tags,\n    accountId,\n    amount,\n    currency,\n    ...(kind === Transfer && {\n      linkedAccountId,\n      linkedAmount,\n      linkedCurrency\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}