{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Sentry/ErrorBoundary.js\";\nimport React from 'react';\nimport * as Sentry from '@sentry/browser';\n\nvar ErrorBoundary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorBoundary).call(this, props));\n    _this.state = {\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      this.setState({\n        error: error\n      });\n      console.log('sentry error', error);\n      Sentry.withScope(function (scope) {\n        Object.keys(errorInfo).forEach(function (key) {\n          scope.setExtra(key, errorInfo[key]);\n        });\n        Sentry.captureException(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.error) {\n        //render fallback UI\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return Sentry.showReportDialog();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Report feedback\");\n      } else {\n        //when there's not an error, render children untouched\n        return this.props.children;\n      }\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Sentry/ErrorBoundary.js"],"names":["React","Sentry","ErrorBoundary","props","state","error","errorInfo","setState","console","log","withScope","scope","Object","keys","forEach","key","setExtra","captureException","showReportDialog","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAFiB;AAGlB;;;;sCAEiBA,K,EAAOC,S,EAAW;AAClC,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,KAA5B;AACAJ,MAAAA,MAAM,CAACS,SAAP,CAAiB,UAAAC,KAAK,EAAI;AACxBC,QAAAA,MAAM,CAACC,IAAP,CAAYP,SAAZ,EAAuBQ,OAAvB,CAA+B,UAAAC,GAAG,EAAI;AACpCJ,UAAAA,KAAK,CAACK,QAAN,CAAeD,GAAf,EAAoBT,SAAS,CAACS,GAAD,CAA7B;AACD,SAFD;AAGAd,QAAAA,MAAM,CAACgB,gBAAP,CAAwBZ,KAAxB;AACD,OALD;AAMD;;;6BAEQ;AACP,UAAI,KAAKD,KAAL,CAAWC,KAAf,EAAsB;AACpB;AACA,eACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMJ,MAAM,CAACiB,gBAAP,EAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAKD,OAPD,MAOO;AACL;AACA,eAAO,KAAKf,KAAL,CAAWgB,QAAlB;AACD;AACF;;;;EA7ByBnB,KAAK,CAACoB,S;;AAgClC,eAAelB,aAAf","sourcesContent":["import React from 'react';\nimport * as Sentry from '@sentry/browser';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    console.log('sentry error', error);\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      //render fallback UI\n      return (\n        <button onClick={() => Sentry.showReportDialog()}>\n          Report feedback\n        </button>\n      );\n    } else {\n      //when there's not an error, render children untouched\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}