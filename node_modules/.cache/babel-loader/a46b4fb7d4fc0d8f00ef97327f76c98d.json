{"ast":null,"code":"import _toConsumableArray from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { TransationKindT } from 'entities/Transaction';\nvar Transfer = TransationKindT.Transfer;\n\n/**\n * Get all necessary accounts balance mutations for given transaction change.\n */\nexport default function getAccountsMutations(prev, next) {\n  if (!prev && next) {\n    return createTransaction(next);\n  } else if (prev && !next) {\n    return removeTransaction(prev);\n  } else if (prev && next) {\n    return _toConsumableArray(removeTransaction(prev)).concat(_toConsumableArray(createTransaction(next)));\n  } else {\n    return [];\n  }\n}\n\nfunction createTransaction(transaction) {\n  var mutations = [];\n\n  if (transaction.kind === Transfer && transaction.accountId === transaction.linkedAccountId && transaction.currency === transaction.linkedCurrency) {\n    return mutations;\n  }\n\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? -1 : 1)\n  });\n\n  if (transaction.kind === Transfer && transaction.linkedAccountId && transaction.linkedCurrency && transaction.linkedAmount) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount\n    });\n  }\n\n  return mutations;\n}\n\nfunction removeTransaction(transaction) {\n  var mutations = [];\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? 1 : -1)\n  });\n\n  if (transaction.kind === Transfer && transaction.linkedAccountId && transaction.linkedCurrency && transaction.linkedAmount) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount * -1\n    });\n  }\n\n  return mutations;\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/entities/Transaction/AccountMutations.ts"],"names":["TransationKindT","Transfer","getAccountsMutations","prev","next","createTransaction","removeTransaction","transaction","mutations","kind","accountId","linkedAccountId","currency","linkedCurrency","push","amount","linkedAmount"],"mappings":";AAAA,SAA4BA,eAA5B,QAAmD,sBAAnD;IAEQC,Q,GAAaD,e,CAAbC,Q;;AAQR;;;AAGA,eAAe,SAASC,oBAAT,CACbC,IADa,EAEbC,IAFa,EAGO;AACpB,MAAI,CAACD,IAAD,IAASC,IAAb,EAAmB;AACjB,WAAOC,iBAAiB,CAACD,IAAD,CAAxB;AACD,GAFD,MAEO,IAAID,IAAI,IAAI,CAACC,IAAb,EAAmB;AACxB,WAAOE,iBAAiB,CAACH,IAAD,CAAxB;AACD,GAFM,MAEA,IAAIA,IAAI,IAAIC,IAAZ,EAAkB;AACvB,8BAAWE,iBAAiB,CAACH,IAAD,CAA5B,4BAAuCE,iBAAiB,CAACD,IAAD,CAAxD;AACD,GAFM,MAEA;AACL,WAAO,EAAP;AACD;AACF;;AAED,SAASC,iBAAT,CAA2BE,WAA3B,EAA+E;AAC7E,MAAMC,SAA6B,GAAG,EAAtC;;AACA,MACED,WAAW,CAACE,IAAZ,KAAqBR,QAArB,IACAM,WAAW,CAACG,SAAZ,KAA0BH,WAAW,CAACI,eADtC,IAEAJ,WAAW,CAACK,QAAZ,KAAyBL,WAAW,CAACM,cAHvC,EAIE;AACA,WAAOL,SAAP;AACD;;AAEDA,EAAAA,SAAS,CAACM,IAAV,CAAe;AACbJ,IAAAA,SAAS,EAAEH,WAAW,CAACG,SADV;AAEbE,IAAAA,QAAQ,EAAEL,WAAW,CAACK,QAFT;AAGbG,IAAAA,MAAM,EAAER,WAAW,CAACQ,MAAZ,IAAsBR,WAAW,CAACE,IAAZ,KAAqBR,QAArB,GAAgC,CAAC,CAAjC,GAAqC,CAA3D;AAHK,GAAf;;AAMA,MACEM,WAAW,CAACE,IAAZ,KAAqBR,QAArB,IACAM,WAAW,CAACI,eADZ,IAEAJ,WAAW,CAACM,cAFZ,IAGAN,WAAW,CAACS,YAJd,EAKE;AACAR,IAAAA,SAAS,CAACM,IAAV,CAAe;AACbJ,MAAAA,SAAS,EAAEH,WAAW,CAACI,eADV;AAEbC,MAAAA,QAAQ,EAAEL,WAAW,CAACM,cAFT;AAGbE,MAAAA,MAAM,EAAER,WAAW,CAACS;AAHP,KAAf;AAKD;;AAED,SAAOR,SAAP;AACD;;AAED,SAASF,iBAAT,CAA2BC,WAA3B,EAA+E;AAC7E,MAAMC,SAAS,GAAG,EAAlB;AACAA,EAAAA,SAAS,CAACM,IAAV,CAAe;AACbJ,IAAAA,SAAS,EAAEH,WAAW,CAACG,SADV;AAEbE,IAAAA,QAAQ,EAAEL,WAAW,CAACK,QAFT;AAGbG,IAAAA,MAAM,EAAER,WAAW,CAACQ,MAAZ,IAAsBR,WAAW,CAACE,IAAZ,KAAqBR,QAArB,GAAgC,CAAhC,GAAoC,CAAC,CAA3D;AAHK,GAAf;;AAKA,MACEM,WAAW,CAACE,IAAZ,KAAqBR,QAArB,IACAM,WAAW,CAACI,eADZ,IAEAJ,WAAW,CAACM,cAFZ,IAGAN,WAAW,CAACS,YAJd,EAKE;AACAR,IAAAA,SAAS,CAACM,IAAV,CAAe;AACbJ,MAAAA,SAAS,EAAEH,WAAW,CAACI,eADV;AAEbC,MAAAA,QAAQ,EAAEL,WAAW,CAACM,cAFT;AAGbE,MAAAA,MAAM,EAAER,WAAW,CAACS,YAAZ,GAA2B,CAAC;AAHvB,KAAf;AAKD;;AAED,SAAOR,SAAP;AACD","sourcesContent":["import { TransactionStateT, TransationKindT } from 'entities/Transaction';\n\nconst { Transfer } = TransationKindT;\n\nexport interface AccountMutationT {\n  accountId: string;\n  currency: string;\n  amount: number;\n}\n\n/**\n * Get all necessary accounts balance mutations for given transaction change.\n */\nexport default function getAccountsMutations(\n  prev?: TransactionStateT,\n  next?: TransactionStateT\n): AccountMutationT[] {\n  if (!prev && next) {\n    return createTransaction(next);\n  } else if (prev && !next) {\n    return removeTransaction(prev);\n  } else if (prev && next) {\n    return [...removeTransaction(prev), ...createTransaction(next)];\n  } else {\n    return [];\n  }\n}\n\nfunction createTransaction(transaction: TransactionStateT): AccountMutationT[] {\n  const mutations: AccountMutationT[] = [];\n  if (\n    transaction.kind === Transfer &&\n    transaction.accountId === transaction.linkedAccountId &&\n    transaction.currency === transaction.linkedCurrency\n  ) {\n    return mutations;\n  }\n\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? -1 : 1)\n  });\n\n  if (\n    transaction.kind === Transfer &&\n    transaction.linkedAccountId &&\n    transaction.linkedCurrency &&\n    transaction.linkedAmount\n  ) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount\n    });\n  }\n\n  return mutations;\n}\n\nfunction removeTransaction(transaction: TransactionStateT): AccountMutationT[] {\n  const mutations = [];\n  mutations.push({\n    accountId: transaction.accountId,\n    currency: transaction.currency,\n    amount: transaction.amount * (transaction.kind === Transfer ? 1 : -1)\n  });\n  if (\n    transaction.kind === Transfer &&\n    transaction.linkedAccountId &&\n    transaction.linkedCurrency &&\n    transaction.linkedAmount\n  ) {\n    mutations.push({\n      accountId: transaction.linkedAccountId,\n      currency: transaction.linkedCurrency,\n      amount: transaction.linkedAmount * -1\n    });\n  }\n\n  return mutations;\n}\n"]},"metadata":{},"sourceType":"module"}