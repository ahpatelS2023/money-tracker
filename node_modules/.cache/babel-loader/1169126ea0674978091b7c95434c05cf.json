{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Report/Kind/ExpenseIncome.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChartistGraph from 'react-chartist';\nimport Chartist from 'chartist';\nimport abbreviate from 'number-abbreviate';\nimport 'chartist-plugin-tooltips';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport { Statistic } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport Currency from '../../../entities/Currency';\n\nvar ExpenseIncome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExpenseIncome, _React$Component);\n\n  function ExpenseIncome() {\n    _classCallCheck(this, ExpenseIncome);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExpenseIncome).apply(this, arguments));\n  }\n\n  _createClass(ExpenseIncome, [{\n    key: \"render\",\n    value: function render() {\n      var options = {\n        axisY: {\n          labelInterpolationFnc: function labelInterpolationFnc(value) {\n            return abbreviate(value, 2);\n          }\n        },\n        plugins: [Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })]\n      };\n      var _this$props = this.props,\n          data = _this$props.data,\n          base = _this$props.base;\n      var income = data.series ? data.series[0].filter(function (val) {\n        return val !== 0;\n      }) : [];\n      var expense = data.series ? data.series[1].filter(function (val) {\n        return val !== 0;\n      }) : [];\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt-report-stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Statistic.Group, {\n        size: \"mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Amount, {\n        code: base,\n        value: Currency.numberToCents(income.reduce(function (sum, cur) {\n          return sum + cur;\n        }, 0), base),\n        showCents: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Total income\")), React.createElement(Statistic, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Amount, {\n        code: base,\n        value: Currency.numberToCents(expense.reduce(function (sum, cur) {\n          return sum + cur;\n        }, 0), base) * -1,\n        showCents: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Total expense\")))), React.createElement(ChartistGraph, {\n        type: \"Bar\",\n        className: \"ct-octave mt-report-expense-income\",\n        data: data,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ExpenseIncome;\n}(React.Component);\n\nExpenseIncome.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\nexport default ExpenseIncome;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Report/Kind/ExpenseIncome.js"],"names":["React","PropTypes","ChartistGraph","Chartist","abbreviate","Statistic","Amount","Currency","ExpenseIncome","options","axisY","labelInterpolationFnc","value","plugins","tooltip","class","currency","props","anchorToPoint","data","base","income","series","filter","val","expense","numberToCents","reduce","sum","cur","Component","propTypes","string","shape","labels","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ChartistGraph from 'react-chartist';\nimport Chartist from 'chartist';\nimport abbreviate from 'number-abbreviate';\nimport 'chartist-plugin-tooltips';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\nimport { Statistic } from 'semantic-ui-react';\nimport Amount from '../../Amount';\nimport Currency from '../../../entities/Currency';\n\nclass ExpenseIncome extends React.Component {\n  render() {\n    const options = {\n      axisY: {\n        labelInterpolationFnc: value => abbreviate(value, 2)\n      },\n      plugins: [\n        Chartist.plugins.tooltip({\n          class: 'mono',\n          currency: this.props.currency,\n          anchorToPoint: true\n        })\n      ]\n    };\n    const { data, base } = this.props;\n    const income = data.series ? data.series[0].filter(val => val !== 0) : [];\n    const expense = data.series ? data.series[1].filter(val => val !== 0) : [];\n\n    return (\n      <React.Fragment>\n        <div className=\"mt-report-stats\">\n          <Statistic.Group size=\"mini\">\n            <Statistic>\n              <Statistic.Value>\n                <Amount\n                  code={base}\n                  value={Currency.numberToCents(\n                    income.reduce((sum, cur) => sum + cur, 0),\n                    base\n                  )}\n                  showCents={false}\n                />\n              </Statistic.Value>\n              <Statistic.Label>Total income</Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>\n                <Amount\n                  code={base}\n                  value={\n                    Currency.numberToCents(\n                      expense.reduce((sum, cur) => sum + cur, 0),\n                      base\n                    ) * -1\n                  }\n                  showCents={false}\n                />\n              </Statistic.Value>\n              <Statistic.Label>Total expense</Statistic.Label>\n            </Statistic>\n          </Statistic.Group>\n        </div>\n        <ChartistGraph\n          type=\"Bar\"\n          className=\"ct-octave mt-report-expense-income\"\n          data={data}\n          options={options}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nExpenseIncome.propTypes = {\n  currency: PropTypes.string,\n  data: PropTypes.shape({\n    labels: PropTypes.array,\n    series: PropTypes.array\n  })\n};\n\nexport default ExpenseIncome;\n"]},"metadata":{},"sourceType":"module"}