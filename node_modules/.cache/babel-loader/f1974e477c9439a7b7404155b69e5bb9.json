{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport union from 'lodash/union';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { settingsDB, remoteSettingsDB, destroySettingsDB } from './pouchdb';\nimport { fetchExchangeRates } from '../currency';\nimport Currency from '../../entities/Currency';\nexport default {\n  load: load,\n  save: save,\n  saveLocal: saveLocal,\n  destroy: destroy\n};\nvar defaultLocalSettings = {\n  _id: '_local/settings',\n  collapsedSections: []\n};\nvar defaultSettings = {\n  _id: 'settings',\n  currency: {\n    base: Currency.defaultBase,\n    secondary: []\n  },\n  exchangeRate: _defineProperty({}, Currency.defaultBase, 1)\n};\n\nfunction destroy() {\n  return destroySettingsDB();\n}\n\nfunction save(_x) {\n  return _save.apply(this, arguments);\n}\n\nfunction _save() {\n  _save = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(settings) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!remoteSettingsDB()) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return remoteSettingsDB().get('settings').then(function (remote) {\n              return remote;\n            }, function (err) {\n              return defaultSettings;\n            }).then(function (doc) {\n              return remoteSettingsDB().put(_objectSpread({}, doc, settings));\n            }).catch(function (error) {\n              if (error.status !== 403) throw error;\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", settingsDB().get('settings').then(function (local) {\n              return local;\n            }, function (err) {\n              return defaultSettings;\n            }).then(function (doc) {\n              return settingsDB().put(_objectSpread({}, doc, settings));\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _save.apply(this, arguments);\n}\n\nfunction saveLocal(settings) {\n  return settingsDB().get('_local/settings').then(function (doc) {\n    return doc;\n  }, function (err) {\n    return defaultLocalSettings;\n  }).then(function (doc) {\n    return settingsDB().put(_objectSpread({}, doc, settings));\n  });\n}\n\nfunction load() {\n  return settingsDB().get('_local/settings').then(function (local) {\n    return local;\n  }, function (err) {\n    return defaultLocalSettings;\n  }).then(function (local) {\n    return mergeLocalWithSyncedSettings(local);\n  });\n}\n\nfunction mergeLocalWithSyncedSettings(_x2) {\n  return _mergeLocalWithSyncedSettings.apply(this, arguments);\n}\n\nfunction _mergeLocalWithSyncedSettings() {\n  _mergeLocalWithSyncedSettings = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(local) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", settingsDB().get('settings').then(function (settings) {\n              return settings;\n            }, function (err) {\n              return defaultSettings;\n            }).then(function (settings) {\n              return syncSettings(settings);\n            }).then(function (settings) {\n              return _objectSpread({}, settings, local);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _mergeLocalWithSyncedSettings.apply(this, arguments);\n}\n\nfunction syncSettings(_x3) {\n  return _syncSettings.apply(this, arguments);\n}\n\nfunction _syncSettings() {\n  _syncSettings = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(settings) {\n    var remote, base, secondary, synced;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (remoteSettingsDB()) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", settings);\n\n          case 2:\n            _context3.prev = 2;\n            _context3.next = 5;\n            return remoteSettingsDB().get('settings');\n\n          case 5:\n            remote = _context3.sent;\n            base = remote.currency.base;\n            secondary = union(settings.currency.base, settings.currency.secondary, remote.currency.secondary).filter(function (code) {\n              return code !== base;\n            });\n            _context3.t0 = {\n              base: base,\n              secondary: secondary\n            };\n\n            if (!(settings.currency.base === base)) {\n              _context3.next = 13;\n              break;\n            }\n\n            _context3.t1 = _objectSpread({}, settings.exchangeRate, remote.exchangeRate);\n            _context3.next = 16;\n            break;\n\n          case 13:\n            _context3.next = 15;\n            return fetchExchangeRates(base, secondary);\n\n          case 15:\n            _context3.t1 = _context3.sent;\n\n          case 16:\n            _context3.t2 = _context3.t1;\n            _context3.t3 = remote.isSetupComplete;\n            synced = {\n              currency: _context3.t0,\n              exchangeRate: _context3.t2,\n              isSetupComplete: _context3.t3\n            };\n\n            if (isEqual(pick(settings, Object.keys(synced)), synced)) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 22;\n            return save(synced);\n\n          case 22:\n            return _context3.abrupt(\"return\", synced);\n\n          case 25:\n            _context3.prev = 25;\n            _context3.t4 = _context3[\"catch\"](2);\n            return _context3.abrupt(\"return\", settings);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this, [[2, 25]]);\n  }));\n  return _syncSettings.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/util/storage/settings.js"],"names":["union","pick","isEqual","settingsDB","remoteSettingsDB","destroySettingsDB","fetchExchangeRates","Currency","load","save","saveLocal","destroy","defaultLocalSettings","_id","collapsedSections","defaultSettings","currency","base","defaultBase","secondary","exchangeRate","settings","get","then","remote","err","doc","put","catch","error","status","local","mergeLocalWithSyncedSettings","syncSettings","filter","code","isSetupComplete","synced","Object","keys"],"mappings":"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","sourcesContent":["import union from 'lodash/union';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { settingsDB, remoteSettingsDB, destroySettingsDB } from './pouchdb';\nimport { fetchExchangeRates } from '../currency';\nimport Currency from '../../entities/Currency';\n\nexport default {\n  load,\n  save,\n  saveLocal,\n  destroy\n};\n\nconst defaultLocalSettings = {\n  _id: '_local/settings',\n  collapsedSections: []\n};\nconst defaultSettings = {\n  _id: 'settings',\n  currency: { base: Currency.defaultBase, secondary: [] },\n  exchangeRate: { [Currency.defaultBase]: 1 }\n};\n\nfunction destroy() {\n  return destroySettingsDB();\n}\n\nasync function save(settings) {\n  if (remoteSettingsDB()) {\n    await remoteSettingsDB()\n      .get('settings')\n      .then(remote => remote, err => defaultSettings)\n      .then(doc => remoteSettingsDB().put({ ...doc, ...settings }))\n      .catch(error => {\n        if (error.status !== 403) throw error;\n      });\n  }\n\n  return settingsDB()\n    .get('settings')\n    .then(local => local, err => defaultSettings)\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\n}\n\nfunction saveLocal(settings) {\n  return settingsDB()\n    .get('_local/settings')\n    .then(doc => doc, err => defaultLocalSettings)\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\n}\n\nfunction load() {\n  return settingsDB()\n    .get('_local/settings')\n    .then(local => local, err => defaultLocalSettings)\n    .then(local => mergeLocalWithSyncedSettings(local));\n}\n\nasync function mergeLocalWithSyncedSettings(local) {\n  return settingsDB()\n    .get('settings')\n    .then(settings => settings, err => defaultSettings)\n    .then(settings => syncSettings(settings))\n    .then(settings => ({ ...settings, ...local }));\n}\n\nasync function syncSettings(settings) {\n  if (!remoteSettingsDB()) return settings;\n\n  try {\n    const remote = await remoteSettingsDB().get('settings');\n    const base = remote.currency.base;\n    const secondary = union(\n      settings.currency.base,\n      settings.currency.secondary,\n      remote.currency.secondary\n    ).filter(code => code !== base);\n\n    const synced = {\n      currency: { base, secondary },\n      exchangeRate:\n        settings.currency.base === base\n          ? { ...settings.exchangeRate, ...remote.exchangeRate }\n          : await fetchExchangeRates(base, secondary),\n      isSetupComplete: remote.isSetupComplete\n    };\n\n    if (!isEqual(pick(settings, Object.keys(synced)), synced)) {\n      await save(synced);\n    }\n\n    return synced;\n  } catch (error) {\n    return settings;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}