{"ast":null,"code":"import _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Transaction/Filter/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Button } from 'semantic-ui-react';\nimport Calendar from './Calendar';\nimport Filters from './Filters';\nimport AppliedFilters from './AppliedFilters';\nimport { DateFilterRangeT, getDateRangeFilterOptions, defaultDateFilterRange, getDateFilterRangeStart, getDateFilterRangeEnd } from 'entities/Transaction/DateFilterRange';\nimport { DropdownOption } from 'components/types';\nimport './index.css';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Filter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.options = getDateRangeFilterOptions();\n    _this.lastValue = defaultDateFilterRange;\n\n    _this.handleDateRange = function (_, _ref) {\n      var value = _ref.value;\n      if (value === _this.lastValue) return;\n\n      if (value === DateFilterRangeT.custom) {\n        _this.props.toggleFilterCalendar();\n      } else {\n        _this.props.changeFilterDate({\n          dateStart: getDateFilterRangeStart(value),\n          dateEnd: getDateFilterRangeEnd(value)\n        });\n\n        _this.lastValue = value;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        basic: true,\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"plus\",\n        labelPosition: \"left\",\n        content: \"New\",\n        onClick: function onClick() {\n          return _this2.props.openTransactionInModal(_objectSpread({}, _this2.props.selectedAccount ? {\n            accountId: _this2.props.selectedAccount\n          } : {}));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        button: true,\n        className: \"icon\",\n        options: this.options,\n        defaultValue: defaultDateFilterRange,\n        onChange: this.handleDateRange,\n        text: this.props.dateRangeLabel,\n        labeled: true,\n        icon: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Button, {\n        icon: \"filter\",\n        onClick: this.props.toggleFilterModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Calendar, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(Filters, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(AppliedFilters, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nFilter.propTypes = {\n  isMobile: PropTypes.bool,\n  dateRangeLabel: PropTypes.string,\n  isCalendarOpen: PropTypes.bool,\n  isFilterModalOpen: PropTypes.bool,\n  selectedAccount: PropTypes.string,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  accountNameMap: PropTypes.object,\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeFilterDate: PropTypes.func,\n  toggleFilterCalendar: PropTypes.func,\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func,\n  openTransactionInModal: PropTypes.func\n};\nexport default Filter;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Transaction/Filter/index.js"],"names":["React","PropTypes","Dropdown","Button","Calendar","Filters","AppliedFilters","DateFilterRangeT","getDateRangeFilterOptions","defaultDateFilterRange","getDateFilterRangeStart","getDateFilterRangeEnd","DropdownOption","Filter","options","lastValue","handleDateRange","_","value","custom","props","toggleFilterCalendar","changeFilterDate","dateStart","dateEnd","openTransactionInModal","selectedAccount","accountId","dateRangeLabel","toggleFilterModal","Component","propTypes","isMobile","bool","string","isCalendarOpen","isFilterModalOpen","appliedAccounts","arrayOf","accountOptions","accountNameMap","object","appliedTags","tagsOptions","func","applyFilters"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Button } from 'semantic-ui-react';\nimport Calendar from './Calendar';\nimport Filters from './Filters';\nimport AppliedFilters from './AppliedFilters';\nimport {\n  DateFilterRangeT,\n  getDateRangeFilterOptions,\n  defaultDateFilterRange,\n  getDateFilterRangeStart,\n  getDateFilterRangeEnd\n} from 'entities/Transaction/DateFilterRange';\nimport { DropdownOption } from 'components/types';\nimport './index.css';\n\nclass Filter extends React.Component {\n  options = getDateRangeFilterOptions();\n  lastValue = defaultDateFilterRange;\n\n  handleDateRange = (_, { value }) => {\n    if (value === this.lastValue) return;\n    if (value === DateFilterRangeT.custom) {\n      this.props.toggleFilterCalendar();\n    } else {\n      this.props.changeFilterDate({\n        dateStart: getDateFilterRangeStart(value),\n        dateEnd: getDateFilterRangeEnd(value)\n      });\n      this.lastValue = value;\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container-header\">\n          <Button.Group basic fluid>\n            <Button\n              icon=\"plus\"\n              labelPosition=\"left\"\n              content=\"New\"\n              onClick={() =>\n                this.props.openTransactionInModal({\n                  ...(this.props.selectedAccount\n                    ? { accountId: this.props.selectedAccount }\n                    : {})\n                })\n              }\n            />\n            <Dropdown\n              button\n              className=\"icon\"\n              options={this.options}\n              defaultValue={defaultDateFilterRange}\n              onChange={this.handleDateRange}\n              text={this.props.dateRangeLabel}\n              labeled\n              icon=\"calendar\"\n            />\n            <Button icon=\"filter\" onClick={this.props.toggleFilterModal} />\n          </Button.Group>\n          <Calendar {...this.props} />\n          <Filters {...this.props} />\n        </div>\n        <AppliedFilters {...this.props} />\n      </React.Fragment>\n    );\n  }\n}\n\nFilter.propTypes = {\n  isMobile: PropTypes.bool,\n  dateRangeLabel: PropTypes.string,\n  isCalendarOpen: PropTypes.bool,\n  isFilterModalOpen: PropTypes.bool,\n  selectedAccount: PropTypes.string,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  accountNameMap: PropTypes.object,\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  changeFilterDate: PropTypes.func,\n  toggleFilterCalendar: PropTypes.func,\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func,\n  openTransactionInModal: PropTypes.func\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}