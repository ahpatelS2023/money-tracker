{"ast":null,"code":"import _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { getType } from 'typesafe-actions';\nimport * as SignIn from './SignIn.action';\nvar initialState = {\n  email: '',\n  code: ''\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case getType(SignIn.changeEmail):\n      return _objectSpread({}, state, {\n        email: action.payload\n      });\n\n    case getType(SignIn.changeCode):\n      return _objectSpread({}, state, {\n        code: action.payload\n      });\n\n    case getType(SignIn.sendCode):\n      return _objectSpread({}, state, {\n        sendCodeStatus: 'REQUEST'\n      });\n\n    case getType(SignIn.sendCodeSuccess):\n      return _objectSpread({}, state, {\n        sendCodeStatus: 'SUCCESS'\n      });\n\n    case getType(SignIn.sendCodeFailure):\n      return _objectSpread({}, state, {\n        sendCodeStatus: 'FAILURE',\n        error: action.payload.message\n      });\n\n    case getType(SignIn.verifyCode):\n      return _objectSpread({}, state, {\n        verifyCodeStatus: 'REQUEST'\n      });\n\n    case getType(SignIn.verifyCodeSuccess):\n      return _objectSpread({}, state, {\n        verifyCodeStatus: 'SUCCESS'\n      });\n\n    case getType(SignIn.verifyCodeFailure):\n      return _objectSpread({}, state, {\n        verifyCodeStatus: 'FAILURE',\n        error: action.payload.message\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/features/user/state/ui/SignIn.reducer.ts"],"names":["getType","SignIn","initialState","email","code","state","action","type","changeEmail","payload","changeCode","sendCode","sendCodeStatus","sendCodeSuccess","sendCodeFailure","error","message","verifyCode","verifyCodeStatus","verifyCodeSuccess","verifyCodeFailure"],"mappings":";AAAA,SAAqBA,OAArB,QAAoC,kBAApC;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAaA,IAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE,EAD0B;AAEjCC,EAAAA,IAAI,EAAE;AAF2B,CAAnC;AAKA,gBAAe,YAA+D;AAAA,MAA9DC,KAA8D,uEAAtDH,YAAsD;AAAA,MAAxCI,MAAwC;;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACC,MAAM,CAACO,WAAR,CAAZ;AACE,+BAAYH,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAAjC;;AACF,SAAKT,OAAO,CAACC,MAAM,CAACS,UAAR,CAAZ;AACE,+BAAYL,KAAZ;AAAmBD,QAAAA,IAAI,EAAEE,MAAM,CAACG;AAAhC;;AACF,SAAKT,OAAO,CAACC,MAAM,CAACU,QAAR,CAAZ;AACE,+BAAYN,KAAZ;AAAmBO,QAAAA,cAAc,EAAE;AAAnC;;AACF,SAAKZ,OAAO,CAACC,MAAM,CAACY,eAAR,CAAZ;AACE,+BAAYR,KAAZ;AAAmBO,QAAAA,cAAc,EAAE;AAAnC;;AACF,SAAKZ,OAAO,CAACC,MAAM,CAACa,eAAR,CAAZ;AACE,+BACKT,KADL;AAEEO,QAAAA,cAAc,EAAE,SAFlB;AAGEG,QAAAA,KAAK,EAAET,MAAM,CAACG,OAAP,CAAeO;AAHxB;;AAKF,SAAKhB,OAAO,CAACC,MAAM,CAACgB,UAAR,CAAZ;AACE,+BAAYZ,KAAZ;AAAmBa,QAAAA,gBAAgB,EAAE;AAArC;;AACF,SAAKlB,OAAO,CAACC,MAAM,CAACkB,iBAAR,CAAZ;AACE,+BAAYd,KAAZ;AAAmBa,QAAAA,gBAAgB,EAAE;AAArC;;AACF,SAAKlB,OAAO,CAACC,MAAM,CAACmB,iBAAR,CAAZ;AACE,+BACKf,KADL;AAEEa,QAAAA,gBAAgB,EAAE,SAFpB;AAGEH,QAAAA,KAAK,EAAET,MAAM,CAACG,OAAP,CAAeO;AAHxB;;AAKF;AACE,aAAOX,KAAP;AA1BJ;AA4BD,CA7BD","sourcesContent":["import { ActionType, getType } from 'typesafe-actions';\nimport * as SignIn from './SignIn.action';\nimport { AsyncOperationStateT } from 'typings/async';\n\nexport interface SignInStateT {\n  email: string;\n  code: string;\n  error?: string;\n  sendCodeStatus?: AsyncOperationStateT;\n  verifyCodeStatus?: AsyncOperationStateT;\n}\n\nexport type SignInActionT = ActionType<typeof SignIn>;\n\nconst initialState: SignInStateT = {\n  email: '',\n  code: ''\n};\n\nexport default (state = initialState, action: SignInActionT): SignInStateT => {\n  switch (action.type) {\n    case getType(SignIn.changeEmail):\n      return { ...state, email: action.payload };\n    case getType(SignIn.changeCode):\n      return { ...state, code: action.payload };\n    case getType(SignIn.sendCode):\n      return { ...state, sendCodeStatus: 'REQUEST' };\n    case getType(SignIn.sendCodeSuccess):\n      return { ...state, sendCodeStatus: 'SUCCESS' };\n    case getType(SignIn.sendCodeFailure):\n      return {\n        ...state,\n        sendCodeStatus: 'FAILURE',\n        error: action.payload.message\n      };\n    case getType(SignIn.verifyCode):\n      return { ...state, verifyCodeStatus: 'REQUEST' };\n    case getType(SignIn.verifyCodeSuccess):\n      return { ...state, verifyCodeStatus: 'SUCCESS' };\n    case getType(SignIn.verifyCodeFailure):\n      return {\n        ...state,\n        verifyCodeStatus: 'FAILURE',\n        error: action.payload.message\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}