{"ast":null,"code":"import _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Header/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon, Header } from 'semantic-ui-react';\nimport Logo from '../Logo';\nimport { toggleSidebar } from '../../actions/ui/sidebar';\nimport { sync } from '../../actions/ui/sync';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport './index.css';\n\nvar AppHeader = function AppHeader(_ref) {\n  var label = _ref.label,\n      isMobile = _ref.isMobile,\n      isAuthenticated = _ref.isAuthenticated,\n      isSyncRunning = _ref.isSyncRunning,\n      hasPendingChanges = _ref.hasPendingChanges,\n      toggleSidebar = _ref.toggleSidebar,\n      sync = _ref.sync;\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isMobile && React.createElement(Icon, {\n    name: \"bars\",\n    onClick: toggleSidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), !isMobile && React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Header.Content, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, label), isAuthenticated && (isSyncRunning ? React.createElement(Icon, {\n    name: \"refresh\",\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : React.createElement(Icon, {\n    name: \"refresh\",\n    color: hasPendingChanges ? 'olive' : undefined,\n    onClick: sync,\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n};\n\nAppHeader.propTypes = {\n  label: PropTypes.string.isRequired,\n  isMobile: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  isSyncRunning: PropTypes.bool,\n  toggleSidebar: PropTypes.func,\n  sync: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return _objectSpread({}, ownProps, {\n    isMobile: state.ui.isMobile,\n    isAuthenticated: isSignedIn(state),\n    isSyncRunning: state.ui.sync.isRunning,\n    hasPendingChanges: state.ui.sync.hasPendingChanges\n  });\n};\n\nexport default connect(mapStateToProps, {\n  toggleSidebar: toggleSidebar,\n  sync: sync\n})(AppHeader);","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Header/index.js"],"names":["React","PropTypes","connect","Icon","Header","Logo","toggleSidebar","sync","isSignedIn","AppHeader","label","isMobile","isAuthenticated","isSyncRunning","hasPendingChanges","undefined","cursor","propTypes","string","isRequired","bool","func","mapStateToProps","state","ownProps","ui","isRunning"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAO,aAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAChBC,KADgB,QAChBA,KADgB;AAAA,MAEhBC,QAFgB,QAEhBA,QAFgB;AAAA,MAGhBC,eAHgB,QAGhBA,eAHgB;AAAA,MAIhBC,aAJgB,QAIhBA,aAJgB;AAAA,MAKhBC,iBALgB,QAKhBA,iBALgB;AAAA,MAMhBR,aANgB,QAMhBA,aANgB;AAAA,MAOhBC,IAPgB,QAOhBA,IAPgB;AAAA,SAShB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,IAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAEL,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,EAEG,CAACK,QAAD,IAAa,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,EAGE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,EAAE,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,KAAzB,CAHF,EAIGE,eAAe,KACbC,aAAa,GACZ,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,OAAO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAEC,iBAAiB,GAAG,OAAH,GAAaC,SAFvC;AAGE,IAAA,OAAO,EAAER,IAHX;AAIE,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJY,CAJlB,CADF,CATgB;AAAA,CAAlB;;AA6BAP,SAAS,CAACQ,SAAV,GAAsB;AACpBP,EAAAA,KAAK,EAAET,SAAS,CAACiB,MAAV,CAAiBC,UADJ;AAEpBR,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IAFA;AAGpBR,EAAAA,eAAe,EAAEX,SAAS,CAACmB,IAHP;AAIpBP,EAAAA,aAAa,EAAEZ,SAAS,CAACmB,IAJL;AAKpBd,EAAAA,aAAa,EAAEL,SAAS,CAACoB,IALL;AAMpBd,EAAAA,IAAI,EAAEN,SAAS,CAACoB;AANI,CAAtB;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR;AAAA,2BACnBA,QADmB;AAEtBb,IAAAA,QAAQ,EAAEY,KAAK,CAACE,EAAN,CAASd,QAFG;AAGtBC,IAAAA,eAAe,EAAEJ,UAAU,CAACe,KAAD,CAHL;AAItBV,IAAAA,aAAa,EAAEU,KAAK,CAACE,EAAN,CAASlB,IAAT,CAAcmB,SAJP;AAKtBZ,IAAAA,iBAAiB,EAAES,KAAK,CAACE,EAAN,CAASlB,IAAT,CAAcO;AALX;AAAA,CAAxB;;AAQA,eAAeZ,OAAO,CACpBoB,eADoB,EAEpB;AAAEhB,EAAAA,aAAa,EAAbA,aAAF;AAAiBC,EAAAA,IAAI,EAAJA;AAAjB,CAFoB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon, Header } from 'semantic-ui-react';\nimport Logo from '../Logo';\nimport { toggleSidebar } from '../../actions/ui/sidebar';\nimport { sync } from '../../actions/ui/sync';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport './index.css';\n\nconst AppHeader = ({\n  label,\n  isMobile,\n  isAuthenticated,\n  isSyncRunning,\n  hasPendingChanges,\n  toggleSidebar,\n  sync\n}) => (\n  <header>\n    <Header>\n      {isMobile && <Icon name=\"bars\" onClick={toggleSidebar} />}\n      {!isMobile && <Logo />}\n      <Header.Content as=\"h2\">{label}</Header.Content>\n      {isAuthenticated &&\n        (isSyncRunning ? (\n          <Icon name=\"refresh\" loading />\n        ) : (\n          <Icon\n            name=\"refresh\"\n            color={hasPendingChanges ? 'olive' : undefined}\n            onClick={sync}\n            style={{ cursor: 'pointer' }}\n          />\n        ))}\n    </Header>\n  </header>\n);\n\nAppHeader.propTypes = {\n  label: PropTypes.string.isRequired,\n  isMobile: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  isSyncRunning: PropTypes.bool,\n  toggleSidebar: PropTypes.func,\n  sync: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  isMobile: state.ui.isMobile,\n  isAuthenticated: isSignedIn(state),\n  isSyncRunning: state.ui.sync.isRunning,\n  hasPendingChanges: state.ui.sync.hasPendingChanges\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleSidebar, sync }\n)(AppHeader);\n"]},"metadata":{},"sourceType":"module"}