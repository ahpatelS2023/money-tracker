{"ast":null,"code":"var _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Settings/Currency/ExchangeRate.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport ExchangeRateGrid from './ExchangeRateGrid';\nimport ExchangeRateTable from './ExchangeRateTable';\nimport './index.css';\n\nvar ExchangeRate = function ExchangeRate(props) {\n  return props.secondary.length > 0 && React.createElement(Segment, {\n    basic: true,\n    className: \"exchange-rate-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Dimmer, {\n    inverted: true,\n    active: props.isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), props.isMobile ? React.createElement(ExchangeRateTable, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })) : React.createElement(ExchangeRateGrid, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(Button, {\n    basic: true,\n    content: \"Update exchange rate\",\n    icon: \"refresh\",\n    onClick: props.updateExchangeRate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nExchangeRate.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  isLoading: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  exchangeRate: PropTypes.objectOf(PropTypes.number),\n  updateExchangeRate: PropTypes.func\n};\nexport default ExchangeRate;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Settings/Currency/ExchangeRate.js"],"names":["React","PropTypes","Segment","Dimmer","Loader","Button","ExchangeRateGrid","ExchangeRateTable","ExchangeRate","props","secondary","length","isLoading","isMobile","updateExchangeRate","propTypes","base","string","arrayOf","bool","exchangeRate","objectOf","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,MAAlC,QAAgD,mBAAhD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,aAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SACxBA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,IACE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,SAAS,EAAC,qBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,MAAM,EAAEF,KAAK,CAACG,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGH,KAAK,CAACI,QAAN,GACC,oBAAC,iBAAD,oBAAuBJ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,GAGC,oBAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPJ,EASE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,EAAC,sBAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,OAAO,EAAEA,KAAK,CAACK,kBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFsB;AAAA,CAA1B;;AAoBAN,YAAY,CAACO,SAAb,GAAyB;AACvBC,EAAAA,IAAI,EAAEf,SAAS,CAACgB,MADO;AAEvBP,EAAAA,SAAS,EAAET,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACgB,MAA5B,CAFY;AAGvBL,EAAAA,SAAS,EAAEX,SAAS,CAACkB,IAHE;AAIvBN,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB,IAJG;AAKvBC,EAAAA,YAAY,EAAEnB,SAAS,CAACoB,QAAV,CAAmBpB,SAAS,CAACqB,MAA7B,CALS;AAMvBR,EAAAA,kBAAkB,EAAEb,SAAS,CAACsB;AANP,CAAzB;AASA,eAAef,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Dimmer, Loader, Button } from 'semantic-ui-react';\nimport ExchangeRateGrid from './ExchangeRateGrid';\nimport ExchangeRateTable from './ExchangeRateTable';\nimport './index.css';\n\nconst ExchangeRate = props =>\n  props.secondary.length > 0 && (\n    <Segment basic className=\"exchange-rate-table\">\n      <Dimmer inverted active={props.isLoading}>\n        <Loader />\n      </Dimmer>\n      {props.isMobile ? (\n        <ExchangeRateTable {...props} />\n      ) : (\n        <ExchangeRateGrid {...props} />\n      )}\n      <Button\n        basic\n        content=\"Update exchange rate\"\n        icon=\"refresh\"\n        onClick={props.updateExchangeRate}\n      />\n    </Segment>\n  );\n\nExchangeRate.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  isLoading: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  exchangeRate: PropTypes.objectOf(PropTypes.number),\n  updateExchangeRate: PropTypes.func\n};\n\nexport default ExchangeRate;\n"]},"metadata":{},"sourceType":"module"}