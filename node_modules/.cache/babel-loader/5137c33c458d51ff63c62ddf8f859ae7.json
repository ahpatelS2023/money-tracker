{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Transaction/Filter/Filters.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Dropdown } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filters, _React$Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.handleAccountChange = function (event, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        accounts: value\n      });\n    };\n\n    _this.handleTagsChange = function (event, _ref2) {\n      var value = _ref2.value;\n      return _this.setState({\n        tags: value\n      });\n    };\n\n    _this.handleResetClick = function () {\n      _this.setState({\n        accounts: [],\n        tags: []\n      });\n    };\n\n    _this.handleApplyClick = function () {\n      _this.props.applyFilters(_this.state);\n\n      _this.props.toggleFilterModal();\n    };\n\n    _this.state = {\n      accounts: _this.props.appliedAccounts,\n      tags: _this.props.appliedTags\n    };\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref3) {\n      var appliedAccounts = _ref3.appliedAccounts,\n          appliedTags = _ref3.appliedTags;\n      this.setState({\n        accounts: appliedAccounts,\n        tags: appliedTags\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        open: this.props.isFilterModalOpen,\n        onClose: this.props.toggleFilterModal,\n        closeIcon: true,\n        size: \"tiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Filter transactions\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Account\"), React.createElement(Dropdown, {\n        multiple: true,\n        selection: true,\n        search: true,\n        closeOnChange: true,\n        onChange: this.handleAccountChange,\n        options: this.props.accountOptions,\n        value: this.state.accounts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Tags\"), React.createElement(Dropdown, {\n        multiple: true,\n        selection: true,\n        search: true,\n        closeOnChange: true,\n        onChange: this.handleTagsChange,\n        options: this.props.tagsOptions,\n        value: this.state.tags,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        content: \"Reset\",\n        onClick: this.handleResetClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Button, {\n        content: \"Apply\",\n        onClick: this.handleApplyClick,\n        positive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Filters;\n}(React.Component);\n\nFilters.propTypes = {\n  isFilterModalOpen: PropTypes.bool,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func\n};\nexport default Filters;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Transaction/Filter/Filters.js"],"names":["React","PropTypes","Modal","Button","Form","Dropdown","DropdownOption","Filters","props","handleAccountChange","event","value","setState","accounts","handleTagsChange","tags","handleResetClick","handleApplyClick","applyFilters","state","toggleFilterModal","appliedAccounts","appliedTags","isFilterModalOpen","accountOptions","tagsOptions","Component","propTypes","bool","arrayOf","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Dropdown } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\n\nclass Filters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accounts: this.props.appliedAccounts,\n      tags: this.props.appliedTags\n    };\n  }\n\n  componentWillReceiveProps({ appliedAccounts, appliedTags }) {\n    this.setState({\n      accounts: appliedAccounts,\n      tags: appliedTags\n    });\n  }\n\n  handleAccountChange = (event, { value }) =>\n    this.setState({ accounts: value });\n  handleTagsChange = (event, { value }) => this.setState({ tags: value });\n\n  handleResetClick = () => {\n    this.setState({\n      accounts: [],\n      tags: []\n    });\n  };\n\n  handleApplyClick = () => {\n    this.props.applyFilters(this.state);\n    this.props.toggleFilterModal();\n  };\n\n  render() {\n    return (\n      <Modal\n        open={this.props.isFilterModalOpen}\n        onClose={this.props.toggleFilterModal}\n        closeIcon\n        size=\"tiny\"\n      >\n        <Modal.Header>Filter transactions</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Account</label>\n                <Dropdown\n                  multiple\n                  selection\n                  search\n                  closeOnChange\n                  onChange={this.handleAccountChange}\n                  options={this.props.accountOptions}\n                  value={this.state.accounts}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Tags</label>\n                <Dropdown\n                  multiple\n                  selection\n                  search\n                  closeOnChange\n                  onChange={this.handleTagsChange}\n                  options={this.props.tagsOptions}\n                  value={this.state.tags}\n                />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\n          <Button content=\"Apply\" onClick={this.handleApplyClick} positive />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nFilters.propTypes = {\n  isFilterModalOpen: PropTypes.bool,\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\n  toggleFilterModal: PropTypes.func,\n  applyFilters: PropTypes.func\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}