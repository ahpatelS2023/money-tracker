{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Settings/Currency/ExchangeRateTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nvar ExchangeRateTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExchangeRateTable, _React$Component);\n\n  function ExchangeRateTable() {\n    _classCallCheck(this, ExchangeRateTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExchangeRateTable).apply(this, arguments));\n  }\n\n  _createClass(ExchangeRateTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          base = _this$props.base,\n          secondary = _this$props.secondary,\n          exchangeRate = _this$props.exchangeRate;\n      return React.createElement(Table, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, secondary.map(function (code) {\n        return React.createElement(Table.Row, {\n          key: code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"1 \", code, \" = \", Number(1 / exchangeRate[code]).toFixed(6), \" \", base), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"1 \", base, \" = \", exchangeRate[code], \" \", code));\n      })));\n    }\n  }]);\n\n  return ExchangeRateTable;\n}(React.Component);\n\nExchangeRateTable.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\n};\nexport default ExchangeRateTable;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Settings/Currency/ExchangeRateTable.js"],"names":["React","PropTypes","Table","ExchangeRateTable","props","base","secondary","exchangeRate","map","code","Number","toFixed","Component","propTypes","string","arrayOf","objectOf","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,mBAAtB;;IAEMC,iB;;;;;;;;;;;;;6BACK;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,SADP,eACOA,SADP;AAAA,UACkBC,YADlB,eACkBA,YADlB;AAEP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,SAAS,CAACE,GAAV,CAAc,UAAAC,IAAI;AAAA,eACjB,oBAAC,KAAD,CAAO,GAAP;AAAW,UAAA,GAAG,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKA,IADL,SACcC,MAAM,CAAC,IAAIH,YAAY,CAACE,IAAD,CAAjB,CAAN,CAA+BE,OAA/B,CAAuC,CAAvC,CADd,OAC0DN,IAD1D,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKA,IADL,SACcE,YAAY,CAACE,IAAD,CAD1B,OACmCA,IADnC,CAJF,CADiB;AAAA,OAAlB,CADH,CADF,CADF;AAgBD;;;;EAnB6BT,KAAK,CAACY,S;;AAsBtCT,iBAAiB,CAACU,SAAlB,GAA8B;AAC5BR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MADY;AAE5BR,EAAAA,SAAS,EAAEL,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACa,MAA5B,CAFiB;AAG5BP,EAAAA,YAAY,EAAEN,SAAS,CAACe,QAAV,CAAmBf,SAAS,CAACgB,MAA7B;AAHc,CAA9B;AAMA,eAAed,iBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nclass ExchangeRateTable extends React.Component {\n  render() {\n    const { base, secondary, exchangeRate } = this.props;\n    return (\n      <Table basic>\n        <Table.Body>\n          {secondary.map(code => (\n            <Table.Row key={code}>\n              <Table.Cell>\n                1 {code} = {Number(1 / exchangeRate[code]).toFixed(6)} {base}\n              </Table.Cell>\n              <Table.Cell>\n                1 {base} = {exchangeRate[code]} {code}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nExchangeRateTable.propTypes = {\n  base: PropTypes.string,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\n};\n\nexport default ExchangeRateTable;\n"]},"metadata":{},"sourceType":"module"}