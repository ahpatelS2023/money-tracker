{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(bootstrapSaga);\n\nimport { takeLatest } from 'redux-saga/effects';\nimport { bootstrap } from '../actions/app';\nimport { isUserLoggedIn, isDemoUser } from 'features/user/state/User.saga';\nimport { loadSetting } from './settings';\nimport { syncSaga } from './sync';\nexport function bootstrapSaga() {\n  return _regeneratorRuntime.wrap(function bootstrapSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return isDemoUser();\n\n        case 2:\n          _context.next = 4;\n          return isUserLoggedIn();\n\n        case 4:\n          _context.next = 6;\n          return loadSetting();\n\n        case 6:\n          _context.next = 8;\n          return syncSaga();\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\nexport default [takeLatest(bootstrap, bootstrapSaga)];","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/sagas/bootstrap.js"],"names":["bootstrapSaga","takeLatest","bootstrap","isUserLoggedIn","isDemoUser","loadSetting","syncSaga"],"mappings":";;;;yBAMiBA,a;;AANjB,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,+BAA3C;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAO,SAAUN,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMI,UAAU,EAAhB;;AADK;AAAA;AAEL,iBAAMD,cAAc,EAApB;;AAFK;AAAA;AAGL,iBAAME,WAAW,EAAjB;;AAHK;AAAA;AAIL,iBAAMC,QAAQ,EAAd;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,eAAe,CAACL,UAAU,CAACC,SAAD,EAAYF,aAAZ,CAAX,CAAf","sourcesContent":["import { takeLatest } from 'redux-saga/effects';\nimport { bootstrap } from '../actions/app';\nimport { isUserLoggedIn, isDemoUser } from 'features/user/state/User.saga';\nimport { loadSetting } from './settings';\nimport { syncSaga } from './sync';\n\nexport function* bootstrapSaga() {\n  yield isDemoUser();\n  yield isUserLoggedIn();\n  yield loadSetting();\n  yield syncSaga();\n}\n\nexport default [takeLatest(bootstrap, bootstrapSaga)];\n"]},"metadata":{},"sourceType":"module"}