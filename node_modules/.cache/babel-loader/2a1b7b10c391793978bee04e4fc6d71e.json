{"ast":null,"code":"import _defineProperty from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _handleActions;\n\nimport { handleActions, combineActions } from 'redux-actions';\nimport { changeSettingsCurrency, updateExchangeRate, updateExchangeRateSuccess, updateExchangeRateFailure } from '../../actions/settings';\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, combineActions(changeSettingsCurrency, updateExchangeRate), function (state) {\n  return _objectSpread({}, state, {\n    isExchangeLoading: true\n  });\n}), _defineProperty(_handleActions, combineActions(updateExchangeRateSuccess, updateExchangeRateFailure), function (state) {\n  return _objectSpread({}, state, {\n    isExchangeLoading: false\n  });\n}), _handleActions), {\n  isExchangeLoading: false\n});","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/reducers/ui/settings.js"],"names":["handleActions","combineActions","changeSettingsCurrency","updateExchangeRate","updateExchangeRateSuccess","updateExchangeRateFailure","state","isExchangeLoading"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,cAAxB,QAA8C,eAA9C;AACA,SACEC,sBADF,EAEEC,kBAFF,EAGEC,yBAHF,EAIEC,yBAJF,QAKO,wBALP;AAOA,eAAeL,aAAa,uDAEvBC,cAAc,CAACC,sBAAD,EAAyBC,kBAAzB,CAFS,EAEsC,UAAAG,KAAK;AAAA,2BAC9DA,KAD8D;AAEjEC,IAAAA,iBAAiB,EAAE;AAF8C;AAAA,CAF3C,mCAMvBN,cAAc,CACbG,yBADa,EAEbC,yBAFa,CANS,EASpB,UAAAC,KAAK;AAAA,2BACJA,KADI;AAEPC,IAAAA,iBAAiB,EAAE;AAFZ;AAAA,CATe,oBAc1B;AAAEA,EAAAA,iBAAiB,EAAE;AAArB,CAd0B,CAA5B","sourcesContent":["import { handleActions, combineActions } from 'redux-actions';\nimport {\n  changeSettingsCurrency,\n  updateExchangeRate,\n  updateExchangeRateSuccess,\n  updateExchangeRateFailure\n} from '../../actions/settings';\n\nexport default handleActions(\n  {\n    [combineActions(changeSettingsCurrency, updateExchangeRate)]: state => ({\n      ...state,\n      isExchangeLoading: true\n    }),\n    [combineActions(\n      updateExchangeRateSuccess,\n      updateExchangeRateFailure\n    )]: state => ({\n      ...state,\n      isExchangeLoading: false\n    })\n  },\n  { isExchangeLoading: false }\n);\n"]},"metadata":{},"sourceType":"module"}