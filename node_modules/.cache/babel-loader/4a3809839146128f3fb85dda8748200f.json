{"ast":null,"code":"import _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState, _handleActions;\n\nimport { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport { loadExpenseTagsSuccess, loadIncomeTagsSuccess } from '../../actions/entities/tags';\nimport { addTag } from '../../actions/ui/form/transaction';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport { TransationKindT } from '../../entities/Transaction';\nvar Expense = TransationKindT.Expense,\n    Transfer = TransationKindT.Transfer,\n    Income = TransationKindT.Income;\nvar initialState = (_initialState = {}, _defineProperty(_initialState, Expense, []), _defineProperty(_initialState, Transfer, []), _defineProperty(_initialState, Income, []), _initialState);\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, loadExpenseTagsSuccess, function (state, _ref) {\n  var payload = _ref.payload;\n  return _objectSpread({}, state, _defineProperty({}, Expense, payload));\n}), _defineProperty(_handleActions, loadIncomeTagsSuccess, function (state, _ref2) {\n  var payload = _ref2.payload;\n  return _objectSpread({}, state, _defineProperty({}, Income, payload));\n}), _defineProperty(_handleActions, addTag, function (state, action) {\n  var _action$payload = action.payload,\n      kind = _action$payload.kind,\n      tag = _action$payload.tag;\n  return state[kind].includes(tag) ? state : _objectSpread({}, state, _defineProperty({}, kind, state[kind].concat(tag)));\n}), _defineProperty(_handleActions, getType(signOutSuccess), function () {\n  return initialState;\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/reducers/entities/tags.js"],"names":["handleActions","getType","loadExpenseTagsSuccess","loadIncomeTagsSuccess","addTag","signOutSuccess","TransationKindT","Expense","Transfer","Income","initialState","state","payload","action","kind","tag","includes","concat"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SACEC,sBADF,EAEEC,qBAFF,QAGO,6BAHP;AAIA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,eAAT,QAAgC,4BAAhC;IAEQC,O,GAA8BD,e,CAA9BC,O;IAASC,Q,GAAqBF,e,CAArBE,Q;IAAUC,M,GAAWH,e,CAAXG,M;AAC3B,IAAMC,YAAY,uDAAMH,OAAN,EAAgB,EAAhB,kCAAqBC,QAArB,EAAgC,EAAhC,kCAAqCC,MAArC,EAA8C,EAA9C,iBAAlB;AAEA,eAAeT,aAAa,uDAEvBE,sBAFuB,EAEE,UAACS,KAAD;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,2BACrBD,KADqB,sBAEvBJ,OAFuB,EAEbK,OAFa;AAAA,CAFF,mCAMvBT,qBANuB,EAMC,UAACQ,KAAD;AAAA,MAAUC,OAAV,SAAUA,OAAV;AAAA,2BACpBD,KADoB,sBAEtBF,MAFsB,EAEbG,OAFa;AAAA,CAND,mCAUvBR,MAVuB,EAUd,UAACO,KAAD,EAAQE,MAAR,EAAmB;AAAA,wBACLA,MAAM,CAACD,OADF;AAAA,MACnBE,IADmB,mBACnBA,IADmB;AAAA,MACbC,GADa,mBACbA,GADa;AAE3B,SAAOJ,KAAK,CAACG,IAAD,CAAL,CAAYE,QAAZ,CAAqBD,GAArB,IACHJ,KADG,qBAEEA,KAFF,sBAEUG,IAFV,EAEiBH,KAAK,CAACG,IAAD,CAAL,CAAYG,MAAZ,CAAmBF,GAAnB,CAFjB,EAAP;AAGD,CAfuB,mCAgBvBd,OAAO,CAACI,cAAD,CAhBgB,EAgBG;AAAA,SAAMK,YAAN;AAAA,CAhBH,oBAkB1BA,YAlB0B,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { getType } from 'typesafe-actions';\nimport {\n  loadExpenseTagsSuccess,\n  loadIncomeTagsSuccess\n} from '../../actions/entities/tags';\nimport { addTag } from '../../actions/ui/form/transaction';\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\nimport { TransationKindT } from '../../entities/Transaction';\n\nconst { Expense, Transfer, Income } = TransationKindT;\nconst initialState = { [Expense]: [], [Transfer]: [], [Income]: [] };\n\nexport default handleActions(\n  {\n    [loadExpenseTagsSuccess]: (state, { payload }) => ({\n      ...state,\n      [Expense]: payload\n    }),\n    [loadIncomeTagsSuccess]: (state, { payload }) => ({\n      ...state,\n      [Income]: payload\n    }),\n    [addTag]: (state, action) => {\n      const { kind, tag } = action.payload;\n      return state[kind].includes(tag)\n        ? state\n        : { ...state, [kind]: state[kind].concat(tag) };\n    },\n    [getType(signOutSuccess)]: () => initialState\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}