{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Account/ModalForm/index.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Header, Modal } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport DeleteStrategy from './DeleteStrategy';\n\nvar ModalForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalForm, _React$Component);\n\n  function ModalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.reset = function () {\n      if (_this.props.modal.isDeleteRunning) return false;\n\n      _this.props.resetAccountForm();\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        closeIcon: true,\n        size: \"small\",\n        className: \"account-form\",\n        open: this.props.modal.isOpen,\n        onClose: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Header, {\n        icon: \"file text outline\",\n        content: this.props.isEdit ? 'Edit Account' : 'New Account',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.modal.isDeleteRequest ? React.createElement(DeleteStrategy, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })) : React.createElement(this.props.EditForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.renderModalActions()));\n    }\n  }, {\n    key: \"renderModalActions\",\n    value: function renderModalActions() {\n      if (!this.props.isEdit) return;\n      return this.props.modal.isDeleteRequest ? React.createElement(Button, {\n        labelPosition: \"left\",\n        disabled: this.props.modal.isDeleteRunning,\n        onClick: this.props.removeAccountRequest,\n        content: \"Cancel\",\n        icon: \"cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }) : React.createElement(Button, {\n        negative: true,\n        labelPosition: \"right\",\n        onClick: this.props.removeAccountRequest,\n        content: \"Delete\",\n        icon: \"trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ModalForm;\n}(React.Component);\n\nModalForm.propTypes = {\n  modal: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isDeleteRequest: PropTypes.bool,\n    isDeleteRunning: PropTypes.bool,\n    itemsToProcess: PropTypes.number,\n    itemsProcessed: PropTypes.number\n  }),\n  isEdit: PropTypes.bool,\n  resetAccountForm: PropTypes.func,\n  removeAccountRequest: PropTypes.func,\n  removeAccount: PropTypes.func,\n  EditForm: PropTypes.func,\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired\n};\nexport default ModalForm;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Account/ModalForm/index.js"],"names":["PropTypes","React","Button","Header","Modal","DropdownOption","DeleteStrategy","ModalForm","reset","props","modal","isDeleteRunning","resetAccountForm","isOpen","isEdit","isDeleteRequest","renderModalActions","removeAccountRequest","Component","propTypes","shape","bool","itemsToProcess","number","itemsProcessed","func","removeAccount","EditForm","accountOptions","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Header, Modal } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport DeleteStrategy from './DeleteStrategy';\n\nclass ModalForm extends React.Component {\n  reset = () => {\n    if (this.props.modal.isDeleteRunning) return false;\n    this.props.resetAccountForm();\n  };\n\n  render() {\n    return (\n      <Modal\n        closeIcon\n        size=\"small\"\n        className=\"account-form\"\n        open={this.props.modal.isOpen}\n        onClose={this.reset}\n      >\n        <Header\n          icon=\"file text outline\"\n          content={this.props.isEdit ? 'Edit Account' : 'New Account'}\n        />\n        <Modal.Content>\n          {this.props.modal.isDeleteRequest ? (\n            <DeleteStrategy {...this.props} />\n          ) : (\n            <this.props.EditForm />\n          )}\n        </Modal.Content>\n        <Modal.Actions>{this.renderModalActions()}</Modal.Actions>\n      </Modal>\n    );\n  }\n\n  renderModalActions() {\n    if (!this.props.isEdit) return;\n\n    return this.props.modal.isDeleteRequest ? (\n      <Button\n        labelPosition=\"left\"\n        disabled={this.props.modal.isDeleteRunning}\n        onClick={this.props.removeAccountRequest}\n        content=\"Cancel\"\n        icon=\"cancel\"\n      />\n    ) : (\n      <Button\n        negative\n        labelPosition=\"right\"\n        onClick={this.props.removeAccountRequest}\n        content=\"Delete\"\n        icon=\"trash\"\n      />\n    );\n  }\n}\n\nModalForm.propTypes = {\n  modal: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isDeleteRequest: PropTypes.bool,\n    isDeleteRunning: PropTypes.bool,\n    itemsToProcess: PropTypes.number,\n    itemsProcessed: PropTypes.number\n  }),\n  isEdit: PropTypes.bool,\n  resetAccountForm: PropTypes.func,\n  removeAccountRequest: PropTypes.func,\n  removeAccount: PropTypes.func,\n  EditForm: PropTypes.func,\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired\n};\n\nexport default ModalForm;\n"]},"metadata":{},"sourceType":"module"}