{"ast":null,"code":"var _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Transaction/List/ModalForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header } from 'semantic-ui-react';\n\nvar ModalForm = function ModalForm(props) {\n  return React.createElement(Modal, {\n    closeIcon: true,\n    size: \"small\",\n    className: \"transaction\",\n    open: props.isOpen,\n    onClose: props.resetTransactionForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: \"file text outline\",\n    content: props.isEdit ? 'Edit Transaction' : 'New Transaction',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(props.EditForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), props.isEdit && React.createElement(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Button, {\n    negative: true,\n    icon: \"trash\",\n    content: \"Delete\",\n    labelPosition: \"right\",\n    onClick: function onClick() {\n      return props.removeTransaction(props.currentTransactionId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nModalForm.propTypes = {\n  currentTransactionId: PropTypes.string,\n  isOpen: PropTypes.bool,\n  isEdit: PropTypes.bool,\n  resetTransactionForm: PropTypes.func,\n  removeTransaction: PropTypes.func,\n  EditForm: PropTypes.func\n};\nexport default ModalForm;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Transaction/List/ModalForm.js"],"names":["React","PropTypes","Modal","Button","Header","ModalForm","props","isOpen","resetTransactionForm","isEdit","removeTransaction","currentTransactionId","propTypes","string","bool","func","EditForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,mBAAtC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SACrB,oBAAC,KAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAC,aAHZ;AAIE,IAAA,IAAI,EAAEA,KAAK,CAACC,MAJd;AAKE,IAAA,OAAO,EAAED,KAAK,CAACE,oBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,mBADP;AAEE,IAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,GAAe,kBAAf,GAAoC,iBAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAWE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,EAcGH,KAAK,CAACG,MAAN,IACC,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,aAAa,EAAC,OAJhB;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACI,iBAAN,CAAwBJ,KAAK,CAACK,oBAA9B,CAAN;AAAA,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfJ,CADqB;AAAA,CAAvB;;AA6BAN,SAAS,CAACO,SAAV,GAAsB;AACpBD,EAAAA,oBAAoB,EAAEV,SAAS,CAACY,MADZ;AAEpBN,EAAAA,MAAM,EAAEN,SAAS,CAACa,IAFE;AAGpBL,EAAAA,MAAM,EAAER,SAAS,CAACa,IAHE;AAIpBN,EAAAA,oBAAoB,EAAEP,SAAS,CAACc,IAJZ;AAKpBL,EAAAA,iBAAiB,EAAET,SAAS,CAACc,IALT;AAMpBC,EAAAA,QAAQ,EAAEf,SAAS,CAACc;AANA,CAAtB;AASA,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header } from 'semantic-ui-react';\n\nconst ModalForm = props => (\n  <Modal\n    closeIcon\n    size=\"small\"\n    className=\"transaction\"\n    open={props.isOpen}\n    onClose={props.resetTransactionForm}\n  >\n    <Header\n      icon=\"file text outline\"\n      content={props.isEdit ? 'Edit Transaction' : 'New Transaction'}\n    />\n    <Modal.Content>\n      <props.EditForm />\n    </Modal.Content>\n    {props.isEdit && (\n      <Modal.Actions>\n        <Button\n          negative\n          icon=\"trash\"\n          content=\"Delete\"\n          labelPosition=\"right\"\n          onClick={() => props.removeTransaction(props.currentTransactionId)}\n        />\n      </Modal.Actions>\n    )}\n  </Modal>\n);\n\nModalForm.propTypes = {\n  currentTransactionId: PropTypes.string,\n  isOpen: PropTypes.bool,\n  isEdit: PropTypes.bool,\n  resetTransactionForm: PropTypes.func,\n  removeTransaction: PropTypes.func,\n  EditForm: PropTypes.func\n};\n\nexport default ModalForm;\n"]},"metadata":{},"sourceType":"module"}