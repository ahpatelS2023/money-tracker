{"ast":null,"code":"var CURRENCY = {\n  AED: {\n    name: 'Emirati Dirham',\n    symbol: '.د.ب',\n    exp: 2,\n    flag: 'ae'\n  },\n  AFN: {\n    name: 'Afghan Afghani',\n    symbol: '؋',\n    exp: 2,\n    flag: 'af'\n  },\n  ALL: {\n    name: 'Albanian lek',\n    symbol: 'lek',\n    exp: 2,\n    flag: 'al'\n  },\n  AMD: {\n    name: 'Armenian dram',\n    symbol: 'AMD',\n    exp: 2,\n    flag: 'am'\n  },\n  ANG: {\n    name: 'Dutch Guilder',\n    symbol: 'ƒ',\n    exp: 2,\n    flag: 'an'\n  },\n  AOA: {\n    name: 'Angolan Kwanza',\n    symbol: 'Kz',\n    exp: 2,\n    flag: 'ao'\n  },\n  ARS: {\n    name: 'Argentine peso',\n    symbol: '$',\n    exp: 2,\n    flag: 'ar'\n  },\n  AUD: {\n    name: 'Australian Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'au'\n  },\n  AWG: {\n    name: 'Arubin florin',\n    symbol: 'ƒ',\n    exp: 2,\n    flag: 'aw'\n  },\n  AZN: {\n    name: 'Azerbaijani manat',\n    symbol: 'ман',\n    exp: 2,\n    flag: 'az'\n  },\n  BAM: {\n    name: 'Bosnian Convertible Marka',\n    symbol: 'KM',\n    exp: 2,\n    flag: 'ba'\n  },\n  BBD: {\n    name: 'Barbadian dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'bb'\n  },\n  BDT: {\n    name: 'Bangladeshi Taka',\n    symbol: 'Tk',\n    exp: 2,\n    flag: 'bd'\n  },\n  BGN: {\n    name: 'Bulgarian lev',\n    symbol: 'лв',\n    exp: 2,\n    flag: 'bg'\n  },\n  BHD: {\n    name: 'Bahraini Dinar',\n    symbol: '.د.ب or BD',\n    exp: 3,\n    flag: 'bh'\n  },\n  BIF: {\n    name: 'Burundian Franc',\n    symbol: 'FBu',\n    exp: 0,\n    flag: 'bi'\n  },\n  BMD: {\n    name: 'Bermudian dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'bm'\n  },\n  BND: {\n    name: 'Bruneian Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'bn'\n  },\n  BOB: {\n    name: 'Bolivian Boliviano',\n    symbol: '$b',\n    exp: 2,\n    flag: 'bo'\n  },\n  BRL: {\n    name: 'Brazilian real',\n    symbol: 'R$',\n    exp: 2,\n    flag: 'br'\n  },\n  BSD: {\n    name: 'Bahamian dollar',\n    symbol: 'B$',\n    exp: 2,\n    flag: 'bs'\n  },\n  BTN: {\n    name: 'Bhutanese Ngultrum',\n    symbol: 'Nu.',\n    exp: 2,\n    flag: 'bt'\n  },\n  BWP: {\n    name: 'Botswana Pula',\n    symbol: 'P',\n    exp: 2,\n    flag: 'bw'\n  },\n  BYR: {\n    name: 'Belarusian ruble',\n    symbol: 'р',\n    exp: 2,\n    flag: 'by'\n  },\n  BZD: {\n    name: 'Belize dollar',\n    symbol: 'BZ$',\n    exp: 2,\n    flag: 'bz'\n  },\n  CAD: {\n    name: 'Canadian Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'ca'\n  },\n  CHF: {\n    name: 'Swiss Franc',\n    symbol: 'CHF',\n    exp: 2,\n    flag: 'ch'\n  },\n  CLP: {\n    name: 'Chilean Peso',\n    symbol: '$',\n    exp: 0,\n    flag: 'cl'\n  },\n  CNY: {\n    name: 'Yuan or chinese renminbi',\n    symbol: '¥',\n    exp: 2,\n    flag: 'cn'\n  },\n  COP: {\n    name: 'Colombian peso',\n    symbol: '$',\n    exp: 2,\n    flag: 'co'\n  },\n  CRC: {\n    name: 'Costa Rican colón',\n    symbol: '₡',\n    exp: 2,\n    flag: 'cr'\n  },\n  CUC: {\n    name: 'Cuban convertible peso',\n    symbol: '$',\n    exp: 2,\n    flag: 'cu'\n  },\n  CUP: {\n    name: 'Cuban peso',\n    symbol: '₱',\n    exp: 2,\n    flag: 'cu'\n  },\n  CVE: {\n    name: 'Cape Verdean Escudo',\n    symbol: '$',\n    exp: 0,\n    flag: 'cv'\n  },\n  CZK: {\n    name: 'Czech koruna',\n    symbol: 'Kč',\n    exp: 2,\n    flag: 'cz'\n  },\n  DJF: {\n    name: 'Djiboutian Franc',\n    symbol: 'fdj',\n    exp: 0,\n    flag: 'dj'\n  },\n  DKK: {\n    name: 'Danish krone',\n    symbol: 'kr',\n    exp: 2,\n    flag: 'dk'\n  },\n  DOP: {\n    name: 'Dominican peso',\n    symbol: '$',\n    exp: 2,\n    flag: 'do'\n  },\n  DZD: {\n    name: 'Algerian Dinar',\n    symbol: 'جد',\n    exp: 2,\n    flag: 'dz'\n  },\n  EGP: {\n    name: 'Egyptian Pound',\n    symbol: '£ ',\n    exp: 2,\n    flag: 'eg'\n  },\n  ERN: {\n    name: 'Eritrean nakfa',\n    symbol: 'ናቕፋ',\n    exp: 2,\n    flag: 'er'\n  },\n  ETB: {\n    name: 'Ethiopian Birr',\n    symbol: 'Br',\n    exp: 2,\n    flag: 'et'\n  },\n  EUR: {\n    name: 'Euro',\n    symbol: '€',\n    exp: 2,\n    flag: 'eu'\n  },\n  FJD: {\n    name: 'Fijian dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'fj'\n  },\n  FKP: {\n    name: 'Falkland Island Pound',\n    symbol: '£',\n    exp: 2,\n    flag: 'fk'\n  },\n  GBP: {\n    name: 'British Pound',\n    symbol: '£',\n    exp: 2,\n    flag: 'gb'\n  },\n  GEL: {\n    name: 'Georgian lari',\n    symbol: 'ლ',\n    exp: 2,\n    flag: 'ge'\n  },\n  GHS: {\n    name: 'Ghanaian Cedi',\n    symbol: 'GH¢',\n    exp: 2,\n    flag: 'gh'\n  },\n  GIP: {\n    name: 'Gibraltar pound',\n    symbol: '£',\n    exp: 2,\n    flag: 'gi'\n  },\n  GMD: {\n    name: 'Gambian dalasi',\n    symbol: 'D',\n    exp: 2,\n    flag: 'gm'\n  },\n  GNF: {\n    name: 'Guinean Franc',\n    symbol: 'GNF',\n    exp: 0,\n    flag: 'gn'\n  },\n  GTQ: {\n    name: 'Guatemalan Quetzal',\n    symbol: 'Q',\n    exp: 2,\n    flag: 'gt'\n  },\n  GYD: {\n    name: 'Guyanese dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'gy'\n  },\n  HKD: {\n    name: 'Hong Kong dollar',\n    symbol: 'HK$',\n    exp: 2,\n    flag: 'hk'\n  },\n  HNL: {\n    name: 'Honduran lempira',\n    symbol: 'L',\n    exp: 2,\n    flag: 'hn'\n  },\n  HRK: {\n    name: 'Croatian kuna',\n    symbol: 'kn',\n    exp: 2,\n    flag: 'hr'\n  },\n  HTG: {\n    name: 'Haitian gourde',\n    symbol: 'G',\n    exp: 2,\n    flag: 'ht'\n  },\n  HUF: {\n    name: 'Hungarian forint',\n    symbol: 'Ft',\n    exp: 2,\n    flag: 'hu'\n  },\n  IDR: {\n    name: 'Indonesian Rupiah',\n    symbol: 'Rp',\n    exp: 2,\n    flag: 'id'\n  },\n  ILS: {\n    name: 'Israeli Shekel',\n    symbol: '₪',\n    exp: 2,\n    flag: 'il'\n  },\n  INR: {\n    name: 'Indian Rupee',\n    symbol: '₹',\n    exp: 2,\n    flag: 'in'\n  },\n  IQD: {\n    name: 'Iraqi Dinar',\n    symbol: 'ع.د',\n    exp: 3,\n    flag: 'iq'\n  },\n  IRR: {\n    name: 'Iranian Rial',\n    symbol: '﷼',\n    exp: 2,\n    flag: 'ir'\n  },\n  ISK: {\n    name: 'Icelandic Krona',\n    symbol: 'kr',\n    exp: 0,\n    flag: 'is'\n  },\n  JMD: {\n    name: 'Jamaican dollar',\n    symbol: 'J$',\n    exp: 2,\n    flag: 'jm'\n  },\n  JOD: {\n    name: 'Jordanian Dinar',\n    symbol: 'JOD',\n    exp: 3,\n    flag: 'jo'\n  },\n  JPY: {\n    name: 'Japanese yen',\n    symbol: '¥',\n    exp: 0,\n    flag: 'jp'\n  },\n  KES: {\n    name: 'Kenyan Shilling',\n    symbol: 'KSh',\n    exp: 2,\n    flag: 'ke'\n  },\n  KGS: {\n    name: 'Kyrgyzstani som',\n    symbol: 'лв',\n    exp: 2,\n    flag: 'kg'\n  },\n  KHR: {\n    name: 'Cambodian Riel',\n    symbol: '៛',\n    exp: 2,\n    flag: 'kh'\n  },\n  KMF: {\n    name: 'Comoro Franc',\n    symbol: 'KMF',\n    exp: 0,\n    flag: 'km'\n  },\n  KPW: {\n    name: 'North Korean won',\n    symbol: '₩',\n    exp: 2,\n    flag: 'kp'\n  },\n  KRW: {\n    name: 'South Korean won',\n    symbol: '₩',\n    exp: 0,\n    flag: 'kr'\n  },\n  KWD: {\n    name: 'Kuwaiti Dinar',\n    symbol: 'ك',\n    exp: 3,\n    flag: 'kw'\n  },\n  KYD: {\n    name: 'Caymanian Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'ky'\n  },\n  KZT: {\n    name: 'Kazakhstani tenge',\n    symbol: '₸',\n    exp: 2,\n    flag: 'kz'\n  },\n  LAK: {\n    name: 'Lao or Laotian Kip',\n    symbol: '₭',\n    exp: 2,\n    flag: 'la'\n  },\n  LBP: {\n    name: 'Lebanese Pound',\n    symbol: 'ل.ل',\n    exp: 2,\n    flag: 'lb'\n  },\n  LKR: {\n    name: 'Sri Lankan Rupee',\n    symbol: 'Rs',\n    exp: 2,\n    flag: 'lk'\n  },\n  LRD: {\n    name: 'Liberian Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'lr'\n  },\n  LSL: {\n    name: 'Lesotho loti',\n    symbol: 'L or M',\n    exp: 2,\n    flag: 'ls'\n  },\n  LTL: {\n    name: 'Lithuanian litas',\n    symbol: 'Lt',\n    exp: 2,\n    flag: 'lt'\n  },\n  LYD: {\n    name: 'Libyan Dinar',\n    symbol: ' د.ل',\n    exp: 3,\n    flag: 'ly'\n  },\n  MAD: {\n    name: 'Moroccan Dirham',\n    symbol: 'م.د.',\n    exp: 2,\n    flag: 'ma'\n  },\n  MDL: {\n    name: 'Moldovan Leu',\n    symbol: 'L',\n    exp: 2,\n    flag: 'md'\n  },\n  MGA: {\n    name: 'Malagasy Ariary',\n    symbol: 'Ar',\n    exp: 2,\n    flag: 'mg'\n  },\n  MKD: {\n    name: 'Macedonian Denar',\n    symbol: 'ден',\n    exp: 2,\n    flag: 'mk'\n  },\n  MMK: {\n    name: 'Burmese Kyat',\n    symbol: 'K',\n    exp: 2,\n    flag: 'mm'\n  },\n  MNT: {\n    name: 'Mongolian Tughrik',\n    symbol: '₮',\n    exp: 2,\n    flag: 'mn'\n  },\n  MOP: {\n    name: 'Macau Pataca',\n    symbol: 'MOP$',\n    exp: 2,\n    flag: 'mo'\n  },\n  MRO: {\n    name: 'Mauritanian Ouguiya',\n    symbol: 'UM',\n    exp: 2,\n    flag: 'mr'\n  },\n  MUR: {\n    name: 'Mauritian rupee',\n    symbol: 'Rs',\n    exp: 2,\n    flag: 'mu'\n  },\n  MVR: {\n    name: 'Maldivian Rufiyaa',\n    symbol: 'rf',\n    exp: 2,\n    flag: 'mv'\n  },\n  MWK: {\n    name: 'Malawian Kwacha',\n    symbol: 'MK',\n    exp: 2,\n    flag: 'mw'\n  },\n  MXN: {\n    name: 'Mexico Peso',\n    symbol: '$',\n    exp: 2,\n    flag: 'mx'\n  },\n  MYR: {\n    name: 'Malaysian Ringgit',\n    symbol: 'RM',\n    exp: 2,\n    flag: 'my'\n  },\n  MZN: {\n    name: 'Mozambican Metical',\n    symbol: 'MT',\n    exp: 2,\n    flag: 'mz'\n  },\n  NAD: {\n    name: 'Namibian Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'na'\n  },\n  NGN: {\n    name: 'Nigerian Naira',\n    symbol: '₦',\n    exp: 2,\n    flag: 'ng'\n  },\n  NIO: {\n    name: 'Nicaraguan córdoba',\n    symbol: 'C$',\n    exp: 2,\n    flag: 'ni'\n  },\n  NOK: {\n    name: 'Norwegian krone',\n    symbol: 'kr',\n    exp: 2,\n    flag: 'no'\n  },\n  NPR: {\n    name: 'Nepalese Rupee',\n    symbol: 'Rs',\n    exp: 2,\n    flag: 'np'\n  },\n  NZD: {\n    name: 'New Zealand Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'nz'\n  },\n  OMR: {\n    name: 'Omani Rial',\n    symbol: 'ع.ر.',\n    exp: 3,\n    flag: 'om'\n  },\n  PAB: {\n    name: 'Balboa panamérn',\n    symbol: 'B/',\n    exp: 2,\n    flag: 'pa'\n  },\n  PEN: {\n    name: 'Peruvian nuevo sol',\n    symbol: 'S/',\n    exp: 2,\n    flag: 'pe'\n  },\n  PGK: {\n    name: 'Papua New Guinean Kina',\n    symbol: 'K',\n    exp: 2,\n    flag: 'pg'\n  },\n  PHP: {\n    name: 'Philippine Peso',\n    symbol: '₱',\n    exp: 2,\n    flag: 'ph'\n  },\n  PKR: {\n    name: 'Pakistani Rupee',\n    symbol: 'Rs',\n    exp: 2,\n    flag: 'pk'\n  },\n  PLN: {\n    name: 'Polish złoty',\n    symbol: 'zł',\n    exp: 2,\n    flag: 'pl'\n  },\n  PYG: {\n    name: 'Paraguayan guarani',\n    symbol: '₲',\n    exp: 0,\n    flag: 'py'\n  },\n  QAR: {\n    name: 'Qatari Riyal',\n    symbol: 'ق.ر ',\n    exp: 2,\n    flag: 'qa'\n  },\n  RON: {\n    name: 'Romanian leu',\n    symbol: 'lei',\n    exp: 2,\n    flag: 'ro'\n  },\n  RSD: {\n    name: 'Serbian Dinar',\n    symbol: 'РСД',\n    exp: 2,\n    flag: 'rs'\n  },\n  RUB: {\n    name: 'Russian Rouble',\n    symbol: '₽',\n    exp: 2,\n    flag: 'ru'\n  },\n  RWF: {\n    name: 'Rwandan franc',\n    symbol: 'FRw, RF, R₣',\n    exp: 0,\n    flag: 'rw'\n  },\n  SAR: {\n    name: 'Saudi Arabian Riyal',\n    symbol: 'ر.س',\n    exp: 2,\n    flag: 'sa'\n  },\n  SBD: {\n    name: 'Solomon Islander Dollar',\n    symbol: 'SI$',\n    exp: 2,\n    flag: 'sb'\n  },\n  SCR: {\n    name: 'Seychellois Rupee',\n    symbol: 'Rs',\n    exp: 2,\n    flag: 'sc'\n  },\n  SDG: {\n    name: 'Sudanese Pound',\n    symbol: 'SDG',\n    exp: 2,\n    flag: 'sd'\n  },\n  SEK: {\n    name: 'Swedish krona',\n    symbol: 'kr',\n    exp: 2,\n    flag: 'se'\n  },\n  SGD: {\n    name: 'Singapore Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'sg'\n  },\n  SLL: {\n    name: 'Sierra Leonean Leone',\n    symbol: 'Le',\n    exp: 2,\n    flag: 'sl'\n  },\n  SOS: {\n    name: 'Somali Shilling',\n    symbol: 'S',\n    exp: 2,\n    flag: 'so'\n  },\n  SRD: {\n    name: 'Surinamese dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'sr'\n  },\n  SYP: {\n    name: 'Syrian Pound',\n    symbol: '£',\n    exp: 2,\n    flag: 'sy'\n  },\n  SZL: {\n    name: 'Swazi Lilangeni',\n    symbol: 'L or E',\n    exp: 2,\n    flag: 'sz'\n  },\n  THB: {\n    name: 'Thai Baht',\n    symbol: '฿',\n    exp: 2,\n    flag: 'th'\n  },\n  TJS: {\n    name: 'Tajikistani somoni',\n    symbol: 'TJS',\n    exp: 2,\n    flag: 'tj'\n  },\n  TMT: {\n    name: 'Turkmenistan manat',\n    symbol: 'T',\n    exp: 2,\n    flag: 'tm'\n  },\n  TND: {\n    name: 'Tunisian Dinar',\n    symbol: 'TND',\n    exp: 3,\n    flag: 'tn'\n  },\n  TOP: {\n    name: \"Tongan Pa'anga\",\n    symbol: 'T$',\n    exp: 2,\n    flag: 'to'\n  },\n  TRY: {\n    name: 'Turkish Lira',\n    symbol: '₺',\n    exp: 2,\n    flag: 'tr'\n  },\n  TTD: {\n    name: 'Trinidadian dollar',\n    symbol: 'TT$',\n    exp: 2,\n    flag: 'tt'\n  },\n  TWD: {\n    name: 'Taiwan New Dollar',\n    symbol: 'NT$',\n    exp: 2,\n    flag: 'tw'\n  },\n  TZS: {\n    name: 'Tanzanian Shilling',\n    symbol: 'Sh',\n    exp: 2,\n    flag: 'tz'\n  },\n  UAH: {\n    name: 'Ukrainian Hryvnia',\n    symbol: '₴',\n    exp: 2,\n    flag: 'ua'\n  },\n  UGX: {\n    name: 'Ugandan Shilling',\n    symbol: 'USh',\n    exp: 0,\n    flag: 'ug'\n  },\n  USD: {\n    name: 'US Dollar',\n    symbol: '$',\n    exp: 2,\n    flag: 'us'\n  },\n  UYU: {\n    name: 'Uruguayan peso',\n    symbol: '$U',\n    exp: 2,\n    flag: 'uy'\n  },\n  UZS: {\n    name: 'Uzbekistani som',\n    symbol: 'лв',\n    exp: 2,\n    flag: 'uz'\n  },\n  VEF: {\n    name: 'Venezuelan bolivar',\n    symbol: 'Bs',\n    exp: 2,\n    flag: 've'\n  },\n  VND: {\n    name: 'Vietnamese Dong',\n    symbol: '₫',\n    exp: 0,\n    flag: 'vn'\n  },\n  VUV: {\n    name: 'Vanuatu Vatu',\n    symbol: 'VT',\n    exp: 0,\n    flag: 'vu'\n  },\n  WST: {\n    name: 'Samoan Tālā',\n    symbol: '$',\n    exp: 2,\n    flag: 'ws'\n  },\n  YER: {\n    name: 'Yemeni Rial',\n    symbol: 'YER',\n    exp: 2,\n    flag: 'ye'\n  },\n  ZAR: {\n    name: 'South African Rand',\n    symbol: 'R',\n    exp: 2,\n    flag: 'za'\n  },\n  ZMW: {\n    name: 'Zambian Kwacha',\n    symbol: 'ZMK',\n    exp: 2,\n    flag: 'zm'\n  },\n  ZWD: {\n    name: 'Zimbabwean Dollar',\n    symbol: 'Z$',\n    exp: 2,\n    flag: 'zw'\n  },\n  XAU: {\n    name: 'Gold, troy ounce',\n    symbol: 'XAU',\n    exp: 2\n  }\n};\nvar Currency = {\n  defaultBase: 'USD',\n  options: function options() {\n    return Object.keys(CURRENCY).map(function (code) {\n      return {\n        key: code,\n        value: code,\n        flag: CURRENCY[code].flag,\n        text: \"\".concat(code, \", \").concat(CURRENCY[code].name)\n      };\n    });\n  },\n  name: function name(code) {\n    return CURRENCY[code].name;\n  },\n  symbol: function symbol(code) {\n    return CURRENCY[code].symbol;\n  },\n  minAmount: function minAmount(code) {\n    return Number(\"1e-\".concat(CURRENCY[code].exp));\n  },\n\n  /**\n   * Convert value to currency's subunit (e.g. cents for USD).\n   * Subunit is the minimal currency unit and it is always whole integer.\n   */\n  numberToCents: function numberToCents(value, code) {\n    return Math.round(parseFloat(\"\".concat(value, \"e\").concat(CURRENCY[code].exp)));\n  },\n\n  /**\n   * Convert value from subunit back to float representation with formatting.\n   * For example 199001 USD becomes 1,990.01 USD\n   */\n  centsToNumber: function centsToNumber(value, code) {\n    var exp = CURRENCY[code].exp;\n    var num = Number(\"\".concat(value, \"e-\").concat(exp));\n    return num;\n  },\n  centsToString: function centsToString(value, code) {\n    var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var exp = CURRENCY[code].exp;\n    var num = Number(\"\".concat(value, \"e-\").concat(exp));\n    return format ? num.toLocaleString(undefined, {\n      minimumFractionDigits: exp,\n      maximumFractionDigits: exp\n    }) : num.toString();\n  },\n  centsToDollar: function centsToDollar(value, code) {\n    var exp = CURRENCY[code].exp;\n    var num = Number(\"\".concat(value, \"e-\").concat(exp));\n    return num.toLocaleString(undefined, {\n      maximumFractionDigits: 0\n    });\n  },\n  convert: function convert(value, rate, from, to) {\n    return value / rate * Math.pow(10, CURRENCY[from].exp - CURRENCY[to].exp);\n  }\n};\nexport default Currency;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/entities/Currency.ts"],"names":["CURRENCY","AED","name","symbol","exp","flag","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SLL","SOS","SRD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","YER","ZAR","ZMW","ZWD","XAU","Currency","defaultBase","options","Object","keys","map","code","key","value","text","minAmount","Number","numberToCents","Math","round","parseFloat","centsToNumber","num","centsToString","format","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","toString","centsToDollar","convert","rate","from","to","pow"],"mappings":"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","sourcesContent":["type CurrencyT = {\n  name: string;\n  symbol: string;\n  exp: number;\n  flag?: string;\n};\n\ntype AvailableCurrencyT = {\n  [code: string]: CurrencyT;\n};\n\nconst CURRENCY: AvailableCurrencyT = {\n  AED: { name: 'Emirati Dirham', symbol: '.د.ب', exp: 2, flag: 'ae' },\n  AFN: { name: 'Afghan Afghani', symbol: '؋', exp: 2, flag: 'af' },\n  ALL: { name: 'Albanian lek', symbol: 'lek', exp: 2, flag: 'al' },\n  AMD: { name: 'Armenian dram', symbol: 'AMD', exp: 2, flag: 'am' },\n  ANG: { name: 'Dutch Guilder', symbol: 'ƒ', exp: 2, flag: 'an' },\n  AOA: { name: 'Angolan Kwanza', symbol: 'Kz', exp: 2, flag: 'ao' },\n  ARS: { name: 'Argentine peso', symbol: '$', exp: 2, flag: 'ar' },\n  AUD: { name: 'Australian Dollar', symbol: '$', exp: 2, flag: 'au' },\n  AWG: { name: 'Arubin florin', symbol: 'ƒ', exp: 2, flag: 'aw' },\n  AZN: { name: 'Azerbaijani manat', symbol: 'ман', exp: 2, flag: 'az' },\n  BAM: { name: 'Bosnian Convertible Marka', symbol: 'KM', exp: 2, flag: 'ba' },\n  BBD: { name: 'Barbadian dollar', symbol: '$', exp: 2, flag: 'bb' },\n  BDT: { name: 'Bangladeshi Taka', symbol: 'Tk', exp: 2, flag: 'bd' },\n  BGN: { name: 'Bulgarian lev', symbol: 'лв', exp: 2, flag: 'bg' },\n  BHD: { name: 'Bahraini Dinar', symbol: '.د.ب or BD', exp: 3, flag: 'bh' },\n  BIF: { name: 'Burundian Franc', symbol: 'FBu', exp: 0, flag: 'bi' },\n  BMD: { name: 'Bermudian dollar', symbol: '$', exp: 2, flag: 'bm' },\n  BND: { name: 'Bruneian Dollar', symbol: '$', exp: 2, flag: 'bn' },\n  BOB: { name: 'Bolivian Boliviano', symbol: '$b', exp: 2, flag: 'bo' },\n  BRL: { name: 'Brazilian real', symbol: 'R$', exp: 2, flag: 'br' },\n  BSD: { name: 'Bahamian dollar', symbol: 'B$', exp: 2, flag: 'bs' },\n  BTN: { name: 'Bhutanese Ngultrum', symbol: 'Nu.', exp: 2, flag: 'bt' },\n  BWP: { name: 'Botswana Pula', symbol: 'P', exp: 2, flag: 'bw' },\n  BYR: { name: 'Belarusian ruble', symbol: 'р', exp: 2, flag: 'by' },\n  BZD: { name: 'Belize dollar', symbol: 'BZ$', exp: 2, flag: 'bz' },\n  CAD: { name: 'Canadian Dollar', symbol: '$', exp: 2, flag: 'ca' },\n  CHF: { name: 'Swiss Franc', symbol: 'CHF', exp: 2, flag: 'ch' },\n  CLP: { name: 'Chilean Peso', symbol: '$', exp: 0, flag: 'cl' },\n  CNY: { name: 'Yuan or chinese renminbi', symbol: '¥', exp: 2, flag: 'cn' },\n  COP: { name: 'Colombian peso', symbol: '$', exp: 2, flag: 'co' },\n  CRC: { name: 'Costa Rican colón', symbol: '₡', exp: 2, flag: 'cr' },\n  CUC: { name: 'Cuban convertible peso', symbol: '$', exp: 2, flag: 'cu' },\n  CUP: { name: 'Cuban peso', symbol: '₱', exp: 2, flag: 'cu' },\n  CVE: { name: 'Cape Verdean Escudo', symbol: '$', exp: 0, flag: 'cv' },\n  CZK: { name: 'Czech koruna', symbol: 'Kč', exp: 2, flag: 'cz' },\n  DJF: { name: 'Djiboutian Franc', symbol: 'fdj', exp: 0, flag: 'dj' },\n  DKK: { name: 'Danish krone', symbol: 'kr', exp: 2, flag: 'dk' },\n  DOP: { name: 'Dominican peso', symbol: '$', exp: 2, flag: 'do' },\n  DZD: { name: 'Algerian Dinar', symbol: 'جد', exp: 2, flag: 'dz' },\n  EGP: { name: 'Egyptian Pound', symbol: '£ ', exp: 2, flag: 'eg' },\n  ERN: { name: 'Eritrean nakfa', symbol: 'ናቕፋ', exp: 2, flag: 'er' },\n  ETB: { name: 'Ethiopian Birr', symbol: 'Br', exp: 2, flag: 'et' },\n  EUR: { name: 'Euro', symbol: '€', exp: 2, flag: 'eu' },\n  FJD: { name: 'Fijian dollar', symbol: '$', exp: 2, flag: 'fj' },\n  FKP: { name: 'Falkland Island Pound', symbol: '£', exp: 2, flag: 'fk' },\n  GBP: { name: 'British Pound', symbol: '£', exp: 2, flag: 'gb' },\n  GEL: { name: 'Georgian lari', symbol: 'ლ', exp: 2, flag: 'ge' },\n  GHS: { name: 'Ghanaian Cedi', symbol: 'GH¢', exp: 2, flag: 'gh' },\n  GIP: { name: 'Gibraltar pound', symbol: '£', exp: 2, flag: 'gi' },\n  GMD: { name: 'Gambian dalasi', symbol: 'D', exp: 2, flag: 'gm' },\n  GNF: { name: 'Guinean Franc', symbol: 'GNF', exp: 0, flag: 'gn' },\n  GTQ: { name: 'Guatemalan Quetzal', symbol: 'Q', exp: 2, flag: 'gt' },\n  GYD: { name: 'Guyanese dollar', symbol: '$', exp: 2, flag: 'gy' },\n  HKD: { name: 'Hong Kong dollar', symbol: 'HK$', exp: 2, flag: 'hk' },\n  HNL: { name: 'Honduran lempira', symbol: 'L', exp: 2, flag: 'hn' },\n  HRK: { name: 'Croatian kuna', symbol: 'kn', exp: 2, flag: 'hr' },\n  HTG: { name: 'Haitian gourde', symbol: 'G', exp: 2, flag: 'ht' },\n  HUF: { name: 'Hungarian forint', symbol: 'Ft', exp: 2, flag: 'hu' },\n  IDR: { name: 'Indonesian Rupiah', symbol: 'Rp', exp: 2, flag: 'id' },\n  ILS: { name: 'Israeli Shekel', symbol: '₪', exp: 2, flag: 'il' },\n  INR: { name: 'Indian Rupee', symbol: '₹', exp: 2, flag: 'in' },\n  IQD: { name: 'Iraqi Dinar', symbol: 'ع.د', exp: 3, flag: 'iq' },\n  IRR: { name: 'Iranian Rial', symbol: '﷼', exp: 2, flag: 'ir' },\n  ISK: { name: 'Icelandic Krona', symbol: 'kr', exp: 0, flag: 'is' },\n  JMD: { name: 'Jamaican dollar', symbol: 'J$', exp: 2, flag: 'jm' },\n  JOD: { name: 'Jordanian Dinar', symbol: 'JOD', exp: 3, flag: 'jo' },\n  JPY: { name: 'Japanese yen', symbol: '¥', exp: 0, flag: 'jp' },\n  KES: { name: 'Kenyan Shilling', symbol: 'KSh', exp: 2, flag: 'ke' },\n  KGS: { name: 'Kyrgyzstani som', symbol: 'лв', exp: 2, flag: 'kg' },\n  KHR: { name: 'Cambodian Riel', symbol: '៛', exp: 2, flag: 'kh' },\n  KMF: { name: 'Comoro Franc', symbol: 'KMF', exp: 0, flag: 'km' },\n  KPW: { name: 'North Korean won', symbol: '₩', exp: 2, flag: 'kp' },\n  KRW: { name: 'South Korean won', symbol: '₩', exp: 0, flag: 'kr' },\n  KWD: { name: 'Kuwaiti Dinar', symbol: 'ك', exp: 3, flag: 'kw' },\n  KYD: { name: 'Caymanian Dollar', symbol: '$', exp: 2, flag: 'ky' },\n  KZT: { name: 'Kazakhstani tenge', symbol: '₸', exp: 2, flag: 'kz' },\n  LAK: { name: 'Lao or Laotian Kip', symbol: '₭', exp: 2, flag: 'la' },\n  LBP: { name: 'Lebanese Pound', symbol: 'ل.ل', exp: 2, flag: 'lb' },\n  LKR: { name: 'Sri Lankan Rupee', symbol: 'Rs', exp: 2, flag: 'lk' },\n  LRD: { name: 'Liberian Dollar', symbol: '$', exp: 2, flag: 'lr' },\n  LSL: { name: 'Lesotho loti', symbol: 'L or M', exp: 2, flag: 'ls' },\n  LTL: { name: 'Lithuanian litas', symbol: 'Lt', exp: 2, flag: 'lt' },\n  LYD: { name: 'Libyan Dinar', symbol: ' د.ل', exp: 3, flag: 'ly' },\n  MAD: { name: 'Moroccan Dirham', symbol: 'م.د.', exp: 2, flag: 'ma' },\n  MDL: { name: 'Moldovan Leu', symbol: 'L', exp: 2, flag: 'md' },\n  MGA: { name: 'Malagasy Ariary', symbol: 'Ar', exp: 2, flag: 'mg' },\n  MKD: { name: 'Macedonian Denar', symbol: 'ден', exp: 2, flag: 'mk' },\n  MMK: { name: 'Burmese Kyat', symbol: 'K', exp: 2, flag: 'mm' },\n  MNT: { name: 'Mongolian Tughrik', symbol: '₮', exp: 2, flag: 'mn' },\n  MOP: { name: 'Macau Pataca', symbol: 'MOP$', exp: 2, flag: 'mo' },\n  MRO: { name: 'Mauritanian Ouguiya', symbol: 'UM', exp: 2, flag: 'mr' },\n  MUR: { name: 'Mauritian rupee', symbol: 'Rs', exp: 2, flag: 'mu' },\n  MVR: { name: 'Maldivian Rufiyaa', symbol: 'rf', exp: 2, flag: 'mv' },\n  MWK: { name: 'Malawian Kwacha', symbol: 'MK', exp: 2, flag: 'mw' },\n  MXN: { name: 'Mexico Peso', symbol: '$', exp: 2, flag: 'mx' },\n  MYR: { name: 'Malaysian Ringgit', symbol: 'RM', exp: 2, flag: 'my' },\n  MZN: { name: 'Mozambican Metical', symbol: 'MT', exp: 2, flag: 'mz' },\n  NAD: { name: 'Namibian Dollar', symbol: '$', exp: 2, flag: 'na' },\n  NGN: { name: 'Nigerian Naira', symbol: '₦', exp: 2, flag: 'ng' },\n  NIO: { name: 'Nicaraguan córdoba', symbol: 'C$', exp: 2, flag: 'ni' },\n  NOK: { name: 'Norwegian krone', symbol: 'kr', exp: 2, flag: 'no' },\n  NPR: { name: 'Nepalese Rupee', symbol: 'Rs', exp: 2, flag: 'np' },\n  NZD: { name: 'New Zealand Dollar', symbol: '$', exp: 2, flag: 'nz' },\n  OMR: { name: 'Omani Rial', symbol: 'ع.ر.', exp: 3, flag: 'om' },\n  PAB: { name: 'Balboa panamérn', symbol: 'B/', exp: 2, flag: 'pa' },\n  PEN: { name: 'Peruvian nuevo sol', symbol: 'S/', exp: 2, flag: 'pe' },\n  PGK: { name: 'Papua New Guinean Kina', symbol: 'K', exp: 2, flag: 'pg' },\n  PHP: { name: 'Philippine Peso', symbol: '₱', exp: 2, flag: 'ph' },\n  PKR: { name: 'Pakistani Rupee', symbol: 'Rs', exp: 2, flag: 'pk' },\n  PLN: { name: 'Polish złoty', symbol: 'zł', exp: 2, flag: 'pl' },\n  PYG: { name: 'Paraguayan guarani', symbol: '₲', exp: 0, flag: 'py' },\n  QAR: { name: 'Qatari Riyal', symbol: 'ق.ر ', exp: 2, flag: 'qa' },\n  RON: { name: 'Romanian leu', symbol: 'lei', exp: 2, flag: 'ro' },\n  RSD: { name: 'Serbian Dinar', symbol: 'РСД', exp: 2, flag: 'rs' },\n  RUB: { name: 'Russian Rouble', symbol: '₽', exp: 2, flag: 'ru' },\n  RWF: { name: 'Rwandan franc', symbol: 'FRw, RF, R₣', exp: 0, flag: 'rw' },\n  SAR: { name: 'Saudi Arabian Riyal', symbol: 'ر.س', exp: 2, flag: 'sa' },\n  SBD: { name: 'Solomon Islander Dollar', symbol: 'SI$', exp: 2, flag: 'sb' },\n  SCR: { name: 'Seychellois Rupee', symbol: 'Rs', exp: 2, flag: 'sc' },\n  SDG: { name: 'Sudanese Pound', symbol: 'SDG', exp: 2, flag: 'sd' },\n  SEK: { name: 'Swedish krona', symbol: 'kr', exp: 2, flag: 'se' },\n  SGD: { name: 'Singapore Dollar', symbol: '$', exp: 2, flag: 'sg' },\n  SLL: { name: 'Sierra Leonean Leone', symbol: 'Le', exp: 2, flag: 'sl' },\n  SOS: { name: 'Somali Shilling', symbol: 'S', exp: 2, flag: 'so' },\n  SRD: { name: 'Surinamese dollar', symbol: '$', exp: 2, flag: 'sr' },\n  SYP: { name: 'Syrian Pound', symbol: '£', exp: 2, flag: 'sy' },\n  SZL: { name: 'Swazi Lilangeni', symbol: 'L or E', exp: 2, flag: 'sz' },\n  THB: { name: 'Thai Baht', symbol: '฿', exp: 2, flag: 'th' },\n  TJS: { name: 'Tajikistani somoni', symbol: 'TJS', exp: 2, flag: 'tj' },\n  TMT: { name: 'Turkmenistan manat', symbol: 'T', exp: 2, flag: 'tm' },\n  TND: { name: 'Tunisian Dinar', symbol: 'TND', exp: 3, flag: 'tn' },\n  TOP: { name: \"Tongan Pa'anga\", symbol: 'T$', exp: 2, flag: 'to' },\n  TRY: { name: 'Turkish Lira', symbol: '₺', exp: 2, flag: 'tr' },\n  TTD: { name: 'Trinidadian dollar', symbol: 'TT$', exp: 2, flag: 'tt' },\n  TWD: { name: 'Taiwan New Dollar', symbol: 'NT$', exp: 2, flag: 'tw' },\n  TZS: { name: 'Tanzanian Shilling', symbol: 'Sh', exp: 2, flag: 'tz' },\n  UAH: { name: 'Ukrainian Hryvnia', symbol: '₴', exp: 2, flag: 'ua' },\n  UGX: { name: 'Ugandan Shilling', symbol: 'USh', exp: 0, flag: 'ug' },\n  USD: { name: 'US Dollar', symbol: '$', exp: 2, flag: 'us' },\n  UYU: { name: 'Uruguayan peso', symbol: '$U', exp: 2, flag: 'uy' },\n  UZS: { name: 'Uzbekistani som', symbol: 'лв', exp: 2, flag: 'uz' },\n  VEF: { name: 'Venezuelan bolivar', symbol: 'Bs', exp: 2, flag: 've' },\n  VND: { name: 'Vietnamese Dong', symbol: '₫', exp: 0, flag: 'vn' },\n  VUV: { name: 'Vanuatu Vatu', symbol: 'VT', exp: 0, flag: 'vu' },\n  WST: { name: 'Samoan Tālā', symbol: '$', exp: 2, flag: 'ws' },\n  YER: { name: 'Yemeni Rial', symbol: 'YER', exp: 2, flag: 'ye' },\n  ZAR: { name: 'South African Rand', symbol: 'R', exp: 2, flag: 'za' },\n  ZMW: { name: 'Zambian Kwacha', symbol: 'ZMK', exp: 2, flag: 'zm' },\n  ZWD: { name: 'Zimbabwean Dollar', symbol: 'Z$', exp: 2, flag: 'zw' },\n  XAU: { name: 'Gold, troy ounce', symbol: 'XAU', exp: 2 }\n};\n\nexport interface ExchangeRateT {\n  [code: string]: number;\n}\n\ntype CurrencyOptionT = {\n  key: string;\n  value: string;\n  text: string;\n  flag?: string;\n};\n\nconst Currency = {\n  defaultBase: 'USD',\n  options(): CurrencyOptionT[] {\n    return Object.keys(CURRENCY).map(code => ({\n      key: code,\n      value: code,\n      flag: CURRENCY[code].flag,\n      text: `${code}, ${CURRENCY[code].name}`\n    }));\n  },\n  name(code: string) {\n    return CURRENCY[code].name;\n  },\n  symbol(code: string) {\n    return CURRENCY[code].symbol;\n  },\n  minAmount(code: string) {\n    return Number(`1e-${CURRENCY[code].exp}`);\n  },\n  /**\n   * Convert value to currency's subunit (e.g. cents for USD).\n   * Subunit is the minimal currency unit and it is always whole integer.\n   */\n  numberToCents(value: string | number, code: string) {\n    return Math.round(parseFloat(`${value}e${CURRENCY[code].exp}`));\n  },\n  /**\n   * Convert value from subunit back to float representation with formatting.\n   * For example 199001 USD becomes 1,990.01 USD\n   */\n  centsToNumber(value: number, code: string): number {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return num;\n  },\n  centsToString(value: number, code: string, format: boolean = true): string {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return format\n      ? num.toLocaleString(undefined, {\n          minimumFractionDigits: exp,\n          maximumFractionDigits: exp\n        })\n      : num.toString();\n  },\n  centsToDollar(value: number, code: string): string {\n    const exp = CURRENCY[code].exp;\n    const num = Number(`${value}e-${exp}`);\n\n    return num.toLocaleString(undefined, { maximumFractionDigits: 0 });\n  },\n  convert(value: number, rate: number, from: string, to: string) {\n    return (value / rate) * Math.pow(10, CURRENCY[from].exp - CURRENCY[to].exp);\n  }\n};\n\nexport default Currency;\n"]},"metadata":{},"sourceType":"module"}