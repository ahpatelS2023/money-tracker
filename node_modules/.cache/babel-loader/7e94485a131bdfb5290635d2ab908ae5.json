{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(sendCodeSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(verifyCodeSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(finishAuthSaga);\n\nimport { takeLatest, select, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport Auth from 'util/auth';\nimport { getSignInEmail, getSignInCode } from './SignIn.selector';\nimport * as SignIn from './SignIn.action';\nimport { syncSaga } from 'sagas/sync';\nimport { loadSetting } from 'sagas/settings';\nimport { isUserLoggedIn } from 'features/user/state/User.saga';\nexport function sendCodeSaga() {\n  var email;\n  return _regeneratorRuntime.wrap(function sendCodeSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return select(getSignInEmail);\n\n        case 2:\n          email = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return call(Auth.sendCode, email);\n\n        case 6:\n          _context.next = 8;\n          return put(SignIn.sendCodeSuccess());\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 14;\n          return put(SignIn.sendCodeFailure(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[3, 10]]);\n}\nexport function verifyCodeSaga() {\n  var email, code;\n  return _regeneratorRuntime.wrap(function verifyCodeSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return select(getSignInEmail);\n\n        case 2:\n          email = _context2.sent;\n          _context2.next = 5;\n          return select(getSignInCode);\n\n        case 5:\n          code = _context2.sent;\n          _context2.prev = 6;\n          _context2.next = 9;\n          return call(Auth.verifyCode, email, code);\n\n        case 9:\n          _context2.next = 11;\n          return put(SignIn.verifyCodeSuccess());\n\n        case 11:\n          _context2.next = 17;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](6);\n          _context2.next = 17;\n          return put(SignIn.verifyCodeFailure(_context2.t0));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[6, 13]]);\n}\nexport function finishAuthSaga() {\n  var accessToken, userInfo;\n  return _regeneratorRuntime.wrap(function finishAuthSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return call(Auth.parseHash);\n\n        case 2:\n          accessToken = _context3.sent;\n          _context3.next = 5;\n          return call(Auth.getUserInfo, accessToken);\n\n        case 5:\n          userInfo = _context3.sent;\n          _context3.next = 8;\n          return call([localStorage, 'setItem'], 'userInfo', JSON.stringify(userInfo));\n\n        case 8:\n          _context3.next = 10;\n          return loadSetting();\n\n        case 10:\n          _context3.next = 12;\n          return syncSaga();\n\n        case 12:\n          _context3.next = 14;\n          return isUserLoggedIn();\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\nexport default [takeLatest(getType(SignIn.sendCode), sendCodeSaga), takeLatest(getType(SignIn.verifyCode), verifyCodeSaga), takeLatest(getType(SignIn.finishAuth), finishAuthSaga)];","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/features/user/state/ui/SignIn.saga.ts"],"names":["sendCodeSaga","verifyCodeSaga","finishAuthSaga","takeLatest","select","call","put","getType","Auth","getSignInEmail","getSignInCode","SignIn","syncSaga","loadSetting","isUserLoggedIn","email","sendCode","sendCodeSuccess","sendCodeFailure","code","verifyCode","verifyCodeSuccess","verifyCodeFailure","parseHash","accessToken","getUserInfo","userInfo","localStorage","JSON","stringify","finishAuth"],"mappings":";;;;yBASiBA,Y;;;yBAUAC,c;;;yBAWAC,c;;AA9BjB,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,GAAnC,QAA8C,oBAA9C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,mBAA9C;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,OAAO,SAAUd,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACS,iBAAMI,MAAM,CAACK,cAAD,CAAZ;;AADT;AACCM,UAAAA,KADD;AAAA;AAAA;AAGH,iBAAMV,IAAI,CAACG,IAAI,CAACQ,QAAN,EAAgBD,KAAhB,CAAV;;AAHG;AAAA;AAIH,iBAAMT,GAAG,CAACK,MAAM,CAACM,eAAP,EAAD,CAAT;;AAJG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMH,iBAAMX,GAAG,CAACK,MAAM,CAACO,eAAP,aAAD,CAAT;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAAUjB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACS,iBAAMG,MAAM,CAACK,cAAD,CAAZ;;AADT;AACCM,UAAAA,KADD;AAAA;AAEQ,iBAAMX,MAAM,CAACM,aAAD,CAAZ;;AAFR;AAECS,UAAAA,IAFD;AAAA;AAAA;AAIH,iBAAMd,IAAI,CAACG,IAAI,CAACY,UAAN,EAAkBL,KAAlB,EAAyBI,IAAzB,CAAV;;AAJG;AAAA;AAKH,iBAAMb,GAAG,CAACK,MAAM,CAACU,iBAAP,EAAD,CAAT;;AALG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMf,GAAG,CAACK,MAAM,CAACW,iBAAP,cAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAUpB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe,iBAAMG,IAAI,CAACG,IAAI,CAACe,SAAN,CAAV;;AADf;AACCC,UAAAA,WADD;AAAA;AAEY,iBAAMnB,IAAI,CAACG,IAAI,CAACiB,WAAN,EAAmBD,WAAnB,CAAV;;AAFZ;AAECE,UAAAA,QAFD;AAAA;AAGL,iBAAMrB,IAAI,CAAC,CAACsB,YAAD,EAAe,SAAf,CAAD,EAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAxC,CAAV;;AAHK;AAAA;AAKL,iBAAMb,WAAW,EAAjB;;AALK;AAAA;AAML,iBAAMD,QAAQ,EAAd;;AANK;AAAA;AAOL,iBAAME,cAAc,EAApB;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,eAAe,CACbX,UAAU,CAACI,OAAO,CAACI,MAAM,CAACK,QAAR,CAAR,EAA2BhB,YAA3B,CADG,EAEbG,UAAU,CAACI,OAAO,CAACI,MAAM,CAACS,UAAR,CAAR,EAA6BnB,cAA7B,CAFG,EAGbE,UAAU,CAACI,OAAO,CAACI,MAAM,CAACmB,UAAR,CAAR,EAA6B5B,cAA7B,CAHG,CAAf","sourcesContent":["import { takeLatest, select, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport Auth from 'util/auth';\nimport { getSignInEmail, getSignInCode } from './SignIn.selector';\nimport * as SignIn from './SignIn.action';\nimport { syncSaga } from 'sagas/sync';\nimport { loadSetting } from 'sagas/settings';\nimport { isUserLoggedIn } from 'features/user/state/User.saga';\n\nexport function* sendCodeSaga() {\n  const email = yield select(getSignInEmail);\n  try {\n    yield call(Auth.sendCode, email);\n    yield put(SignIn.sendCodeSuccess());\n  } catch (error) {\n    yield put(SignIn.sendCodeFailure(error));\n  }\n}\n\nexport function* verifyCodeSaga() {\n  const email = yield select(getSignInEmail);\n  const code = yield select(getSignInCode);\n  try {\n    yield call(Auth.verifyCode, email, code);\n    yield put(SignIn.verifyCodeSuccess());\n  } catch (error) {\n    yield put(SignIn.verifyCodeFailure(error));\n  }\n}\n\nexport function* finishAuthSaga() {\n  const accessToken = yield call(Auth.parseHash);\n  const userInfo = yield call(Auth.getUserInfo, accessToken);\n  yield call([localStorage, 'setItem'], 'userInfo', JSON.stringify(userInfo));\n\n  yield loadSetting();\n  yield syncSaga();\n  yield isUserLoggedIn();\n}\n\nexport default [\n  takeLatest(getType(SignIn.sendCode), sendCodeSaga),\n  takeLatest(getType(SignIn.verifyCode), verifyCodeSaga),\n  takeLatest(getType(SignIn.finishAuth), finishAuthSaga)\n];\n"]},"metadata":{},"sourceType":"module"}