{"ast":null,"code":"import PouchDB from 'pouchdb';\nvar instancePool = {};\n\nfunction instance(name) {\n  if (instancePool[name] === undefined) {\n    instancePool[name] = new PouchDB(name, {\n      auto_compaction: true\n    });\n  }\n\n  return instancePool[name];\n}\n\nfunction remoteInstance(name) {\n  var instanceName = \"remote_\".concat(name);\n\n  if (instancePool[instanceName] === undefined) {\n    var userInfo = JSON.parse(localStorage.getItem('userInfo'));\n\n    if (userInfo && userInfo.couchDB && userInfo.couchDB[name]) {\n      var _userInfo$couchDB = userInfo.couchDB,\n          username = _userInfo$couchDB.username,\n          password = _userInfo$couchDB.password;\n      instancePool[instanceName] = new PouchDB(userInfo.couchDB[name], {\n        skipSetup: true,\n        auth: username && password ? {\n          username: username,\n          password: password\n        } : undefined\n      });\n    }\n  }\n\n  return instancePool[instanceName];\n}\n\nfunction destroyInstance(name) {\n  if (instancePool[name] !== undefined) {\n    var _instance = instancePool[name];\n    delete instancePool[name];\n    delete instancePool[\"remote_\".concat(name)];\n    return _instance.destroy();\n  }\n}\n\nexport var settingsDB = function settingsDB() {\n  return instance('settings');\n};\nexport var accountsDB = function accountsDB() {\n  return instance('accounts');\n};\nexport var transactionsDB = function transactionsDB() {\n  return instance('transactions');\n};\nexport var tagsDB = function tagsDB() {\n  return instance('tags');\n};\nexport var remoteSettingsDB = function remoteSettingsDB() {\n  return remoteInstance('settings');\n};\nexport var remoteAccountsDB = function remoteAccountsDB() {\n  return remoteInstance('accounts');\n};\nexport var remoteTransactionsDB = function remoteTransactionsDB() {\n  return remoteInstance('transactions');\n};\nexport var remoteTagsDB = function remoteTagsDB() {\n  return remoteInstance('tags');\n};\nexport var destroySettingsDB = function destroySettingsDB() {\n  return destroyInstance('settings');\n};\nexport var destroyAccountsDB = function destroyAccountsDB() {\n  return destroyInstance('accounts');\n};\nexport var destroyTransactionsDB = function destroyTransactionsDB() {\n  return destroyInstance('transactions');\n};\nexport var destroyTagsDB = function destroyTagsDB() {\n  return destroyInstance('tags');\n};","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/util/storage/pouchdb.js"],"names":["PouchDB","instancePool","instance","name","undefined","auto_compaction","remoteInstance","instanceName","userInfo","JSON","parse","localStorage","getItem","couchDB","username","password","skipSetup","auth","destroyInstance","destroy","settingsDB","accountsDB","transactionsDB","tagsDB","remoteSettingsDB","remoteAccountsDB","remoteTransactionsDB","remoteTagsDB","destroySettingsDB","destroyAccountsDB","destroyTransactionsDB","destroyTagsDB"],"mappings":"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","sourcesContent":["import PouchDB from 'pouchdb';\n\nconst instancePool = {};\n\nfunction instance(name) {\n  if (instancePool[name] === undefined) {\n    instancePool[name] = new PouchDB(name, { auto_compaction: true });\n  }\n\n  return instancePool[name];\n}\n\nfunction remoteInstance(name) {\n  const instanceName = `remote_${name}`;\n  if (instancePool[instanceName] === undefined) {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    if (userInfo && userInfo.couchDB && userInfo.couchDB[name]) {\n      const { username, password } = userInfo.couchDB;\n      instancePool[instanceName] = new PouchDB(userInfo.couchDB[name], {\n        skipSetup: true,\n        auth: username && password ? { username, password } : undefined\n      });\n    }\n  }\n\n  return instancePool[instanceName];\n}\n\nfunction destroyInstance(name) {\n  if (instancePool[name] !== undefined) {\n    const instance = instancePool[name];\n    delete instancePool[name];\n    delete instancePool[`remote_${name}`];\n\n    return instance.destroy();\n  }\n}\n\nexport const settingsDB = () => instance('settings');\nexport const accountsDB = () => instance('accounts');\nexport const transactionsDB = () => instance('transactions');\nexport const tagsDB = () => instance('tags');\nexport const remoteSettingsDB = () => remoteInstance('settings');\nexport const remoteAccountsDB = () => remoteInstance('accounts');\nexport const remoteTransactionsDB = () => remoteInstance('transactions');\nexport const remoteTagsDB = () => remoteInstance('tags');\nexport const destroySettingsDB = () => destroyInstance('settings');\nexport const destroyAccountsDB = () => destroyInstance('accounts');\nexport const destroyTransactionsDB = () => destroyInstance('transactions');\nexport const destroyTagsDB = () => destroyInstance('tags');\n"]},"metadata":{},"sourceType":"module"}