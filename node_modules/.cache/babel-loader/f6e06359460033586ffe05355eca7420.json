{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signOutSaga);\n\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport { signOut, signOutSuccess, signOutFailure } from './SignOut.action';\nimport { loadSetting } from 'sagas/settings';\nimport { isDemoUser } from 'features/user/state/User.saga';\nimport AccountsStorage from 'util/storage/accounts';\nimport SettingsStorage from 'util/storage/settings';\nimport TagsStorage from 'util/storage/tags';\nimport TransactionsStorage from 'util/storage/transactions';\nexport function signOutSaga() {\n  return _regeneratorRuntime.wrap(function signOutSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(AccountsStorage.destroy);\n\n        case 3:\n          _context.next = 5;\n          return call(SettingsStorage.destroy);\n\n        case 5:\n          _context.next = 7;\n          return call(TagsStorage.destroy);\n\n        case 7:\n          _context.next = 9;\n          return call(TransactionsStorage.destroy);\n\n        case 9:\n          _context.next = 11;\n          return call([localStorage, 'clear']);\n\n        case 11:\n          _context.next = 13;\n          return put(signOutSuccess());\n\n        case 13:\n          _context.next = 15;\n          return isDemoUser();\n\n        case 15:\n          _context.next = 17;\n          return loadSetting();\n\n        case 17:\n          _context.next = 23;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 23;\n          return put(signOutFailure(_context.t0));\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 19]]);\n}\nexport default [takeLatest(getType(signOut), signOutSaga)];","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/features/user/state/ui/SignOut.saga.ts"],"names":["signOutSaga","takeLatest","call","put","getType","signOut","signOutSuccess","signOutFailure","loadSetting","isDemoUser","AccountsStorage","SettingsStorage","TagsStorage","TransactionsStorage","destroy","localStorage"],"mappings":";;;;yBAUiBA,W;;AAVjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,cAAlC,QAAwD,kBAAxD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AAEA,OAAO,SAAUb,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAME,IAAI,CAACQ,eAAe,CAACI,OAAjB,CAAV;;AAFG;AAAA;AAGH,iBAAMZ,IAAI,CAACS,eAAe,CAACG,OAAjB,CAAV;;AAHG;AAAA;AAIH,iBAAMZ,IAAI,CAACU,WAAW,CAACE,OAAb,CAAV;;AAJG;AAAA;AAKH,iBAAMZ,IAAI,CAACW,mBAAmB,CAACC,OAArB,CAAV;;AALG;AAAA;AAMH,iBAAMZ,IAAI,CAAC,CAACa,YAAD,EAAe,OAAf,CAAD,CAAV;;AANG;AAAA;AAQH,iBAAMZ,GAAG,CAACG,cAAc,EAAf,CAAT;;AARG;AAAA;AASH,iBAAMG,UAAU,EAAhB;;AATG;AAAA;AAUH,iBAAMD,WAAW,EAAjB;;AAVG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYH,iBAAML,GAAG,CAACI,cAAc,aAAf,CAAT;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBP,eAAe,CAACN,UAAU,CAACG,OAAO,CAACC,OAAD,CAAR,EAAmBL,WAAnB,CAAX,CAAf","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport { signOut, signOutSuccess, signOutFailure } from './SignOut.action';\nimport { loadSetting } from 'sagas/settings';\nimport { isDemoUser } from 'features/user/state/User.saga';\nimport AccountsStorage from 'util/storage/accounts';\nimport SettingsStorage from 'util/storage/settings';\nimport TagsStorage from 'util/storage/tags';\nimport TransactionsStorage from 'util/storage/transactions';\n\nexport function* signOutSaga() {\n  try {\n    yield call(AccountsStorage.destroy);\n    yield call(SettingsStorage.destroy);\n    yield call(TagsStorage.destroy);\n    yield call(TransactionsStorage.destroy);\n    yield call([localStorage, 'clear']);\n\n    yield put(signOutSuccess());\n    yield isDemoUser();\n    yield loadSetting();\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport default [takeLatest(getType(signOut), signOutSaga)];\n"]},"metadata":{},"sourceType":"module"}