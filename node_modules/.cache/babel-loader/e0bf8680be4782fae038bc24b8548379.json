{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { tagsDB, remoteTagsDB, destroyTagsDB } from './pouchdb';\nexport default {\n  sync: sync,\n  load: load,\n  updateUsage: updateUsage,\n  destroy: destroy\n};\n\nfunction sync() {\n  return _sync.apply(this, arguments);\n}\n\nfunction _sync() {\n  _sync = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var readOnly,\n        hasChanges,\n        from,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            readOnly = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n            hasChanges = false;\n\n            if (remoteTagsDB()) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", hasChanges);\n\n          case 4:\n            _context.next = 6;\n            return tagsDB().replicate.from(remoteTagsDB());\n\n          case 6:\n            from = _context.sent;\n            if (from.docs_written > 0) hasChanges = true;\n\n            if (!readOnly) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", hasChanges);\n\n          case 10:\n            _context.next = 12;\n            return tagsDB().replicate.to(remoteTagsDB());\n\n          case 12:\n            return _context.abrupt(\"return\", hasChanges);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _sync.apply(this, arguments);\n}\n\nfunction destroy() {\n  return destroyTagsDB();\n}\n\nfunction load(kind) {\n  return tagsDB().allDocs({\n    include_docs: true,\n    start_key: \"t\".concat(kind),\n    end_key: \"t\".concat(kind, \"\\uFFFF\")\n  }).then(function (response) {\n    return response.rows.map(function (row) {\n      return {\n        tag: row.doc._id.split('/')[1],\n        usage: row.doc.usage\n      };\n    });\n  }).then(function (docs) {\n    return docs.sort(function (a, b) {\n      return b.usage - a.usage;\n    });\n  }).then(function (docs) {\n    return docs.map(function (doc) {\n      return doc.tag;\n    });\n  });\n}\n\nfunction updateUsage(kind, tag, delta) {\n  var id = \"t\".concat(kind, \"/\").concat(tag);\n  return tagsDB().get(id).then(function (doc) {\n    return tagsDB().put(_objectSpread({}, doc, {\n      usage: parseInt(doc.usage, 10) + delta\n    }));\n  }).catch(function (err) {\n    if (err.status !== 404) throw err;\n    return tagsDB().put({\n      _id: id,\n      usage: 1\n    });\n  });\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/util/storage/tags.js"],"names":["tagsDB","remoteTagsDB","destroyTagsDB","sync","load","updateUsage","destroy","readOnly","hasChanges","replicate","from","docs_written","to","kind","allDocs","include_docs","start_key","end_key","then","response","rows","map","row","tag","doc","_id","split","usage","docs","sort","a","b","delta","id","get","put","parseInt","catch","err","status"],"mappings":"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","sourcesContent":["import { tagsDB, remoteTagsDB, destroyTagsDB } from './pouchdb';\n\nexport default {\n  sync,\n  load,\n  updateUsage,\n  destroy\n};\n\nasync function sync(readOnly = false) {\n  let hasChanges = false;\n  if (!remoteTagsDB()) return hasChanges;\n\n  const from = await tagsDB().replicate.from(remoteTagsDB());\n  if (from.docs_written > 0) hasChanges = true;\n  if (readOnly) return hasChanges;\n\n  await tagsDB().replicate.to(remoteTagsDB());\n\n  return hasChanges;\n}\n\nfunction destroy() {\n  return destroyTagsDB();\n}\n\nfunction load(kind) {\n  return tagsDB()\n    .allDocs({\n      include_docs: true,\n      start_key: `t${kind}`,\n      end_key: `t${kind}\\uffff`\n    })\n    .then(response =>\n      response.rows.map(row => ({\n        tag: row.doc._id.split('/')[1],\n        usage: row.doc.usage\n      }))\n    )\n    .then(docs => docs.sort((a, b) => b.usage - a.usage))\n    .then(docs => docs.map(doc => doc.tag));\n}\n\nfunction updateUsage(kind, tag, delta) {\n  const id = `t${kind}/${tag}`;\n  return tagsDB()\n    .get(id)\n    .then(doc =>\n      tagsDB().put({ ...doc, usage: parseInt(doc.usage, 10) + delta })\n    )\n    .catch(err => {\n      if (err.status !== 404) throw err;\n\n      return tagsDB().put({ _id: id, usage: 1 });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}