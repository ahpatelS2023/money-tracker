{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(isDemoUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(isUserLoggedIn);\n\nimport { call, put } from 'redux-saga/effects';\nimport { syncSaga } from 'sagas/sync';\nimport * as user from './User.action';\nexport function isDemoUser() {\n  var userInfo;\n  return _regeneratorRuntime.wrap(function isDemoUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(window.location.hostname === process.env.REACT_APP_DEMO_HOST)) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 3;\n          return call([localStorage, 'getItem'], 'userInfo');\n\n        case 3:\n          userInfo = _context.sent;\n\n          if (userInfo) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return call([localStorage, 'setItem'], 'userInfo', JSON.stringify({\n            couchDB: {\n              accounts: process.env.REACT_APP_DEMO_DB_ACCOUNTS,\n              settings: process.env.REACT_APP_DEMO_DB_SETTINGS,\n              tags: process.env.REACT_APP_DEMO_DB_TAGS,\n              transactions: process.env.REACT_APP_DEMO_DB_TRANSACTIONS\n            }\n          }));\n\n        case 7:\n          _context.next = 9;\n          return syncSaga();\n\n        case 9:\n          _context.next = 11;\n          return put(user.setDemoUser());\n\n        case 11:\n          _context.next = 13;\n          return put(user.signInSuccess());\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\nexport function isUserLoggedIn() {\n  var userInfo;\n  return _regeneratorRuntime.wrap(function isUserLoggedIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call([localStorage, 'getItem'], 'userInfo');\n\n        case 2:\n          userInfo = _context2.sent;\n\n          if (!userInfo) {\n            _context2.next = 6;\n            break;\n          }\n\n          _context2.next = 6;\n          return put(user.signInSuccess());\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/features/user/state/User.saga.ts"],"names":["isDemoUser","isUserLoggedIn","call","put","syncSaga","user","window","location","hostname","process","env","REACT_APP_DEMO_HOST","localStorage","userInfo","JSON","stringify","couchDB","accounts","REACT_APP_DEMO_DB_ACCOUNTS","settings","REACT_APP_DEMO_DB_SETTINGS","tags","REACT_APP_DEMO_DB_TAGS","transactions","REACT_APP_DEMO_DB_TRANSACTIONS","setDemoUser","signInSuccess"],"mappings":";;;;yBAIiBA,U;;;yBAuBAC,c;;AA3BjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AAEA,OAAO,SAAUL,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACDM,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6BC,OAAO,CAACC,GAAR,CAAYC,mBADxC;AAAA;AAAA;AAAA;;AAAA;AAEc,iBAAMT,IAAI,CAAC,CAACU,YAAD,EAAe,SAAf,CAAD,EAA4B,UAA5B,CAAV;;AAFd;AAEGC,UAAAA,QAFH;;AAAA,cAGEA,QAHF;AAAA;AAAA;AAAA;;AAAA;AAID,iBAAMX,IAAI,CACR,CAACU,YAAD,EAAe,SAAf,CADQ,EAER,UAFQ,EAGRE,IAAI,CAACC,SAAL,CAAe;AACbC,YAAAA,OAAO,EAAE;AACPC,cAAAA,QAAQ,EAAER,OAAO,CAACC,GAAR,CAAYQ,0BADf;AAEPC,cAAAA,QAAQ,EAAEV,OAAO,CAACC,GAAR,CAAYU,0BAFf;AAGPC,cAAAA,IAAI,EAAEZ,OAAO,CAACC,GAAR,CAAYY,sBAHX;AAIPC,cAAAA,YAAY,EAAEd,OAAO,CAACC,GAAR,CAAYc;AAJnB;AADI,WAAf,CAHQ,CAAV;;AAJC;AAAA;AAgBD,iBAAMpB,QAAQ,EAAd;;AAhBC;AAAA;AAkBH,iBAAMD,GAAG,CAACE,IAAI,CAACoB,WAAL,EAAD,CAAT;;AAlBG;AAAA;AAmBH,iBAAMtB,GAAG,CAACE,IAAI,CAACqB,aAAL,EAAD,CAAT;;AAnBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBP,OAAO,SAAUzB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACY,iBAAMC,IAAI,CAAC,CAACU,YAAD,EAAe,SAAf,CAAD,EAA4B,UAA5B,CAAV;;AADZ;AACCC,UAAAA,QADD;;AAAA,eAEDA,QAFC;AAAA;AAAA;AAAA;;AAAA;AAES,iBAAMV,GAAG,CAACE,IAAI,CAACqB,aAAL,EAAD,CAAT;;AAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { syncSaga } from 'sagas/sync';\nimport * as user from './User.action';\n\nexport function* isDemoUser() {\n  if (window.location.hostname === process.env.REACT_APP_DEMO_HOST) {\n    const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\n    if (!userInfo) {\n      yield call(\n        [localStorage, 'setItem'],\n        'userInfo',\n        JSON.stringify({\n          couchDB: {\n            accounts: process.env.REACT_APP_DEMO_DB_ACCOUNTS,\n            settings: process.env.REACT_APP_DEMO_DB_SETTINGS,\n            tags: process.env.REACT_APP_DEMO_DB_TAGS,\n            transactions: process.env.REACT_APP_DEMO_DB_TRANSACTIONS\n          }\n        })\n      );\n      yield syncSaga();\n    }\n    yield put(user.setDemoUser());\n    yield put(user.signInSuccess());\n  }\n}\n\nexport function* isUserLoggedIn() {\n  const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\n  if (userInfo) yield put(user.signInSuccess());\n}\n"]},"metadata":{},"sourceType":"module"}