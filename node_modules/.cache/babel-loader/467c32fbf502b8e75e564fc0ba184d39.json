{"ast":null,"code":"export var saveWaitTime = function saveWaitTime() {\n  var totalWaitTime = parseInt(localStorage.getItem('total_wait_time'));\n  var numberOfWaits = parseInt(localStorage.getItem('number_of_waits'));\n\n  if (numberOfWaits === null || isNaN(numberOfWaits)) {\n    totalWaitTime = 0;\n    numberOfWaits = 0;\n  }\n\n  var entries = performance.getEntries();\n  var currentWait = 0;\n  entries.forEach(function (entry) {\n    if (!isNaN(entry.duration)) {\n      currentWait += entry.duration;\n    }\n  });\n  totalWaitTime += currentWait;\n  numberOfWaits += 1;\n  console.log('currentWait', currentWait);\n  console.log('totalWaitTime', totalWaitTime);\n  localStorage.setItem('total_wait_time', totalWaitTime);\n  localStorage.setItem('number_of_waits', numberOfWaits);\n};","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/tracking/wrapper/wait.js"],"names":["saveWaitTime","totalWaitTime","parseInt","localStorage","getItem","numberOfWaits","isNaN","entries","performance","getEntries","currentWait","forEach","entry","duration","console","log","setItem"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,MAAIC,aAAa,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAD,CAA5B;AACA,MAAIC,aAAa,GAAGH,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAD,CAA5B;;AAEA,MAAIC,aAAa,KAAK,IAAlB,IAA0BC,KAAK,CAACD,aAAD,CAAnC,EAAoD;AAChDJ,IAAAA,aAAa,GAAG,CAAhB;AACAI,IAAAA,aAAa,GAAG,CAAhB;AACH;;AAED,MAAIE,OAAO,GAAGC,WAAW,CAACC,UAAZ,EAAd;AACA,MAAIC,WAAW,GAAG,CAAlB;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACrB,QAAI,CAACN,KAAK,CAACM,KAAK,CAACC,QAAP,CAAV,EAA4B;AACxBH,MAAAA,WAAW,IAAIE,KAAK,CAACC,QAArB;AACH;AACJ,GAJD;AAMAZ,EAAAA,aAAa,IAAIS,WAAjB;AACAL,EAAAA,aAAa,IAAI,CAAjB;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,WAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bd,aAA7B;AAEAE,EAAAA,YAAY,CAACa,OAAb,CAAqB,iBAArB,EAAwCf,aAAxC;AACAE,EAAAA,YAAY,CAACa,OAAb,CAAqB,iBAArB,EAAwCX,aAAxC;AACH,CAzBM","sourcesContent":["export const saveWaitTime = () => {\n    let totalWaitTime = parseInt(localStorage.getItem('total_wait_time'));\n    let numberOfWaits = parseInt(localStorage.getItem('number_of_waits'));\n\n    if (numberOfWaits === null || isNaN(numberOfWaits)) {\n        totalWaitTime = 0;\n        numberOfWaits = 0;\n    }\n\n    let entries = performance.getEntries();\n    let currentWait = 0;\n    entries.forEach(entry => {\n        if (!isNaN(entry.duration)) {\n            currentWait += entry.duration;\n        }\n    });\n\n    totalWaitTime += currentWait;\n    numberOfWaits += 1;\n\n    console.log('currentWait', currentWait);\n    console.log('totalWaitTime', totalWaitTime);\n\n    localStorage.setItem('total_wait_time', totalWaitTime);\n    localStorage.setItem('number_of_waits', numberOfWaits);\n};\n"]},"metadata":{},"sourceType":"module"}