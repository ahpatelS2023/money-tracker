{"ast":null,"code":"import _toConsumableArray from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Account/Form/BalanceTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Input, Form } from 'semantic-ui-react';\nimport Amount from '../../../components/Amount';\nimport Currency from '../../../entities/Currency';\n\nvar BalanceTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BalanceTable, _React$Component);\n\n  function BalanceTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BalanceTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BalanceTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCurrencyChange = function (event, _ref) {\n      var value = _ref.value;\n\n      _this.props.toggleCurrency(value);\n    };\n\n    _this.handleBalanceChange = function (code) {\n      return function (event, _ref2) {\n        var value = _ref2.value;\n\n        _this.props.changeBalance({\n          code: code,\n          balance: value\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(BalanceTable, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.updateCurrencyList(this.props.base, this.props.secondary);\n      this.setInitialCurrencyCheckbox(this.props.base);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.updateCurrencyList(nextProps.base, nextProps.secondary);\n      this.setInitialCurrencyCheckbox(nextProps.base);\n    }\n  }, {\n    key: \"updateCurrencyList\",\n    value: function updateCurrencyList(base, secondary) {\n      this.currencies = [base].concat(_toConsumableArray(secondary));\n    }\n  }, {\n    key: \"setInitialCurrencyCheckbox\",\n    value: function setInitialCurrencyCheckbox(base) {\n      if (this.props.form.currencies.length === 0) {\n        this.props.toggleCurrency(base);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.currencies.map(function (code) {\n        return React.createElement(Form.Group, {\n          unstackable: true,\n          key: code,\n          style: {\n            marginBottom: '1em',\n            marginTop: '1em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          className: \"checkbox\",\n          width: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          value: code,\n          label: Currency.name(code),\n          checked: _this2.props.form.currencies.includes(code),\n          onChange: _this2.handleCurrencyChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          className: \"input-right\",\n          width: 7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, _this2.props.form.id ? React.createElement(Amount, {\n          code: code,\n          value: Currency.numberToCents(_this2.props.form.balance[code] || 0, code),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }) : React.createElement(Input, {\n          fluid: true,\n          type: \"number\",\n          placeholder: \"Balance\",\n          labelPosition: \"right\",\n          label: code,\n          step: Currency.minAmount(code),\n          value: _this2.props.form.balance[code] || '',\n          onChange: _this2.handleBalanceChange(code),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return BalanceTable;\n}(React.Component);\n\nBalanceTable.propTypes = {\n  base: PropTypes.string.isRequired,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    balance: PropTypes.objectOf(PropTypes.string),\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  toggleCurrency: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func.isRequired\n};\nexport default BalanceTable;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Account/Form/BalanceTable.js"],"names":["React","PropTypes","Checkbox","Input","Form","Amount","Currency","BalanceTable","handleCurrencyChange","event","value","props","toggleCurrency","handleBalanceChange","code","changeBalance","balance","updateCurrencyList","base","secondary","setInitialCurrencyCheckbox","nextProps","currencies","form","length","map","marginBottom","marginTop","name","includes","id","numberToCents","minAmount","Component","propTypes","string","isRequired","arrayOf","shape","objectOf","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, Input, Form } from 'semantic-ui-react';\nimport Amount from '../../../components/Amount';\nimport Currency from '../../../entities/Currency';\n\nclass BalanceTable extends React.Component {\n  componentWillMount() {\n    this.updateCurrencyList(this.props.base, this.props.secondary);\n    this.setInitialCurrencyCheckbox(this.props.base);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateCurrencyList(nextProps.base, nextProps.secondary);\n    this.setInitialCurrencyCheckbox(nextProps.base);\n  }\n\n  updateCurrencyList(base, secondary) {\n    this.currencies = [base, ...secondary];\n  }\n\n  setInitialCurrencyCheckbox(base) {\n    if (this.props.form.currencies.length === 0) {\n      this.props.toggleCurrency(base);\n    }\n  }\n\n  handleCurrencyChange = (event, { value }) => {\n    this.props.toggleCurrency(value);\n  };\n\n  handleBalanceChange = code => (event, { value }) => {\n    this.props.changeBalance({ code, balance: value });\n  };\n\n  render() {\n    return this.currencies.map(code => (\n      <Form.Group\n        unstackable\n        key={code}\n        style={{ marginBottom: '1em', marginTop: '1em' }}\n      >\n        <Form.Field className=\"checkbox\" width={9}>\n          <Checkbox\n            value={code}\n            label={Currency.name(code)}\n            checked={this.props.form.currencies.includes(code)}\n            onChange={this.handleCurrencyChange}\n          />\n        </Form.Field>\n        <Form.Field className=\"input-right\" width={7}>\n          {this.props.form.id ? (\n            <Amount\n              code={code}\n              value={Currency.numberToCents(\n                this.props.form.balance[code] || 0,\n                code\n              )}\n            />\n          ) : (\n            <Input\n              fluid\n              type=\"number\"\n              placeholder=\"Balance\"\n              labelPosition=\"right\"\n              label={code}\n              step={Currency.minAmount(code)}\n              value={this.props.form.balance[code] || ''}\n              onChange={this.handleBalanceChange(code)}\n            />\n          )}\n        </Form.Field>\n      </Form.Group>\n    ));\n  }\n}\n\nBalanceTable.propTypes = {\n  base: PropTypes.string.isRequired,\n  secondary: PropTypes.arrayOf(PropTypes.string),\n  form: PropTypes.shape({\n    id: PropTypes.string,\n    balance: PropTypes.objectOf(PropTypes.string),\n    currencies: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  toggleCurrency: PropTypes.func.isRequired,\n  changeBalance: PropTypes.func.isRequired\n};\n\nexport default BalanceTable;\n"]},"metadata":{},"sourceType":"module"}