{"ast":null,"code":"import { WebAuth } from 'auth0-js';\n/**\n * @see https://auth0.com/docs/connections/passwordless/spa-email-code/v8\n */\n\nvar auth0 = new WebAuth({\n  domain: process.env.REACT_APP_AUTH_DOMAIN,\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT,\n  responseType: 'token'\n});\nexport default {\n  sendCode: sendCode,\n  verifyCode: verifyCode,\n  parseHash: parseHash,\n  getUserInfo: getUserInfo\n};\n\nfunction sendCode(email) {\n  return new Promise(function (resolve, reject) {\n    auth0.passwordlessStart({\n      connection: 'email',\n      send: 'code',\n      email: email\n    }, function (error, result) {\n      return error ? reject(error) : resolve(result);\n    });\n  });\n}\n\nfunction verifyCode(email, verificationCode) {\n  return new Promise(function (resolve, reject) {\n    auth0.passwordlessLogin({\n      connection: 'email',\n      email: email,\n      verificationCode: verificationCode\n    }, function (error, result) {\n      return error ? reject(error) : resolve(result);\n    });\n  });\n}\n\nfunction parseHash() {\n  return new Promise(function (resolve, reject) {\n    auth0.parseHash(function (error, authResult) {\n      if (error) return reject(error);\n      resolve(authResult.accessToken);\n    });\n  });\n}\n\nfunction getUserInfo(accessToken) {\n  return new Promise(function (resolve, reject) {\n    auth0.client.userInfo(accessToken, function (error, userInfo) {\n      if (error) return reject(error);\n      resolve({\n        accessToken: accessToken,\n        couchDB: userInfo.couchDB\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/util/auth.js"],"names":["WebAuth","auth0","domain","process","env","REACT_APP_AUTH_DOMAIN","clientID","REACT_APP_AUTH_CLIENT_ID","redirectUri","REACT_APP_AUTH_REDIRECT","responseType","sendCode","verifyCode","parseHash","getUserInfo","email","Promise","resolve","reject","passwordlessStart","connection","send","error","result","verificationCode","passwordlessLogin","authResult","accessToken","client","userInfo","couchDB"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA;;;;AAGA,IAAMC,KAAK,GAAG,IAAID,OAAJ,CAAY;AACxBE,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADI;AAExBC,EAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,wBAFE;AAGxBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,uBAHD;AAIxBC,EAAAA,YAAY,EAAE;AAJU,CAAZ,CAAd;AAOA,eAAe;AACbC,EAAAA,QAAQ,EAARA,QADa;AAEbC,EAAAA,UAAU,EAAVA,UAFa;AAGbC,EAAAA,SAAS,EAATA,SAHa;AAIbC,EAAAA,WAAW,EAAXA;AAJa,CAAf;;AAOA,SAASH,QAAT,CAAkBI,KAAlB,EAAyB;AACvB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,IAAAA,KAAK,CAACkB,iBAAN,CACE;AACEC,MAAAA,UAAU,EAAE,OADd;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEN,MAAAA,KAAK,EAALA;AAHF,KADF,EAME,UAACO,KAAD,EAAQC,MAAR;AAAA,aAAoBD,KAAK,GAAGJ,MAAM,CAACI,KAAD,CAAT,GAAmBL,OAAO,CAACM,MAAD,CAAnD;AAAA,KANF;AAQD,GATM,CAAP;AAUD;;AAED,SAASX,UAAT,CAAoBG,KAApB,EAA2BS,gBAA3B,EAA6C;AAC3C,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,IAAAA,KAAK,CAACwB,iBAAN,CACE;AACEL,MAAAA,UAAU,EAAE,OADd;AAEEL,MAAAA,KAAK,EAALA,KAFF;AAGES,MAAAA,gBAAgB,EAAhBA;AAHF,KADF,EAME,UAACF,KAAD,EAAQC,MAAR;AAAA,aAAoBD,KAAK,GAAGJ,MAAM,CAACI,KAAD,CAAT,GAAmBL,OAAO,CAACM,MAAD,CAAnD;AAAA,KANF;AAQD,GATM,CAAP;AAUD;;AAED,SAASV,SAAT,GAAqB;AACnB,SAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,IAAAA,KAAK,CAACY,SAAN,CAAgB,UAACS,KAAD,EAAQI,UAAR,EAAuB;AACrC,UAAIJ,KAAJ,EAAW,OAAOJ,MAAM,CAACI,KAAD,CAAb;AAEXL,MAAAA,OAAO,CAACS,UAAU,CAACC,WAAZ,CAAP;AACD,KAJD;AAKD,GANM,CAAP;AAOD;;AAED,SAASb,WAAT,CAAqBa,WAArB,EAAkC;AAChC,SAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,IAAAA,KAAK,CAAC2B,MAAN,CAAaC,QAAb,CAAsBF,WAAtB,EAAmC,UAACL,KAAD,EAAQO,QAAR,EAAqB;AACtD,UAAIP,KAAJ,EAAW,OAAOJ,MAAM,CAACI,KAAD,CAAb;AAEXL,MAAAA,OAAO,CAAC;AAAEU,QAAAA,WAAW,EAAXA,WAAF;AAAeG,QAAAA,OAAO,EAAED,QAAQ,CAACC;AAAjC,OAAD,CAAP;AACD,KAJD;AAKD,GANM,CAAP;AAOD","sourcesContent":["import { WebAuth } from 'auth0-js';\n/**\n * @see https://auth0.com/docs/connections/passwordless/spa-email-code/v8\n */\nconst auth0 = new WebAuth({\n  domain: process.env.REACT_APP_AUTH_DOMAIN,\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT,\n  responseType: 'token'\n});\n\nexport default {\n  sendCode,\n  verifyCode,\n  parseHash,\n  getUserInfo\n};\n\nfunction sendCode(email) {\n  return new Promise((resolve, reject) => {\n    auth0.passwordlessStart(\n      {\n        connection: 'email',\n        send: 'code',\n        email\n      },\n      (error, result) => (error ? reject(error) : resolve(result))\n    );\n  });\n}\n\nfunction verifyCode(email, verificationCode) {\n  return new Promise((resolve, reject) => {\n    auth0.passwordlessLogin(\n      {\n        connection: 'email',\n        email,\n        verificationCode\n      },\n      (error, result) => (error ? reject(error) : resolve(result))\n    );\n  });\n}\n\nfunction parseHash() {\n  return new Promise((resolve, reject) => {\n    auth0.parseHash((error, authResult) => {\n      if (error) return reject(error);\n\n      resolve(authResult.accessToken);\n    });\n  });\n}\n\nfunction getUserInfo(accessToken) {\n  return new Promise((resolve, reject) => {\n    auth0.client.userInfo(accessToken, (error, userInfo) => {\n      if (error) return reject(error);\n\n      resolve({ accessToken, couchDB: userInfo.couchDB });\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}