{"ast":null,"code":"import _toConsumableArray from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { TransationKindT } from '../../entities/Transaction';\nexport var getTagOptions = function getTagOptions(state) {\n  return state.entities.tags[state.ui.form.transaction.kind].map(function (tag) {\n    return {\n      key: tag,\n      value: tag,\n      text: tag\n    };\n  });\n};\nexport var getAllTagsOptions = function getAllTagsOptions(state) {\n  return _toConsumableArray(new Set(_toConsumableArray(state.entities.tags[TransationKindT.Expense]).concat(_toConsumableArray(state.entities.tags[TransationKindT.Income])))).map(function (tag) {\n    return {\n      key: tag,\n      value: tag,\n      text: tag\n    };\n  });\n};","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/selectors/entities/tags.js"],"names":["TransationKindT","getTagOptions","state","entities","tags","ui","form","transaction","kind","map","tag","key","value","text","getAllTagsOptions","Set","Expense","Income"],"mappings":";AAAA,SAASA,eAAT,QAAgC,4BAAhC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAChCA,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBF,KAAK,CAACG,EAAN,CAASC,IAAT,CAAcC,WAAd,CAA0BC,IAA9C,EAAoDC,GAApD,CAAwD,UAAAC,GAAG;AAAA,WAAK;AAC9DC,MAAAA,GAAG,EAAED,GADyD;AAE9DE,MAAAA,KAAK,EAAEF,GAFuD;AAG9DG,MAAAA,IAAI,EAAEH;AAHwD,KAAL;AAAA,GAA3D,CADgC;AAAA,CAA3B;AAOP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAZ,KAAK;AAAA,SACpC,mBACK,IAAIa,GAAJ,oBACEb,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBJ,eAAe,CAACgB,OAApC,CADF,4BAEEd,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBJ,eAAe,CAACiB,MAApC,CAFF,GADL,EAKER,GALF,CAKM,UAAAC,GAAG;AAAA,WAAK;AACZC,MAAAA,GAAG,EAAED,GADO;AAEZE,MAAAA,KAAK,EAAEF,GAFK;AAGZG,MAAAA,IAAI,EAAEH;AAHM,KAAL;AAAA,GALT,CADoC;AAAA,CAA/B","sourcesContent":["import { TransationKindT } from '../../entities/Transaction';\n\nexport const getTagOptions = state =>\n  state.entities.tags[state.ui.form.transaction.kind].map(tag => ({\n    key: tag,\n    value: tag,\n    text: tag\n  }));\n\nexport const getAllTagsOptions = state =>\n  [\n    ...new Set([\n      ...state.entities.tags[TransationKindT.Expense],\n      ...state.entities.tags[TransationKindT.Income]\n    ])\n  ].map(tag => ({\n    key: tag,\n    value: tag,\n    text: tag\n  }));\n"]},"metadata":{},"sourceType":"module"}