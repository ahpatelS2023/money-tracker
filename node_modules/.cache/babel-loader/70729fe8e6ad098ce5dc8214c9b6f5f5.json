{"ast":null,"code":"var _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/components/Transaction/Form/Account.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport Currency from '../../../entities/Currency';\n\nvar Account = function Account(props) {\n  return React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    width: 11,\n    className: \"mobile-with-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.label), React.createElement(Dropdown, {\n    selection: true,\n    options: props.accountOptions,\n    value: props.accountId,\n    onChange: props.onAccountChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    width: 5,\n    className: \"mobile-with-margin input-right no-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Input, {\n    required: true,\n    type: \"number\",\n    min: Currency.minAmount(props.currency),\n    step: Currency.minAmount(props.currency),\n    value: props.amount,\n    onChange: props.onAmountChange,\n    labelPosition: \"right\",\n    label: props.currencyOptions.length === 1 ? props.currencyOptions[0].text : React.createElement(Dropdown, {\n      options: props.currencyOptions,\n      value: props.currency,\n      onChange: props.onCurrencyChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nAccount.propTypes = {\n  label: PropTypes.string,\n  accountId: PropTypes.string,\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n  currencyOptions: PropTypes.arrayOf(DropdownOption),\n  onAccountChange: PropTypes.func,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func\n};\nexport default Account;","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/components/Transaction/Form/Account.js"],"names":["React","PropTypes","Dropdown","Form","Input","DropdownOption","Currency","Account","props","label","accountOptions","accountId","onAccountChange","minAmount","currency","amount","onAmountChange","currencyOptions","length","text","onCurrencyChange","propTypes","string","arrayOf","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,mBAAtC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,EAAnB;AAAuB,IAAA,SAAS,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAK,CAACC,KAAd,CADF,EAEE,oBAAC,QAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAED,KAAK,CAACE,cAFjB;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACG,SAHf;AAIE,IAAA,QAAQ,EAAEH,KAAK,CAACI,eAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAsB,IAAA,SAAS,EAAC,yCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,GAAG,EAAEN,QAAQ,CAACO,SAAT,CAAmBL,KAAK,CAACM,QAAzB,CAHP;AAIE,IAAA,IAAI,EAAER,QAAQ,CAACO,SAAT,CAAmBL,KAAK,CAACM,QAAzB,CAJR;AAKE,IAAA,KAAK,EAAEN,KAAK,CAACO,MALf;AAME,IAAA,QAAQ,EAAEP,KAAK,CAACQ,cANlB;AAOE,IAAA,aAAa,EAAC,OAPhB;AAQE,IAAA,KAAK,EACHR,KAAK,CAACS,eAAN,CAAsBC,MAAtB,KAAiC,CAAjC,GACEV,KAAK,CAACS,eAAN,CAAsB,CAAtB,EAAyBE,IAD3B,GAGE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEX,KAAK,CAACS,eADjB;AAEE,MAAA,KAAK,EAAET,KAAK,CAACM,QAFf;AAGE,MAAA,QAAQ,EAAEN,KAAK,CAACY,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADmB;AAAA,CAArB;;AAoCAb,OAAO,CAACc,SAAR,GAAoB;AAClBZ,EAAAA,KAAK,EAAER,SAAS,CAACqB,MADC;AAElBX,EAAAA,SAAS,EAAEV,SAAS,CAACqB,MAFH;AAGlBZ,EAAAA,cAAc,EAAET,SAAS,CAACsB,OAAV,CAAkBlB,cAAlB,CAHE;AAIlBU,EAAAA,MAAM,EAAEd,SAAS,CAACqB,MAJA;AAKlBR,EAAAA,QAAQ,EAAEb,SAAS,CAACqB,MALF;AAMlBL,EAAAA,eAAe,EAAEhB,SAAS,CAACsB,OAAV,CAAkBlB,cAAlB,CANC;AAOlBO,EAAAA,eAAe,EAAEX,SAAS,CAACuB,IAPT;AAQlBR,EAAAA,cAAc,EAAEf,SAAS,CAACuB,IARR;AASlBJ,EAAAA,gBAAgB,EAAEnB,SAAS,CAACuB;AATV,CAApB;AAYA,eAAejB,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\nimport { DropdownOption } from '../../types';\nimport Currency from '../../../entities/Currency';\n\nconst Account = props => (\n  <Form.Group>\n    <Form.Field width={11} className=\"mobile-with-margin\">\n      <label>{props.label}</label>\n      <Dropdown\n        selection\n        options={props.accountOptions}\n        value={props.accountId}\n        onChange={props.onAccountChange}\n      />\n    </Form.Field>\n    <Form.Field width={5} className=\"mobile-with-margin input-right no-label\">\n      <Input\n        required\n        type=\"number\"\n        min={Currency.minAmount(props.currency)}\n        step={Currency.minAmount(props.currency)}\n        value={props.amount}\n        onChange={props.onAmountChange}\n        labelPosition=\"right\"\n        label={\n          props.currencyOptions.length === 1 ? (\n            props.currencyOptions[0].text\n          ) : (\n            <Dropdown\n              options={props.currencyOptions}\n              value={props.currency}\n              onChange={props.onCurrencyChange}\n            />\n          )\n        }\n      />\n    </Form.Field>\n  </Form.Group>\n);\n\nAccount.propTypes = {\n  label: PropTypes.string,\n  accountId: PropTypes.string,\n  accountOptions: PropTypes.arrayOf(DropdownOption),\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n  currencyOptions: PropTypes.arrayOf(DropdownOption),\n  onAccountChange: PropTypes.func,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}