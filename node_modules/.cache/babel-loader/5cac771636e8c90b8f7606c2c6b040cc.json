{"ast":null,"code":"/**\r\n * @module  string-to-arraybuffer\r\n */\n'use strict';\n\nvar atob = require('atob-lite');\n\nvar isBase64 = require('is-base64');\n\nmodule.exports = function stringToArrayBuffer(arg) {\n  if (typeof arg !== 'string') throw Error('Argument should be a string'); //valid data uri\n\n  if (/^data\\:/i.test(arg)) return decode(arg); //base64\n\n  if (isBase64(arg)) arg = atob(arg);\n  return str2ab(arg);\n};\n\nfunction str2ab(str) {\n  var array = new Uint8Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array.buffer;\n}\n\nfunction decode(uri) {\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, ''); // split the URI up into the \"metadata\" and the \"data\" portions\n\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data-URI'); // remove the \"data:\" scheme and parse the metadata\n\n  var meta = uri.substring(5, firstComma).split(';');\n  var base64 = false;\n  var charset = 'US-ASCII';\n\n  for (var i = 0; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else if (0 == meta[i].indexOf('charset=')) {\n      charset = meta[i].substring(8);\n    }\n  } // get the encoded data portion and decode URI-encoded chars\n\n\n  var data = unescape(uri.substring(firstComma + 1));\n  if (base64) data = atob(data);\n  var abuf = str2ab(data);\n  abuf.type = meta[0] || 'text/plain';\n  abuf.charset = charset;\n  return abuf;\n}","map":null,"metadata":{},"sourceType":"script"}