{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/containers/Accounts/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { loadAccounts, removeAccountRequest, removeAccount } from '../../actions/entities/accounts';\nimport { openAccountInModal, resetAccountForm } from '../../actions/ui/form/account';\nimport { getForm, getModal } from '../../selectors/ui/form/account';\nimport ModalForm from '../../components/Account/ModalForm';\nimport AccountsList from './List';\nimport AccountForm from './Form';\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nvar Accounts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Accounts, _React$Component);\n\n  function Accounts() {\n    _classCallCheck(this, Accounts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Accounts).apply(this, arguments));\n  }\n\n  _createClass(Accounts, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.loadAccounts();\n      saveWaitTime();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-full-page flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"plus\",\n        labelPosition: \"left\",\n        content: \"New\",\n        onClick: this.props.openAccountInModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"accounts-list-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(AccountsList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(ModalForm, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Accounts;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    form: getForm(state),\n    modal: getModal(state),\n    isEdit: getForm(state).id !== undefined,\n    accountOptions: getAccountsAsOptions(state).filter(function (option) {\n      return option.key !== getForm(state).id;\n    }),\n    EditForm: AccountForm\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadAccounts: loadAccounts,\n  openAccountInModal: openAccountInModal,\n  resetAccountForm: resetAccountForm,\n  removeAccountRequest: removeAccountRequest,\n  removeAccount: removeAccount\n})(Accounts);","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/containers/Accounts/index.js"],"names":["React","connect","Button","loadAccounts","removeAccountRequest","removeAccount","openAccountInModal","resetAccountForm","getForm","getModal","ModalForm","AccountsList","AccountForm","getAccountsAsOptions","saveWaitTime","Accounts","props","Component","mapStateToProps","state","form","modal","isEdit","id","undefined","accountOptions","filter","option","key","EditForm"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SACEC,YADF,EAEEC,oBAFF,EAGEC,aAHF,QAIO,iCAJP;AAKA,SACEC,kBADF,EAEEC,gBAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,iCAAlC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,SAASC,YAAT,QAA6B,6BAA7B;;IAEMC,Q;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWb,YAAX;AACAW,MAAAA,YAAY;AACb;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,aAAa,EAAC,MAFhB;AAGE,QAAA,OAAO,EAAC,KAHV;AAIE,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWV,kBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXF,EAcE,oBAAC,SAAD,oBAAe,KAAKU,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdF,CADF;AAkBD;;;;EAzBoBhB,KAAK,CAACiB,S;;AA4B7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,IAAI,EAAEZ,OAAO,CAACW,KAAD,CADmB;AAEhCE,IAAAA,KAAK,EAAEZ,QAAQ,CAACU,KAAD,CAFiB;AAGhCG,IAAAA,MAAM,EAAEd,OAAO,CAACW,KAAD,CAAP,CAAeI,EAAf,KAAsBC,SAHE;AAIhCC,IAAAA,cAAc,EAAEZ,oBAAoB,CAACM,KAAD,CAApB,CAA4BO,MAA5B,CACd,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,GAAP,KAAepB,OAAO,CAACW,KAAD,CAAP,CAAeI,EAAlC;AAAA,KADQ,CAJgB;AAOhCM,IAAAA,QAAQ,EAAEjB;AAPsB,GAAL;AAAA,CAA7B;;AAUA,eAAeX,OAAO,CACpBiB,eADoB,EAEpB;AACEf,EAAAA,YAAY,EAAZA,YADF;AAEEG,EAAAA,kBAAkB,EAAlBA,kBAFF;AAGEC,EAAAA,gBAAgB,EAAhBA,gBAHF;AAIEH,EAAAA,oBAAoB,EAApBA,oBAJF;AAKEC,EAAAA,aAAa,EAAbA;AALF,CAFoB,CAAP,CASbU,QATa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport {\n  loadAccounts,\n  removeAccountRequest,\n  removeAccount\n} from '../../actions/entities/accounts';\nimport {\n  openAccountInModal,\n  resetAccountForm\n} from '../../actions/ui/form/account';\nimport { getForm, getModal } from '../../selectors/ui/form/account';\nimport ModalForm from '../../components/Account/ModalForm';\nimport AccountsList from './List';\nimport AccountForm from './Form';\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nclass Accounts extends React.Component {\n  componentWillMount() {\n    this.props.loadAccounts();\n    saveWaitTime();\n  }\n\n  render() {\n    return (\n      <div className=\"container-full-page flat\">\n        <div className=\"container-header\">\n          <Button.Group basic>\n            <Button\n              icon=\"plus\"\n              labelPosition=\"left\"\n              content=\"New\"\n              onClick={this.props.openAccountInModal}\n            />\n          </Button.Group>\n        </div>\n        <div className=\"accounts-list-wrapper\">\n          <AccountsList />\n        </div>\n        <ModalForm {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  form: getForm(state),\n  modal: getModal(state),\n  isEdit: getForm(state).id !== undefined,\n  accountOptions: getAccountsAsOptions(state).filter(\n    option => option.key !== getForm(state).id\n  ),\n  EditForm: AccountForm\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadAccounts,\n    openAccountInModal,\n    resetAccountForm,\n    removeAccountRequest,\n    removeAccount\n  }\n)(Accounts);\n"]},"metadata":{},"sourceType":"module"}