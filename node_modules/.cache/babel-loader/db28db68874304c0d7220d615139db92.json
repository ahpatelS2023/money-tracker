{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { getType } from 'typesafe-actions';\nimport * as user from './User.action';\nimport { UserUiReducer } from './ui';\nexport default combineReducers({\n  isDemoUser: function isDemoUser() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    return action.type === getType(user.setDemoUser) ? true : state;\n  },\n  isSignedIn: function isSignedIn() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    return action.type === getType(user.signInSuccess) ? true : state;\n  },\n  ui: UserUiReducer\n});","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/features/user/state/User.reducer.ts"],"names":["combineReducers","getType","user","UserUiReducer","isDemoUser","state","action","type","setDemoUser","isSignedIn","signInSuccess","ui"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAAqBC,OAArB,QAAoC,kBAApC;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAASC,aAAT,QAA2D,MAA3D;AAUA,eAAeH,eAAe,CAA0B;AACtDI,EAAAA,UAAU,EAAE,sBAA2B;AAAA,QAA1BC,KAA0B,uEAAlB,KAAkB;AAAA,QAAXC,MAAW;AACrC,WAAOA,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACC,IAAI,CAACM,WAAN,CAAvB,GAA4C,IAA5C,GAAmDH,KAA1D;AACD,GAHqD;AAItDI,EAAAA,UAAU,EAAE,sBAA2B;AAAA,QAA1BJ,KAA0B,uEAAlB,KAAkB;AAAA,QAAXC,MAAW;AACrC,WAAOA,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACC,IAAI,CAACQ,aAAN,CAAvB,GAA8C,IAA9C,GAAqDL,KAA5D;AACD,GANqD;AAOtDM,EAAAA,EAAE,EAAER;AAPkD,CAA1B,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { ActionType, getType } from 'typesafe-actions';\nimport * as user from './User.action';\nimport { UserUiReducer, UserUiStateT, UserUiActionT } from './ui';\n\nexport interface UserStateT {\n  readonly isDemoUser: boolean;\n  readonly isSignedIn: boolean;\n  readonly ui: UserUiStateT;\n}\n\nexport type UserActionT = ActionType<typeof user> & UserUiActionT;\n\nexport default combineReducers<UserStateT, UserActionT>({\n  isDemoUser: (state = false, action) => {\n    return action.type === getType(user.setDemoUser) ? true : state;\n  },\n  isSignedIn: (state = false, action) => {\n    return action.type === getType(user.signInSuccess) ? true : state;\n  },\n  ui: UserUiReducer\n});\n"]},"metadata":{},"sourceType":"module"}