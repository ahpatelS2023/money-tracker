{"ast":null,"code":"import _classCallCheck from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amipatel/Desktop/money-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amipatel/Desktop/money-tracker/src/containers/InitialSetup/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Modal } from 'semantic-ui-react';\nimport CurrencyInput from '../Settings/Currency/Input';\nimport CurrencyExchangeRate from '../Settings/Currency/ExchangeRate';\nimport AccountForm from '../Accounts/Form';\nimport AccountList from '../Accounts/List';\nimport { completeSetup } from '../../actions/settings';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { getAccountsList } from '../../selectors/entities/accounts';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nvar InitialSetup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InitialSetup, _React$Component);\n\n  function InitialSetup() {\n    _classCallCheck(this, InitialSetup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InitialSetup).apply(this, arguments));\n  }\n\n  _createClass(InitialSetup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadAccounts();\n      saveWaitTime();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-raised-desktop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        icon: \"settings\",\n        content: \"Money Tracker Setup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), !this.props.isAuthenticated && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Sign in\"), \" if you want to sync your data with the cloud. You may also use the tracker without signing in. Your data will be stored only on current device in this case. You can sign in and sync your data any time later.\"), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Currencies\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Select your base currency \\u2014 the currency which will be used by default.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \"You can also select any number of additional currencies, if you use them.\"), React.createElement(CurrencyInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(CurrencyExchangeRate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Accounts\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Create accounts that you would like to keep track of.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), \"It could be cash in your wallet, bank accounts, credit cards or even a loan to your friend.\"), React.createElement(AccountForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), this.props.accounts.length > 0 && React.createElement(\"div\", {\n        style: {\n          margin: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(AccountList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        content: \"Finish\",\n        onClick: this.props.completeSetup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return InitialSetup;\n}(React.Component);\n\nInitialSetup.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  accounts: PropTypes.arrayOf(PropTypes.object),\n  loadAccounts: PropTypes.func,\n  completeSetup: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: isSignedIn(state),\n    accounts: getAccountsList(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadAccounts: loadAccounts,\n  completeSetup: completeSetup\n})(InitialSetup);","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/containers/InitialSetup/index.js"],"names":["React","PropTypes","connect","Link","Button","Divider","Header","Modal","CurrencyInput","CurrencyExchangeRate","AccountForm","AccountList","completeSetup","loadAccounts","getAccountsList","isSignedIn","saveWaitTime","InitialSetup","props","isAuthenticated","accounts","length","margin","Component","propTypes","bool","arrayOf","object","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Modal } from 'semantic-ui-react';\nimport CurrencyInput from '../Settings/Currency/Input';\nimport CurrencyExchangeRate from '../Settings/Currency/ExchangeRate';\nimport AccountForm from '../Accounts/Form';\nimport AccountList from '../Accounts/List';\nimport { completeSetup } from '../../actions/settings';\nimport { loadAccounts } from '../../actions/entities/accounts';\nimport { getAccountsList } from '../../selectors/entities/accounts';\nimport { isSignedIn } from 'features/user/state/User.selector';\nimport { saveWaitTime } from '../../tracking/wrapper/wait';\n\nclass InitialSetup extends React.Component {\n  componentDidMount() {\n    this.props.loadAccounts();\n    saveWaitTime();\n  }\n\n  render() {\n    return (\n      <div className=\"container-raised-desktop\">\n        <Header as=\"h2\" icon=\"settings\" content=\"Money Tracker Setup\" />\n        <Divider />\n        {!this.props.isAuthenticated && (\n          <p>\n            <Link to=\"/auth\">Sign in</Link> if you want to sync your data with\n            the cloud. You may also use the tracker without signing in. Your\n            data will be stored only on current device in this case. You can\n            sign in and sync your data any time later.\n          </p>\n        )}\n        <Header as=\"h2\">Currencies</Header>\n        <p>\n          Select your base currency — the currency which will be used by\n          default.\n          <br />\n          You can also select any number of additional currencies, if you use\n          them.\n        </p>\n        <CurrencyInput />\n        <CurrencyExchangeRate />\n        <Header as=\"h2\">Accounts</Header>\n        <p>\n          Create accounts that you would like to keep track of.\n          <br />\n          It could be cash in your wallet, bank accounts, credit cards or even a\n          loan to your friend.\n        </p>\n        <AccountForm />\n        {this.props.accounts.length > 0 && (\n          <div style={{ margin: '1em' }}>\n            <AccountList />\n            <div className=\"form-submit\">\n              <Button\n                primary\n                content=\"Finish\"\n                onClick={this.props.completeSetup}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nInitialSetup.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  accounts: PropTypes.arrayOf(PropTypes.object),\n  loadAccounts: PropTypes.func,\n  completeSetup: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: isSignedIn(state),\n  accounts: getAccountsList(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadAccounts, completeSetup }\n)(InitialSetup);\n"]},"metadata":{},"sourceType":"module"}