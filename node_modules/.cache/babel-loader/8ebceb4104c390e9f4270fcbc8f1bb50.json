{"ast":null,"code":"import format from 'date-fns/format';\nimport { createSelector } from 'reselect';\nimport { pagerSizeMobile, pagerSizeDesktop } from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\nexport var getDateLabel = function getDateLabel(state) {\n  var dateStart = toLocalTimestamp(state.ui.transaction.filter.dateStart);\n  var dateEnd = toLocalTimestamp(state.ui.transaction.filter.dateEnd);\n  return format(dateStart, 'DD MMM') !== format(dateEnd, 'DD MMM') ? \"\".concat(format(dateStart, 'DD MMM'), \" \\u2014 \").concat(format(dateEnd, 'DD MMM')) : format(dateStart, 'MMMM, Do');\n};\nexport var getFilters = function getFilters(state) {\n  return {\n    date: {\n      start: state.ui.transaction.filter.dateStart,\n      end: state.ui.transaction.filter.dateEnd\n    },\n    accounts: new Set(state.ui.transaction.filter.applied.accounts),\n    tags: state.ui.transaction.filter.applied.tags || []\n  };\n};\nexport var getPage = function getPage(state) {\n  return state.ui.transaction.filter.page;\n};\nexport var getLastPage = function getLastPage(state) {\n  return Math.ceil(state.ui.transaction.filter.totalRows / state.ui.transaction.filter.perPage);\n};\nexport var getPagerSize = function getPagerSize(state) {\n  return state.ui.isMobile ? pagerSizeMobile : pagerSizeDesktop;\n};\nexport var getVisiblePages = createSelector(getPage, getLastPage, getPagerSize, function (current, last, size) {\n  var pages = [];\n  var offset = Math.max(0, last - current - Math.ceil(size / 2));\n  var windowRight = last > size ? Math.max(size, last - offset) : last;\n  var windowLeft = Math.max(0, windowRight - size);\n\n  for (var page = windowLeft; page < windowRight; page++) {\n    pages.push(page);\n  }\n\n  return pages;\n});","map":{"version":3,"sources":["/Users/amipatel/Desktop/money-tracker/src/selectors/ui/transaction/filter.js"],"names":["format","createSelector","pagerSizeMobile","pagerSizeDesktop","toLocalTimestamp","getDateLabel","state","dateStart","ui","transaction","filter","dateEnd","getFilters","date","start","end","accounts","Set","applied","tags","getPage","page","getLastPage","Math","ceil","totalRows","perPage","getPagerSize","isMobile","getVisiblePages","current","last","size","pages","offset","max","windowRight","windowLeft","push"],"mappings":"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","sourcesContent":["import format from 'date-fns/format';\nimport { createSelector } from 'reselect';\nimport {\n  pagerSizeMobile,\n  pagerSizeDesktop\n} from '../../../entities/Transaction';\nimport { toLocalTimestamp } from '../../../util/timezone';\n\nexport const getDateLabel = state => {\n  const dateStart = toLocalTimestamp(state.ui.transaction.filter.dateStart);\n  const dateEnd = toLocalTimestamp(state.ui.transaction.filter.dateEnd);\n  return format(dateStart, 'DD MMM') !== format(dateEnd, 'DD MMM')\n    ? `${format(dateStart, 'DD MMM')} â€” ${format(dateEnd, 'DD MMM')}`\n    : format(dateStart, 'MMMM, Do');\n};\n\nexport const getFilters = state => ({\n  date: {\n    start: state.ui.transaction.filter.dateStart,\n    end: state.ui.transaction.filter.dateEnd\n  },\n  accounts: new Set(state.ui.transaction.filter.applied.accounts),\n  tags: state.ui.transaction.filter.applied.tags || []\n});\n\nexport const getPage = state => state.ui.transaction.filter.page;\n\nexport const getLastPage = state => {\n  return Math.ceil(\n    state.ui.transaction.filter.totalRows / state.ui.transaction.filter.perPage\n  );\n};\n\nexport const getPagerSize = state =>\n  state.ui.isMobile ? pagerSizeMobile : pagerSizeDesktop;\n\nexport const getVisiblePages = createSelector(\n  getPage,\n  getLastPage,\n  getPagerSize,\n  (current, last, size) => {\n    const pages = [];\n    const offset = Math.max(0, last - current - Math.ceil(size / 2));\n    const windowRight = last > size ? Math.max(size, last - offset) : last;\n    const windowLeft = Math.max(0, windowRight - size);\n\n    for (let page = windowLeft; page < windowRight; page++) {\n      pages.push(page);\n    }\n\n    return pages;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}